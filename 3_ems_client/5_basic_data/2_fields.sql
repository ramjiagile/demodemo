
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";

SELECT @subscriber_id := `subscriber_id` FROM users where id=1;

--
-- Dumping data for table `fields`
--

INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(11, 2, 2, 'antioxidants_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AntioxidantsConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(12, 2, 2, 'antioxidants_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"},{\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.AntioxidantsConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(13, 2, 2, 'antioxidants_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.AntioxidantsConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(14, 2, 2, 'antioxidants_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AntioxidantsConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(15, 2, 2, 'antioxidants_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.AntioxidantsConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(16, 2, 2, 'antioxidants_consumptions', NULL, 'weight_unit_id', 'Anti-oxidant Unit', NULL, 'dropdown', 'Anti-oxidant Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AntioxidantsConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as weight_unit_id,units.name as weight_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(17, 2, 2, 'antioxidants_consumptions', NULL, 'consumption', 'Consumption', NULL, 'numeric', 'Consumption', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.AntioxidantsConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(18, 2, 2, 'antioxidants_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AntioxidantsConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(19, 2, 3, 'gas_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.GasConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 1),
(20, 2, 3, 'gas_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.GasConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 1),
(21, 2, 3, 'gas_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[\r\n{\r\n\"type\":\"date_format\",\"date\":\"start_date\"\r\n}\r\n]', 'models.GasConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 1),
(22, 2, 3, 'gas_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[\r\n{\r\n\"type\":\"date_format\",\"date\":\"end_date\"\r\n}\r\n]', 'models.GasConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 1),
(23, 2, 3, 'gas_consumptions', NULL, 'gas_type_id', 'Gas Type', NULL, 'dropdown', 'Gas Type', 'template_mandatory', 'visible', 'db.query(models.GasType.id, models.GasType.name).filter(and_(models.GasType.deleted == 0, models.GasType.record_status == 1, or_(models.GasType.subscriber_id == subscriber_id, models.GasType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.GasConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"gas_types\", \"select_columns\":\"gas_types.id as gas_type_id,gas_types.name as gas_type_name\", \"on_condition\": \"gas_types.id\", \"where_condition\":\"(gas_types.deleted = 0 OR gas_types.deleted IS NULL) AND (gas_types.record_status = 1 OR gas_types.record_status IS NULL)\"}', 0, 0, 1, 0, 1),
(24, 2, 3, 'gas_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.GasConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 1),
(25, 2, 3, 'gas_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, '[\r\n{\r\n \"type\": \"default\",\r\n \"column\" : \"cost\",\r\n \"value\": 0.0\r\n}\r\n]', 'models.GasConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 1),
(26, 2, 3, 'gas_consumptions', NULL, 'gas_unit_id', 'Gas Unit', NULL, 'dropdown', 'Gas Unit', 'template_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Gas Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.GasConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as gas_unit_id,units.name as gas_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Gas Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 1),
(27, 2, 3, 'gas_consumptions', NULL, 'consumption', 'Consumption', NULL, 'numeric', 'Consumption', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.GasConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(28, 2, 3, 'gas_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.GasConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 1),
(29, 2, 4, 'fuel_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(30, 2, 4, 'fuel_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(31, 2, 4, 'fuel_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'non_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', NULL, NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(32, 2, 4, 'fuel_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'non_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(33, 2, 4, 'fuel_consumptions', NULL, 'consumption', 'Consumption', NULL, 'numeric', 'Fuel Consumption', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(34, 2, 4, 'fuel_consumptions', NULL, 'volume_unit_id', 'Volume Unit', NULL, 'dropdown', 'Volume Unit', 'non_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Volume Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', NULL, NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as volume_unit_id,unit.name as volume_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Volume Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(35, 2, 4, 'fuel_consumptions', NULL, 'weight_unit_id', 'Weight Unit', NULL, 'dropdown', 'Weight Unit', 'non_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', NULL, NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as weight_unit_id,unit.name as weight_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Weight Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(36, 2, 4, 'fuel_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 0\r\n}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(37, 2, 4, 'fuel_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'non_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', NULL, NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(38, 2, 4, 'fuel_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(39, 2, 4, 'fuel_consumptions', NULL, 'fuel_type_id', 'Fuel Type', NULL, 'dropdown', 'Fuel Type', 'non_mandatory', 'visible', 'db.query(models.FuelType.id, models.FuelType.name).filter(and_(models.FuelType.deleted == 0, models.FuelType.record_status == 1, or_(models.FuelType.subscriber_id == subscriber_id, models.FuelType.subscriber_id == 1))).all()', NULL, NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"fuel_types\", \"select_columns\":\"fuel_types.id as fuel_type_id,fuel_types.name as fuel_type_name\", \"on_condition\": \"fuel_types.id\", \"where_condition\":\"(fuel_types.deleted = 0 OR fuel_types.deleted IS NULL)AND (fuel_types.record_status = 1 OR fuel_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(40, 2, 4, 'fuel_consumptions', NULL, 'vehicle_type_id', 'Vehicle Type', NULL, 'dropdown', 'Vehicle Type', 'non_mandatory', 'visible', 'db.query(models.VehicleType.id, models.VehicleType.name).filter(and_(models.VehicleType.deleted == 0, models.VehicleType.record_status == 1, or_(models.VehicleType.subscriber_id == subscriber_id, models.VehicleType.subscriber_id == 1))).order_by(models.VehicleType.sort_order).all()', NULL, NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"vehicle_types\", \"select_columns\":\"vehicle_types.id as vehicle_type_id,vehicle_types.name as vehicle_type_name\", \"on_condition\": \"vehicle_types.id\", \"where_condition\":\"(vehicle_types.deleted = 0 OR vehicle_types.deleted IS NULL)AND (vehicle_types.record_status = 1 OR vehicle_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(41, 2, 4, 'fuel_consumptions', NULL, 'distance', 'Distance', NULL, 'numeric', 'Distance', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(42, 2, 4, 'fuel_consumptions', NULL, 'distance_unit_id', 'Distance Unit', NULL, 'dropdown', 'Distance Unit', 'non_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', NULL, NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as distance_unit_id,units.name as distance_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Distance Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(43, 2, 5, 'detergent_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.DetergentConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(44, 2, 5, 'detergent_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.DetergentConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(45, 2, 5, 'detergent_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.DetergentConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(46, 2, 5, 'detergent_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.DetergentConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(47, 2, 5, 'detergent_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 0\r\n}]', 'models.DetergentConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(48, 2, 5, 'detergent_consumptions', NULL, 'weight_unit_id', 'Weight Unit', NULL, 'dropdown', 'Weight Unit', 'template_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.DetergentConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as weight_unit_id,units.name as weight_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(49, 2, 5, 'detergent_consumptions', NULL, 'consumption', 'Consumption', NULL, 'numeric', 'Consumption', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.DetergentConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(50, 2, 5, 'detergent_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.DetergentConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(51, 2, 6, 'commutes', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Commute', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(52, 2, 6, 'commutes', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.Commute', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(53, 2, 6, 'commutes', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.Commute', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(54, 2, 6, 'commutes', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.Commute', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(55, 2, 6, 'commutes', NULL, 'nb_pax', 'No of Pax', NULL, 'numeric', 'No of Pax', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Commute', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(56, 2, 6, 'commutes', NULL, 'consumption', 'Total Distance', NULL, 'numeric', 'Total Distance', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.Commute', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(57, 2, 6, 'commutes', NULL, 'distance_unit_id', 'Distance Unit', NULL, 'dropdown', 'Distance Unit', 'template_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Commute', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as distance_unit_id,units.name as distance_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Distance Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(58, 2, 6, 'commutes', NULL, 'transportation_mode_id', 'Mode of Transportation', NULL, 'dropdown', 'Mode of Transportation', 'template_mandatory', 'visible', 'db.query(models.TransportationMode.id, models.TransportationMode.name).filter(and_(models.TransportationMode.deleted == 0, models.TransportationMode.record_status == 1, or_(models.TransportationMode.subscriber_id == subscriber_id, models.TransportationMode.subscriber_id == 1))).order_by(models.TransportationMode.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Commute', 1, 'docs#/data-entry', '{\"table_name\": \"transportation_modes\", \"select_columns\":\"transportation_modes.id as transportation_mode_id,transportation_modes.name as transportation_mode_name\", \"on_condition\": \"transportation_modes.id\", \"where_condition\":\"(transportation_modes.deleted = 0 OR transportation_modes.deleted IS NULL)AND (transportation_modes.record_status = 1 OR transportation_modes.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(59, 2, 6, 'commutes', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Commute', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(60, 2, 7, 'customer_safety_records', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.CustomerSafetyRecord', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(61, 2, 7, 'customer_safety_records', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.CustomerSafetyRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(62, 2, 7, 'customer_safety_records', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.CustomerSafetyRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(63, 2, 7, 'customer_safety_records', NULL, 'customer_accident_type_id', 'Customer Accident Type', NULL, 'dropdown', 'Customer Accident Type', 'system_mandatory', 'visible', 'db.query(models.CustomerAccidentType.id,models.CustomerAccidentType.name).filter( and_(models.CustomerAccidentType.record_status == 1,models.CustomerAccidentType.deleted == 0,models.CustomerAccidentType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.CustomerSafetyRecord', 1, 'docs#/data-entry', '{\"table_name\": \"customer_accident_types\", \"select_columns\":\"customer_accident_types.id as customer_accident_type_id,customer_accident_types.name as customer_accident_type_name\", \"on_condition\": \"customer_accident_types.id\", \"where_condition\":\"(customer_accident_types.deleted = 0 OR customer_accident_types.deleted IS NULL)AND (customer_accident_types.record_status = 1 OR customer_accident_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(64, 2, 7, 'customer_safety_records', NULL, 'nb_incidents', 'No. of Incidents', NULL, 'numeric', 'No. of Incidents', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.CustomerSafetyRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(65, 2, 7, 'customer_safety_records', NULL, 'nb_fatal', 'No. of Fatalities', NULL, 'numeric', 'No. of Fatalities', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\":\"default\",\"value\":0}]', 'models.CustomerSafetyRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(66, 2, 7, 'customer_safety_records', NULL, 'nb_non_fatal', 'No. of Non-Fatalities', NULL, 'numeric', 'No. of Non-Fatalities', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\":\"default\",\"value\":0}]', 'models.CustomerSafetyRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(67, 2, 7, 'customer_safety_records', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.CustomerSafetyRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(68, 2, 8, 'improvements', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Improvement', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(69, 2, 8, 'improvements', NULL, 'title', 'Title', NULL, 'text', 'Title', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.Improvement', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(70, 2, 8, 'improvements', NULL, 'improvement_category_id', 'CSR and Environment Investment Type', NULL, 'dropdown', 'CSR and Environment Investment Type', 'system_mandatory', 'visible', 'db.query(models.ImprovementCategory.id,models.ImprovementCategory.name).filter( and_(models.ImprovementCategory.record_status == 1,models.ImprovementCategory.deleted == 0,models.ImprovementCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Improvement', 1, 'docs#/data-entry', '{\"table_name\": \"improvement_categories\", \"select_columns\":\"improvement_categories.id as improvement_category_id,improvement_categories.name as improvement_category_name\", \"on_condition\": \"improvement_categories.id\", \"where_condition\":\"(improvement_categories.deleted = 0 OR improvement_categories.deleted IS NULL)AND (improvement_categories.record_status = 1 OR improvement_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(71, 2, 8, 'improvements', NULL, 'improvement_type_id', 'CSR and Environment Investment Sub Type', NULL, 'dropdown', 'CSR and Environment Investment Sub Type', 'system_mandatory', 'visible', 'db.query(models.ImprovementType.id,models.ImprovementType.name).filter( and_(models.ImprovementType.record_status == 1,models.ImprovementType.deleted == 0,models.ImprovementType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Improvement', 1, 'docs#/data-entry', '{\"table_name\": \"improvement_types\", \"select_columns\":\"improvement_types.id as improvement_type_id,improvement_types.name as improvement_type_name\", \"on_condition\": \"improvement_types.id\", \"where_condition\":\"(improvement_types.deleted = 0 OR improvement_types.deleted IS NULL)AND (improvement_types.record_status = 1 OR improvement_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(72, 2, 8, 'improvements', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.Improvement', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(73, 2, 8, 'improvements', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.Improvement', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(74, 2, 8, 'improvements', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Improvement', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(75, 2, 8, 'improvements', NULL, 'amount', 'Amount', NULL, 'numeric', 'Amount', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.Improvement', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(76, 2, 8, 'improvements', NULL, 'man_days', 'Labour Investment (days)', NULL, 'numeric', 'Labour Investment (days)', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Improvement', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(77, 2, 8, 'improvements', NULL, 'desc', 'Description', NULL, 'text', 'Description', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Improvement', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(78, 2, 8, 'improvements', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Improvement', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(79, 2, 9, 'steam_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.SteamConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(80, 2, 9, 'steam_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.SteamConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(81, 2, 9, 'steam_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Name of consumption Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SteamConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(82, 2, 9, 'steam_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.SteamConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(83, 2, 9, 'steam_consumptions', NULL, 'consumption', 'Consumption', NULL, 'numeric', 'Steam Consumption', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.SteamConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(84, 2, 9, 'steam_consumptions', NULL, 'energy_unit_id', 'Steam Unit', NULL, 'dropdown', 'Steam Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Energy Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SteamConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as energy_unit_id,units.name as energy_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Energy Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(85, 2, 9, 'steam_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 0\r\n}]', 'models.SteamConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(86, 2, 9, 'steam_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SteamConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(87, 2, 9, 'steam_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SteamConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 346),
(88, 2, 10, 'lubricant_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.LubricantConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(89, 2, 10, 'lubricant_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.LubricantConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(90, 2, 10, 'lubricant_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.LubricantConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(91, 2, 10, 'lubricant_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.LubricantConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(92, 2, 10, 'lubricant_consumptions', NULL, 'consumption', 'Consumption', NULL, 'numeric', 'Lubricant Consumption', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.LubricantConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(93, 2, 10, 'lubricant_consumptions', NULL, 'volume_unit_id', 'Volume Unit', NULL, 'dropdown', 'Volume Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Volume Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.LubricantConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as volume_unit_id,units.name as volume_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Volume Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(94, 2, 10, 'lubricant_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 0,\r\n \"column\": \"cost\"\r\n}]', 'models.LubricantConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(95, 2, 10, 'lubricant_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.LubricantConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(96, 2, 10, 'lubricant_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.LubricantConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(97, 2, 11, 'refrigerant_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.RefrigerantConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(98, 2, 11, 'refrigerant_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.RefrigerantConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(99, 2, 11, 'refrigerant_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RefrigerantConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(100, 2, 11, 'refrigerant_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.RefrigerantConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(101, 2, 11, 'refrigerant_consumptions', NULL, 'consumption', 'Consumption', NULL, 'numeric', 'Refrigerant Consumption', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.RefrigerantConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(102, 2, 11, 'refrigerant_consumptions', NULL, 'refrigerant_type_id', 'Refrigerant Type', NULL, 'dropdown', 'Refrigerant Type', 'system_mandatory', 'visible', 'db.query(models.RefrigerantType.id, models.RefrigerantType.name).filter(and_(models.RefrigerantType.deleted == 0, models.RefrigerantType.record_status == 1, or_(models.RefrigerantType.subscriber_id == subscriber_id, models.RefrigerantType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RefrigerantConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"refrigerant_types\", \"select_columns\":\"refrigerant_types.id as refrigerant_type_id,refrigerant_types.name as refrigerant_type_name\", \"on_condition\": \"refrigerant_types.id\", \"where_condition\":\"(refrigerant_types.deleted = 0 OR refrigerant_types.deleted IS NULL)AND (refrigerant_types.record_status = 1 OR refrigerant_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(103, 2, 11, 'refrigerant_consumptions', NULL, 'weight_unit_id', 'Weight Unit', NULL, 'dropdown', 'Weight Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RefrigerantConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as weight_unit_id,units.name as weight_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(104, 2, 11, 'refrigerant_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 0\r\n}]', 'models.RefrigerantConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(105, 2, 11, 'refrigerant_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RefrigerantConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(106, 2, 11, 'refrigerant_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.RefrigerantConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(107, 2, 12, 'material_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.MaterialConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(108, 2, 12, 'material_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.MaterialConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(109, 2, 12, 'material_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.MaterialConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(110, 2, 12, 'material_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.MaterialConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(111, 2, 12, 'material_consumptions', NULL, 'consumption', 'Total Weight', NULL, 'numeric', 'Material Consumption', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"conditional_columns\": [{\"request\": \"nb_of_pieces\", \"identifier\": \"!=\", \"value\": 0}, {\"request\": \"weight_per_piece\", \"identifier\": \"!=\", \"value\": 0}, {\"request\": \"nb_of_pieces\", \"identifier\": \"!=\", \"value\": 0.00}, {\"request\": \"weight_per_piece\", \"identifier\": \"!=\", \"value\": 0.00}], \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.MaterialConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(112, 2, 12, 'material_consumptions', NULL, 'material_type_id', 'Material Type', NULL, 'dropdown', 'Material Type', 'template_mandatory', 'visible', 'db.query(models.MaterialType.id, models.MaterialType.name).filter(and_(models.MaterialType.deleted == 0, models.MaterialType.record_status == 1, or_(models.MaterialType.subscriber_id == subscriber_id, models.MaterialType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.MaterialConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"material_types\", \"select_columns\":\"material_types.id as material_type_id,material_types.name as material_type_name\", \"on_condition\": \"material_types.id\", \"where_condition\":\"(material_types.deleted = 0 OR material_types.deleted IS NULL)AND (material_types.record_status = 1 OR material_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(113, 2, 12, 'material_consumptions', NULL, 'weight_unit_id', 'Weight Unit', NULL, 'dropdown', 'Weight Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.MaterialConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as weight_unit_id,units.name as weight_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(114, 2, 12, 'material_consumptions', NULL, 'weight_per_piece', 'Weight Per Piece', NULL, 'numeric', 'Weight per Piece', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\":\"default\", \"value\":\"0.00\"}]', 'models.MaterialConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(115, 2, 12, 'material_consumptions', NULL, 'nb_of_pieces', 'No. of Pieces', NULL, 'numeric', 'No. of Pieces', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\": \"default\", \"value\": \"0\"}]', 'models.MaterialConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(116, 2, 12, 'material_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 0\r\n}]', 'models.MaterialConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(117, 2, 12, 'material_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.MaterialConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(118, 2, 12, 'material_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.MaterialConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(119, 2, 13, 'water_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.WaterConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(120, 2, 13, 'water_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.WaterConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(121, 2, 13, 'water_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(122, 2, 13, 'water_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'non_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.WaterConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(123, 2, 13, 'water_consumptions', NULL, 'consumption', 'Consumption', NULL, 'numeric', 'Water Consumption', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.WaterConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(124, 2, 13, 'water_consumptions', NULL, 'volume_unit_id', 'Volume Unit', NULL, 'dropdown', 'Volume Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Volume Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as volume_unit_id,units.name as volume_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Volume Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(125, 2, 13, 'water_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 0\r\n}]', 'models.WaterConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(126, 2, 13, 'water_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(127, 2, 13, 'water_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(128, 2, 13, 'water_consumptions', NULL, 'provider_id', 'Water Provider', NULL, 'dropdown', 'Water Provider', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id,models.ThirdParty.name).filter( and_(models.ThirdParty.type == \"provider\", models.ThirdParty.sub_type == \"WaterProvider\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).order_by(models.ThirdParty.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.type=\'provider\' AND third_parties.sub_type=\'WaterProvider\' AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(129, 2, 14, 'operational_risks', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.OperationalRisk', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(130, 2, 14, 'operational_risks', NULL, 'issue_category_id', 'Operational Risk Issue Type', NULL, 'dropdown', 'Operational Risk Issue Type', 'system_mandatory', 'visible', 'db.query(models.IssueCategory.id,models.IssueCategory.name).filter( and_(models.IssueCategory.record_status == 1,models.IssueCategory.deleted == 0,models.IssueCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.OperationalRisk', 1, 'docs#/data-entry', '{\"table_name\": \"issue_categories\", \"select_columns\":\"issue_categories.id as issue_category_id,issue_categories.name as issue_category_name\", \"on_condition\": \"issue_categories.id\", \"where_condition\":\"(issue_categories.deleted = 0 OR issue_categories.deleted IS NULL)AND (issue_categories.record_status = 1 OR issue_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(131, 2, 14, 'operational_risks', NULL, 'issue_type_id', 'Operational Risk Issue Subtype', NULL, 'dropdown', 'Operational Risk Issue Subtype', 'system_mandatory', 'visible', 'db.query(models.IssueType.id,models.IssueType.name).filter( and_(models.IssueType.record_status == 1,models.IssueType.deleted == 0,models.IssueType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.OperationalRisk', 1, 'docs#/data-entry', '{\"table_name\": \"issue_types\", \"select_columns\":\"issue_types.id as issue_type_id,issue_types.name as issue_type_name\", \"on_condition\": \"issue_types.id\", \"where_condition\":\"(issue_types.deleted = 0 OR issue_types.deleted IS NULL)AND (issue_types.record_status = 1 OR issue_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(132, 2, 14, 'operational_risks', NULL, 'report_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"report_date\"}]', 'models.OperationalRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(133, 2, 14, 'operational_risks', NULL, 'reference_no', 'Reference No', NULL, 'text', 'Reference No', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"reference_no\"], \"model_name\": \"models.OperationalRisk\", \"combination_column\": [\"reference_no\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.OperationalRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(134, 2, 14, 'operational_risks', NULL, 'description', 'Operational Risk Issue Description', NULL, 'text', 'Operational Risk Issue Description', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.OperationalRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(135, 2, 14, 'operational_risks', NULL, 'critical_concern', 'Critical Concern', NULL, 'dropdown', 'Critical Concern', 'non_mandatory', 'visible', NULL, '[{\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"Yes\", \"name\": \"Yes\"}, {\"id\": \"No\", \"name\": \"No\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, '[{\"type\":\"default\",\"column\":\"critical_concern\",\"value\":null}]', 'models.OperationalRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(136, 2, 14, 'operational_risks', NULL, 'operational_risk_status_id', 'Operational Risk Status', NULL, 'dropdown', 'Operational Risk Status', 'system_mandatory', 'visible', 'db.query(models.OperationalRiskStatus.id,models.OperationalRiskStatus.name).filter( and_(models.OperationalRiskStatus.record_status == 1,models.OperationalRiskStatus.deleted == 0,models.OperationalRiskStatus.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.OperationalRisk', 1, 'docs#/data-entry', '{\"table_name\": \"operational_risk_statuses\", \"select_columns\":\"operational_risk_statuses.id as operational_risk_status_id,operational_risk_statuses.name as operational_risk_status_name\", \"on_condition\": \"operational_risk_statuses.id\", \"where_condition\":\"(operational_risk_statuses.deleted = 0 OR operational_risk_statuses.deleted IS NULL)AND (operational_risk_statuses.record_status = 1 OR operational_risk_statuses.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(137, 2, 14, 'operational_risks', NULL, 'measure_taken_at', 'Measure Taken Date', NULL, 'date', 'Measure Taken Date', 'non_mandatory', 'visible', NULL, '[{\"date_format\":\"True\"}]', NULL, '[{\"type\":\"default\",\"column\":\"measure_taken_at\",\"value\":null},{\"type\":\"date_format\",\"date\":\"measure_taken_at\"}]', 'models.OperationalRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(138, 2, 14, 'operational_risks', NULL, 'measure_taken', 'Measure Description', NULL, 'text', 'Measure Description', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.OperationalRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(139, 2, 14, 'operational_risks', NULL, 'reviewed_at', 'Review Date', NULL, 'date', 'Review Date', 'non_mandatory', 'visible', NULL, '[{\"date_format\":\"True\"}]', NULL, '[{\"type\":\"default\",\"column\":\"reviewed_at\",\"value\":null},{\"type\":\"date_format\",\"date\":\"reviewed_at\"}]', 'models.OperationalRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(140, 2, 14, 'operational_risks', NULL, 'result_review', 'Review Result', NULL, 'text', 'Review Result', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.OperationalRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(141, 2, 14, 'operational_risks', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.OperationalRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(142, 2, 15, 'fines', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Fine', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(143, 2, 15, 'fines', NULL, 'title', 'Title', NULL, 'text', 'Title', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.Fine', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(144, 2, 15, 'fines', NULL, 'fine_type_id', 'Fine type', NULL, 'dropdown', 'Fine type', 'system_mandatory', 'visible', 'db.query(models.FineType.id,models.FineType.name).filter( and_(models.FineType.record_status == 1,models.FineType.deleted == 0,models.FineType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Fine', 1, 'docs#/data-entry', '{\"table_name\": \"fine_types\", \"select_columns\":\"fine_types.id as fine_type_id,fine_types.name as fine_type_name\", \"on_condition\": \"fine_types.id\", \"where_condition\":\"(fine_types.deleted = 0 OR fine_types.deleted IS NULL)AND (fine_types.record_status = 1 OR fine_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(145, 2, 15, 'fines', NULL, 'date_of_offence', 'Date of offence', NULL, 'date', 'Date of offence', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"date_of_offence\"}]', 'models.Fine', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(146, 2, 15, 'fines', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'non_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Fine', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(147, 2, 15, 'fines', NULL, 'amount', 'Cost', NULL, 'numeric', 'Fine Amount', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.Fine', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(148, 2, 15, 'fines', NULL, 'desc', 'Description', NULL, 'text', 'Description', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Fine', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(149, 2, 15, 'fines', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Fine', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(150, 2, 16, 'audits', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Audit', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(151, 2, 16, 'audits', NULL, 'conducted_at', 'Conducted On', NULL, 'date', 'Conducted On', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"conducted_at\"}]', 'models.Audit', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(152, 2, 16, 'audits', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Audit', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(166, 2, 18, 'vehicle_trackings', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.VehicleTracking', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(167, 2, 18, 'vehicle_trackings', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[\r\n{\r\n\"type\":\"date_format\",\"date\":\"start_date\"\r\n}\r\n]', 'models.VehicleTracking', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(168, 2, 18, 'vehicle_trackings', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[\r\n{\r\n\"type\":\"date_format\",\"date\":\"end_date\"\r\n}\r\n]', 'models.VehicleTracking', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(169, 2, 18, 'vehicle_trackings', NULL, 'tracking_category_id', 'Vehicle Type', NULL, 'dropdown', 'Vehicle Type', 'system_mandatory', 'visible', 'db.query(models.TrackingCategory.id,models.TrackingCategory.name).filter( and_(models.TrackingCategory.record_status == 1,models.TrackingCategory.deleted == 0,models.TrackingCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.VehicleTracking', 1, 'docs#/data-entry', '{\"table_name\": \"tracking_categories\", \"select_columns\":\"tracking_categories.id as tracking_category_id,tracking_categories.name as tracking_category_name\", \"on_condition\": \"tracking_categories.id\", \"where_condition\":\"(tracking_categories.deleted = 0 OR tracking_categories.deleted IS NULL)AND (tracking_categories.record_status = 1 OR tracking_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(170, 2, 18, 'vehicle_trackings', NULL, 'tracking_type_id', 'Vehicle Subtype', NULL, 'dropdown', 'Vehicle Subtype', 'system_mandatory', 'visible', 'db.query(models.TrackingType.id,models.TrackingType.name).filter( and_(models.TrackingType.record_status == 1,models.TrackingType.deleted == 0,models.TrackingType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.VehicleTracking', 1, 'docs#/data-entry', '{\"table_name\": \"tracking_types\", \"select_columns\":\"tracking_types.id as tracking_type_id,tracking_types.name as tracking_type_name\", \"on_condition\": \"tracking_types.id\", \"where_condition\":\"(tracking_types.deleted = 0 OR tracking_types.deleted IS NULL)AND (tracking_types.record_status = 1 OR tracking_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(171, 2, 18, 'vehicle_trackings', NULL, 'engine_type_id', 'Engine Type', NULL, 'dropdown', 'Engine Type', 'non_mandatory', 'visible', 'db.query(models.EngineType.id,models.EngineType.name).filter( and_(models.EngineType.record_status == 1,models.EngineType.deleted == 0,models.EngineType.subscriber_id == subscriber_id)).all()', NULL, NULL, NULL, 'models.VehicleTracking', 1, 'docs#/data-entry', '{\"table_name\": \"engine_types\", \"select_columns\":\"engine_types.id as engine_type_id,engine_types.name as engine_type_name\", \"on_condition\": \"engine_types.id\", \"where_condition\":\"(engine_types.deleted = 0 OR engine_types.deleted IS NULL)AND (engine_types.record_status = 1 OR engine_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(172, 2, 18, 'vehicle_trackings', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.VehicleTracking', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(173, 2, 18, 'vehicle_trackings', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, '[\r\n{\r\n \"type\": \"default\",\r\n \"column\":\"cost\",\r\n \"value\": 0.0\r\n}\r\n]', 'models.VehicleTracking', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(174, 2, 18, 'vehicle_trackings', NULL, 'nb_vehicles', 'No. of Vehicles', NULL, 'numeric', 'No. of Vehicles', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.VehicleTracking', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(176, 2, 18, 'vehicle_trackings', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.VehicleTracking', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(177, 2, 19, 'air_emissions', NULL, 'report_date', 'Report Date', NULL, 'date', 'Report Date', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirEmission', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(178, 2, 19, 'air_emissions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'non_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', NULL, NULL, NULL, 'models.AirEmission', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(179, 2, 19, 'air_emissions', NULL, 'report_no', 'Report No', NULL, 'numeric', 'Report No', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirEmission', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(180, 2, 19, 'air_emissions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirEmission', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(181, 2, 19, 'air_emission_items', 'air_emission_id', 'type', 'type', NULL, 'dropdown', 'Emission Type', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirEmissionItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(182, 2, 19, 'air_emission_items', 'air_emission_id', 'air_pollutant_id', 'Air Pollutant', NULL, 'dropdown', 'Air Pollutant', 'non_mandatory', 'visible', 'db.query(models.Pollutant.id,models.Pollutant.name).filter( and_(models.Pollutant.type == \"AirPollutant\", models.Pollutant.subscriber_id == subscriber_id, models.Pollutant.deleted == 0, models.Pollutant.record_status == 1)).all()', NULL, NULL, NULL, 'models.AirEmissionItem', 1, 'docs#/data-entry', '{\"table_name\": \"pollutants\", \"select_columns\":\"pollutants.id as air_pollutant_id,pollutants.name as air_pollutant_name\", \"on_condition\": \"pollutants.id\", \"where_condition\":\"pollutants.type =\'AirPollutant\' AND (pollutants.deleted = 0 OR pollutants.deleted IS NULL)AND (pollutants.record_status = 1 OR pollutants.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(183, 2, 19, 'readings', NULL, 'avg', 'Readings', NULL, 'numeric', 'Average reading', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Reading', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(184, 2, 19, 'air_emission_items', 'air_emission_id', 'concentration_unit_id', 'Concentration Unit', NULL, 'dropdown', 'Concentration Unit', 'non_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Concentration Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', NULL, NULL, NULL, 'models.AirEmissionItem', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as concentration_unit_id,units.name as concentration_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Concentration Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(185, 2, 19, 'air_emission_items', 'air_emission_id', 'comments', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirEmissionItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(186, 2, 20, 'log_bases', NULL, 'type', 'Form Type', NULL, 'dropdown', 'Form Type', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"Ncr\", \"name\": \"Ncr\"}, {\"id\": \"IssueLog\", \"name\": \"IssueLog\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be IssueLog or Ncr\", \"pattern\": \"^[A-Za-z]*$\",\"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, NULL, 'models.LogBase', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(187, 2, 20, 'log_bases', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, NULL, 'models.LogBase', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(188, 2, 20, 'log_bases', NULL, 'raised_at', 'Date', NULL, 'date', 'Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"raised_at\"}]', 'models.LogBase', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(189, 2, 20, 'log_bases', NULL, 'num', 'Reference No', NULL, 'text', 'Reference No', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"num\"], \"model_name\": \"models.LogBase\", \"combination_column\": [\"num\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.LogBase', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(190, 2, 20, 'log_bases', NULL, 'raised_by', 'Raised By', NULL, 'text', 'Raised By', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\",\"error_message\": \"must be Alphabets\",\"pattern\":\"^[A-Za-z]*$\",\"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, NULL, 'models.LogBase', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(191, 2, 20, 'log_bases', NULL, 'desc', 'Description', NULL, 'text', 'Description', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.LogBase', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(192, 2, 20, 'log_bases', NULL, 'actioned_by', 'Actioned By', NULL, 'text', 'Actioned By', 'system_mandatory', 'visible', NULL, '[{\"type\": \"regex\",\"error_message\": \"must be Alphabets\",\"pattern\":\"^[A-Za-z]*$\",\"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, NULL, 'models.LogBase', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(193, 2, 20, 'log_bases', NULL, 'completed_at', 'Actioned On', NULL, 'date', 'Actioned On', 'non_mandatory', 'visible', NULL, '[{\"date_format\":\"True\"}]', NULL, '[{\"type\":\"default\",\"column\":\"completed_at\",\"value\":null},{\"type\":\"date_format\",\"date\":\"completed_at\"}]', 'models.LogBase', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(194, 2, 20, 'log_bases', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.LogBase', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(195, 2, 21, 'supply_chain_risks', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, NULL, 'models.SupplyChainRisk', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(196, 2, 21, 'supply_chain_risks', NULL, 'report_category_id', 'Supply Chain Risk Issue Type', NULL, 'dropdown', 'Supply Chain Risk Issue Type', 'system_mandatory', 'visible', 'db.query(models.ReportCategory.id,models.ReportCategory.name).filter( and_(models.ReportCategory.record_status == 1,models.ReportCategory.deleted == 0,models.ReportCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SupplyChainRisk', 1, 'docs#/data-entry', '{\"table_name\": \"report_categories\", \"select_columns\":\"report_categories.id as report_category_id,report_categories.name as report_category_name\", \"on_condition\": \"report_categories.id\", \"where_condition\":\"(report_categories.deleted = 0 OR report_categories.deleted IS NULL)AND (report_categories.record_status = 1 OR report_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(197, 2, 21, 'supply_chain_risks', NULL, 'report_type_id', 'Supply Chain Risk Issue Subtype', NULL, 'dropdown', 'Supply Chain Risk Issue Subtype', 'system_mandatory', 'visible', 'db.query(models.ReportType.id,models.ReportType.name).filter( and_(models.ReportType.record_status == 1,models.ReportType.deleted == 0,models.ReportType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.SupplyChainRisk', 1, 'docs#/data-entry', '{\"table_name\": \"report_types\", \"select_columns\":\"report_types.id as report_type_id,report_types.name as report_type_name\", \"on_condition\": \"report_types.id\", \"where_condition\":\"(report_types.deleted = 0 OR report_types.deleted IS NULL)AND (report_types.record_status = 1 OR report_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(198, 2, 21, 'supply_chain_risks', NULL, 'report_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"report_date\"}]', 'models.SupplyChainRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(199, 2, 21, 'supply_chain_risks', NULL, 'reference_no', 'Reference No', NULL, 'text', 'Reference No', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"reference_no\"], \"model_name\": \"models.SupplyChainRisk\", \"combination_column\": [\"reference_no\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.SupplyChainRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(200, 2, 21, 'supply_chain_risks', NULL, 'description', 'Supply Chain Issue Description', NULL, 'text', 'Supply Chain Issue Description', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SupplyChainRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(201, 2, 21, 'supply_chain_risks', NULL, 'critical_concern', 'Critical Concern', NULL, 'dropdown', 'Critical Concern', 'non_mandatory', 'visible', NULL, '[{\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"Yes\", \"name\": \"Yes\"}, {\"id\": \"No\", \"name\": \"No\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.SupplyChainRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(202, 2, 21, 'supply_chain_risks', NULL, 'supply_chain_risk_status_id', 'Supply Chain Risk Status', NULL, 'dropdown', 'Supply Chain Risk Status', 'system_mandatory', 'visible', 'db.query(models.SupplyChainRiskStatus.id,models.SupplyChainRiskStatus.name).filter( and_(models.SupplyChainRiskStatus.record_status == 1,models.SupplyChainRiskStatus.deleted == 0,models.SupplyChainRiskStatus.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SupplyChainRisk', 1, 'docs#/data-entry', '{\"table_name\": \"supply_chain_risk_statuses\", \"select_columns\":\"supply_chain_risk_statuses.id as supply_chain_risk_status_id,supply_chain_risk_statuses.name as supply_chain_risk_status_name\", \"on_condition\": \"supply_chain_risk_statuses.id\", \"where_condition\":\"(supply_chain_risk_statuses.deleted = 0 OR supply_chain_risk_statuses.deleted IS NULL)AND (supply_chain_risk_statuses.record_status = 1 OR supply_chain_risk_statuses.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(203, 2, 21, 'supply_chain_risks', NULL, 'measure_taken_at', 'Measure Taken Date', NULL, 'date', 'Measure Taken Date', 'non_mandatory', 'visible', NULL, '[{\"date_format\":\"True\"}]', NULL, '[{\"type\":\"default\",\"column\":\"measure_taken_at\",\"value\":null},{\"type\":\"date_format\",\"date\":\"measure_taken_at\"}]', 'models.SupplyChainRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(204, 2, 21, 'supply_chain_risks', NULL, 'measure_taken', 'Measure Description', NULL, 'text', 'Measure Description', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SupplyChainRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(205, 2, 21, 'supply_chain_risks', NULL, 'reviewed_at', 'Review Date', NULL, 'date', 'Review Date', 'non_mandatory', 'visible', NULL, '[{\"date_format\":\"True\"}]', NULL, '[{\"type\":\"default\",\"column\":\"reviewed_at\",\"value\":null},{\"type\":\"date_format\",\"date\":\"reviewed_at\"}]', 'models.SupplyChainRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(206, 2, 21, 'supply_chain_risks', NULL, 'result_review', 'Review Result', NULL, 'text', 'Review Result', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SupplyChainRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(207, 2, 21, 'supply_chain_risks', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SupplyChainRisk', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(215, 2, 23, 'countries', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be alphabets\", \"pattern\": \"^[a-zA-Z ]*$\", \"translation_key\": \"MUST_BE_ALPHABETS\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.Country\", \"combination_column\": [\"name\"]}]', NULL, NULL, 'models.Country', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(216, 2, 23, 'countries', NULL, 'code', 'Code', NULL, 'text', 'Code', 'system_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be alphabets\", \"pattern\": \"^[A-Zs]*$\", \"translation_key\": \"MUST_BE_ALPHABETS\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"code\"], \"model_name\": \"models.Country\", \"combination_column\": [\"code\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Country', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(217, 2, 23, 'countries', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[1-9]d*$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"field\": \"sort_order\", \"table\": \"countries\", \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Country', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(218, 2, 24, 'currencies', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be alphabets\", \"pattern\": \"^(?! )(?!\\\\s)(?!.*\\\\s$)[a-zA-Z ]+$\", \"translation_key\": \"MUST_BE_ALPHABETS\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.Currency\", \"combination_column\": [\"name\"]}]', NULL, NULL, 'models.Currency', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(219, 2, 24, 'currencies', NULL, 'code', 'Code', NULL, 'text', 'Code', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be ISO 4217 Currency Format\", \"pattern\": \"^[A-Z]{3}$\", \"translation_key\": \"MUST_BE_CURRENCY_FORMAT\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"code\"], \"model_name\": \"models.Currency\", \"combination_column\": [\"code\"]}]', NULL, NULL, 'models.Currency', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(220, 2, 24, 'currencies', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"field\": \"sort_order\", \"table\": \"currencies\", \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Currency', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(221, 2, 24, 'currencies', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Currency', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(223, 2, 25, 'audits', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Audit', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(224, 2, 25, 'audits', NULL, 'conducted_at', 'Conducted at', NULL, 'date', 'Conducted at', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"conducted_at\"}]', 'models.Audit', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(226, 2, 25, 'audits', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Audit', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(227, 2, 26, 'fuel_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.FuelType\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.FuelType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(228, 2, 26, 'fuel_types', NULL, 'specific_gravity', 'Specific gravity', NULL, 'numeric', 'Specific gravity', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"4\"}]', NULL, NULL, 'models.FuelType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(229, 2, 26, 'fuel_types', NULL, 'office_location', 'Office location', NULL, 'dropdown', 'Office location', 'template_mandatory', 'visible', NULL, '[{\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"Yes\", \"name\": \"Yes\"}, {\"id\": \"No\", \"name\": \"No\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.FuelType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(230, 2, 26, 'fuel_types', NULL, 'vessel', 'Vessel', NULL, 'dropdown', 'Vessel', 'template_mandatory', 'visible', NULL, '[{\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"Yes\", \"name\": \"Yes\"}, {\"id\": \"No\", \"name\": \"No\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.FuelType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(231, 2, 26, 'fuel_types', NULL, 'unit_type', 'Unit type', NULL, 'dropdown', 'Unit type', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"Volume Units\", \"name\": \"Volume Units\"}, {\"id\": \"Weight Units\", \"name\": \"Weight Units\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.FuelType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(232, 2, 26, 'fuel_types', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.FuelType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(255, 2, 28, 'material_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be alphabets or alphanumeric\", \"pattern\": \"^[A-Za-z0-9 ()_./:%&+-]*$\"},{\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": \r [\"name\"], \"model_name\": \"models.MaterialType\", \"combination_column\": [\"name\"]}]', NULL, NULL, 'models.MaterialType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(256, 2, 28, 'material_types', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.MaterialType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(257, 2, 29, 'refrigerant_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be alphabets or alphanumeric\", \"pattern\": \"^[A-Za-z0-9 ()_./:%&+-]*$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"field\": \"name\", \"table\": \"refrigerant_types\"}]', NULL, NULL, 'models.RefrigerantType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(258, 2, 29, 'refrigerant_types', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.RefrigerantType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(259, 2, 30, 'units', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\", \"type\"], \"model_name\": \"models.Unit\", \"combination_column\": [\"name\", \"type\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Unit', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(260, 2, 30, 'units', NULL, 'code', 'Code', NULL, 'text', 'Code', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"code\", \"type\"], \"model_name\": \"models.Unit\", \"combination_column\": [\"code\", \"type\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Unit', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(262, 2, 30, 'units', NULL, 'type', 'Units Type', NULL, 'dropdown', 'Units Type', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"invalid\", \"list_items\": [{\"id\": \"Electricity Units\", \"name\": \"Electricity Units\"}, {\"id\": \"Volume Units\", \"name\": \"Volume Units\"}, {\"id\": \"Weight Units\", \"name\": \"Weight Units\"}, {\"id\": \"Temp Units\", \"name\": \"Temp Units\"}, {\"id\": \"Energy Units\", \"name\": \"Energy Units\"}, {\"id\": \"Gas Units\", \"name\": \"Gas Units\"}, {\"id\": \"Concentration Units\", \"name\": \"Concentration Units\"}, {\"id\": \"Flight Units\", \"name\": \"Flight Units\"}, {\"id\": \"Distance Units\", \"name\": \"Distance Units\"}, {\"id\": \"Weight Distance Units\", \"name\": \"Weight distance Unit\"}, {\"id\": \"Container Units\", \"name\": \"Container Units\"}, {\"id\": \"Paper Units\", \"name\": \"Paper Units\"}, {\"id\": \"Fuel Units\", \"name\": \"Fuel Units\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.Unit', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(263, 2, 30, 'units', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'system_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\":\"default\",\"value\":null}]', 'models.Unit', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(264, 2, 31, 'water_qualities', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'non_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', NULL, NULL, NULL, 'models.WaterQuality', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(265, 2, 31, 'water_qualities', NULL, 'report_date', 'Report Date', NULL, 'date', 'Report Date', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQuality', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(266, 2, 31, 'water_qualities', NULL, 'report_no', 'Report No', NULL, 'numeric', 'Report No', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQuality', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(267, 2, 31, 'water_qualities_water_report_types', NULL, 'water_report_type', 'Water Report Types', NULL, 'dropdown', 'Water Report Types', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, NULL, 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(268, 2, 31, 'water_qualities', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQuality', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(269, 2, 31, 'water_quality_items', 'water_quality_id', 'type', 'type', NULL, 'dropdown', 'Water Readings Type', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQualityItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(270, 2, 31, 'readings', NULL, 'avg', 'water_report_type_id', NULL, 'numeric', 'water_report_type_id', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Reading', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(271, 2, 31, 'water_quality_items', 'water_quality_id', 'temp_unit_id', 'Temp unit', NULL, 'dropdown', 'Temperature Unit', 'non_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Temp Units\",or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0,models.Unit.record_status == 1)).all()', NULL, NULL, NULL, 'models.WaterQualityItem', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as temp_unit_id,units.name as temp_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Temp Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(272, 2, 31, 'water_quality_items', 'water_quality_id', 'concentration_unit_id', 'Concentration Unit', NULL, 'dropdown', 'Concentration Unit', 'non_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Concentration Units\",or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0,models.Unit.record_status == 1)).all()', NULL, NULL, NULL, 'models.WaterQualityItem', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as concentration_unit_id,units.name as concentration_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Concentration Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(273, 2, 31, 'water_quality_items', 'water_quality_id', 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQualityItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(274, 2, 32, 'water_treatments', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'non_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', NULL, NULL, NULL, 'models.WaterTreatment', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(275, 2, 32, 'water_treatments', NULL, 'report_date', 'Report Date', NULL, 'date', 'Report Date', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatment', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(276, 2, 32, 'water_treatments', NULL, 'report_no', 'Report No', NULL, 'numeric', 'Report No', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatment', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(277, 2, 32, 'water_treatments', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatment', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(278, 2, 32, 'water_treatment_items', 'water_treatment_id', 'type', 'type', NULL, 'dropdown', 'Water Readings Type', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(279, 2, 32, 'water_treatment_items', 'water_treatment_id', 'water_pollutant_id', 'Water_pollutant', NULL, 'dropdown', 'Water_pollutant', 'non_mandatory', 'visible', 'db.query(models.Pollutant.id,models.Pollutant.name).filter( and_(models.Pollutant.type == \"WaterPollutant\", models.Pollutant.subscriber_id == subscriber_id, models.Pollutant.deleted == 0, models.Pollutant.record_status == 1)).all()', NULL, NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', '{\"table_name\": \"pollutants\", \"select_columns\":\"pollutants.id as water_pollutant_id,pollutants.name as water_pollutant_name\", \"on_condition\": \"pollutants.id\", \"where_condition\":\"pollutants.type =\'WaterPollutant\' AND (pollutants.deleted = 0 OR pollutants.deleted IS NULL)AND (pollutants.record_status = 1 OR pollutants.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(280, 2, 32, 'readings', NULL, 'avg', 'In reading', NULL, 'numeric', 'In reading', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Reading', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(281, 2, 32, 'readings', NULL, 'avg', 'Out reading', NULL, 'numeric', 'Out reading', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Reading', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(282, 2, 32, 'water_treatment_items', 'water_treatment_id', 'temp_unit_id', 'Temp unit', NULL, 'dropdown', 'Temperature Unit', 'non_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Temp Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', NULL, NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as temp_unit_id,units.name as temp_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Temp Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(283, 2, 32, 'water_treatment_items', 'water_treatment_id', 'concentration_unit_id', 'Concentration Unit', NULL, 'dropdown', 'Concentration Unit', 'non_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Concentration Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', NULL, NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as concentration_unit_id,units.name as concentration_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Concentration Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(284, 2, 32, 'water_treatment_items', 'water_treatment_id', 'comments', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(285, 2, 33, 'electricity_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.ElectricityConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(286, 2, 33, 'electricity_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.ElectricityConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(287, 2, 33, 'electricity_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.ElectricityConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(288, 2, 33, 'electricity_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.ElectricityConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(289, 2, 33, 'electricity_consumptions', NULL, 'consumption', 'Consumption', NULL, 'numeric', 'Electricity Consumption', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.ElectricityConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(290, 2, 33, 'electricity_consumptions', NULL, 'electricity_unit_id', 'Electricity Unit', NULL, 'dropdown', 'Electricity Unit', 'template_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Electricity Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.ElectricityConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as electricity_unit_id,units.name as electricity_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Electricity Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(291, 2, 33, 'electricity_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, '[\r\n{\r\n \"type\": \"default\",\r\n \"column\" : \"cost\",\r\n \"value\": 0.0\r\n}\r\n]', 'models.ElectricityConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(292, 2, 33, 'electricity_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.ElectricityConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(293, 2, 33, 'electricity_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.ElectricityConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(294, 2, 33, 'electricity_consumptions', NULL, 'provider_id', 'Provider', NULL, 'dropdown', 'Provider', 'template_mandatory', 'visible', 'db.query(models.ThirdParty.id, models.ThirdParty.name).filter( and_(models.ThirdParty.sub_type == \"provider\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).order_by(models.ThirdParty.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.ElectricityConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.type=\'provider\' AND third_parties.sub_type=\'Provider\' AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(295, 2, 33, 'electricity_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\": \"match_condition\", \"result_type\": \"numeric\", \"result_value\": \"result\", \"match_column\": \"exchange_rate\", \"match_table\": \"units\", \"match_condition\": [{\"value\": \"electricity_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\", \"no_of_decimal_places\": \"2\"}]', 'models.ElectricityConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(296, 2, 33, 'electricity_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.ElectricityConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(297, 2, 33, 'electricity_consumptions', NULL, 'emission', 'Emission', NULL, 'numeric', 'Emission', 'template_mandatory', 'visible', NULL, '[{\"decimal_points\":\"3\"}]', NULL, '[{\"type\": \"match_condition\", \"result_type\": \"numeric\", \"result_value\": \"result\", \"match_column\": \"co2e\", \"match_table\": \"emission_factors\", \"match_condition\": [{\"value\": \"provider_id\",\"column\": \"provider_id\",\"identifier\": \"=\"},{\"value\": \"year\",\"column\": \"year\",\"identifier\": \"=\"}], \"where_condition\": \"type=\'ElectricityEmissionFactor\'\"},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"emission\", \"variable1\": \"consumption_conv\", \"variable2\": \"match_result\", \"operation\": \"multiply\", \"no_of_decimal_places\": \"3\"}]', 'models.ElectricityConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(298, 2, 34, 'rail_freight_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.RailFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(299, 2, 34, 'rail_freight_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.RailFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(300, 2, 34, 'rail_freight_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(301, 2, 34, 'rail_freight_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(302, 2, 34, 'rail_freight_consumptions', NULL, 'origin_name', 'Origin', NULL, 'text', 'Origin Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(303, 2, 34, 'rail_freight_consumptions', NULL, 'origin_country_id', 'Origin Country', NULL, 'dropdown', 'Origin Country', 'system_mandatory', 'visible', 'db.query(models.Country.id, models.Country.name).filter(and_(models.Country.deleted == 0, models.Country.record_status == 1, or_(models.Country.subscriber_id == subscriber_id, models.Country.subscriber_id == 1))).order_by(models.Country.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"countries\", \"select_columns\":\"countries.id as origin_country_id,countries.name as origin_country_name\", \"on_condition\": \"countries.id\", \"where_condition\":\"(countries.deleted = 0 OR countries.deleted IS NULL)AND (countries.record_status = 1 OR countries.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(304, 2, 34, 'rail_freight_consumptions', NULL, 'destination_name', 'Destination', NULL, 'text', 'Destination Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(305, 2, 34, 'rail_freight_consumptions', NULL, 'destination_country_id', 'Destination Country', NULL, 'dropdown', 'Destination Country', 'system_mandatory', 'visible', 'db.query(models.Country.id, models.Country.name).filter(and_(models.Country.deleted == 0, models.Country.record_status == 1, or_(models.Country.subscriber_id == subscriber_id, models.Country.subscriber_id == 1))).order_by(models.Country.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"countries as country\", \"select_columns\":\"country.id as destination_country_id,country.name as destination_country_name\", \"on_condition\": \"country.id\", \"where_condition\":\"(country.deleted = 0 OR country.deleted IS NULL)AND (country.record_status = 1 OR country.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(306, 2, 34, 'rail_freight_consumptions', NULL, 'consumption', 'Distance', NULL, 'text', 'Distance of this shipment', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(307, 2, 34, 'rail_freight_consumptions', NULL, 'distance_unit_id', 'Distance Unit', NULL, 'dropdown', 'Distance Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as distance_unit_id,units.name as distance_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Distance Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(308, 2, 34, 'rail_freight_consumptions', NULL, 'provider_id', 'Train Carrier', NULL, 'dropdown', 'Train Carrier', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id, models.ThirdParty.name).filter( and_(models.ThirdParty.sub_type == \"TrainCarrier\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).order_by(models.ThirdParty.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.sub_type=\'TrainCarrier\' AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(309, 2, 34, 'rail_freight_consumptions', NULL, 'train_type_id', 'Train Type', NULL, 'dropdown', 'Train Type', 'system_mandatory', 'visible', 'db.query(models.TrainType.id, models.TrainType.name).filter(and_(models.TrainType.deleted == 0, models.TrainType.record_status == 1, or_(models.TrainType.subscriber_id == subscriber_id, models.TrainType.subscriber_id == 1))).order_by(models.TrainType.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"train_types\", \"select_columns\":\"train_types.id as train_type_id,train_types.name as train_type_name\", \"on_condition\": \"train_types.id\", \"where_condition\":\"(train_types.deleted = 0 OR train_types.deleted IS NULL)AND (train_types.record_status = 1 OR train_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(310, 2, 34, 'rail_freight_consumptions', NULL, 'shipper', 'Shipper', NULL, 'text', 'Shipper', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(311, 2, 34, 'rail_freight_consumptions', NULL, 'consignee', 'Consignee', NULL, 'text', 'Consignee', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(312, 2, 34, 'rail_freight_consumptions', NULL, 'customer', 'Controlling Customer', NULL, 'text', 'Controlling Customer', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(313, 2, 34, 'rail_freight_consumptions', NULL, 'weight', 'Weight', NULL, 'numeric', 'Weight of this shipment', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(314, 2, 34, 'rail_freight_consumptions', NULL, 'weight_unit_id', 'Weight Unit', NULL, 'dropdown', 'Weight Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as weight_unit_id,unit.name as weight_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Weight Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(315, 2, 34, 'rail_freight_consumptions', NULL, 'reference_number', 'Reference number', NULL, 'text', 'Reference number', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"reference_number\"], \"model_name\": \"models.RailFreightConsumption\", \"combination_column\": [\"reference_number\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(316, 2, 34, 'rail_freight_consumptions', NULL, 'product_category_id', 'Product category', NULL, 'dropdown', 'Product category', 'non_mandatory', 'visible', 'db.query(models.ProductCategory.id,models.ProductCategory.name).filter(and_(models.ProductCategory.subscriber_id == subscriber_id, models.ProductCategory.deleted == 0, models.ProductCategory.record_status == 1)).order_by(models.ProductCategory.sort_order).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^^[1-9]d*$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"product_categories\", \"select_columns\":\"product_categories.id as product_category_id,product_categories.name as product_category_name\", \"on_condition\": \"product_categories.id\", \"where_condition\":\"(product_categories.deleted = 0 OR product_categories.deleted IS NULL)AND (product_categories.record_status = 1 OR product_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(317, 2, 34, 'rail_freight_consumptions', NULL, 'product', 'Product', NULL, 'text', 'Product', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(318, 2, 34, 'rail_freight_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(319, 2, 34, 'rail_freight_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 0\r\n}]', 'models.RailFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(320, 2, 34, 'rail_freight_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.RailFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(325, 2, 35, 'air_freight_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AirFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(326, 2, 35, 'air_freight_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.AirFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(327, 2, 35, 'air_freight_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.AirFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(328, 2, 35, 'air_freight_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.AirFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(329, 2, 35, 'air_freight_consumptions', NULL, 'origin_id', 'Origin airport', NULL, 'dropdown', 'Origin airport', 'system_mandatory', 'visible', 'db.query(models.Airport.id,models.Airport.name).filter(and_(models.Airport.subscriber_id == subscriber_id, models.Airport.deleted == 0, models.Airport.record_status == 1)).order_by(models.Airport.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AirFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"airports\", \"select_columns\":\"airports.id as origin_id,airports.name as origin_name\", \"on_condition\": \"airports.id\", \"where_condition\":\"(airports.deleted = 0 OR airports.deleted IS NULL)AND (airports.record_status = 1 OR airports.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(330, 2, 35, 'air_freight_consumptions', NULL, 'destination_id', 'Destination airport', NULL, 'dropdown', 'Destination airport', 'system_mandatory', 'visible', 'db.query(models.Airport.id,models.Airport.name).filter(and_(models.Airport.subscriber_id == subscriber_id, models.Airport.deleted == 0, models.Airport.record_status == 1)).order_by(models.Airport.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AirFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"airports as destination\", \"select_columns\":\"destination.id as destination_id,destination.name as destination_name\", \"on_condition\": \"destination.id\", \"where_condition\":\"(destination.deleted = 0 OR destination.deleted IS NULL)AND (destination.record_status = 1 OR destination.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(331, 2, 35, 'air_freight_consumptions', NULL, 'provider_id', 'Air carrier', NULL, 'dropdown', 'Air carrier', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id, models.ThirdParty.name).filter( and_(models.ThirdParty.sub_type == \"Airline\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).order_by(models.ThirdParty.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AirFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.type=\'provider\' AND third_parties.sub_type=\'Airline\' AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(332, 2, 35, 'air_freight_consumptions', NULL, 'shipper', 'Shipper', NULL, 'text', 'Shipper', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(333, 2, 35, 'air_freight_consumptions', NULL, 'consignee', 'Consignee', NULL, 'text', 'Consignee', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(334, 2, 35, 'air_freight_consumptions', NULL, 'customer', 'Controlling Customer', NULL, 'text', 'Controlling Customer', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(335, 2, 35, 'air_freight_consumptions', NULL, 'weight', 'Weight', NULL, 'numeric', 'Weight of this shipment', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AirFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(336, 2, 35, 'air_freight_consumptions', NULL, 'weight_unit_id', 'Weight Unit', NULL, 'dropdown', 'Weight Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AirFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as weight_unit_id,units.name as weight_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(337, 2, 35, 'air_freight_consumptions', NULL, 'reference_number', 'Reference number', NULL, 'text', 'Reference number', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"reference_number\"], \"model_name\": \"models.AirFreightConsumption\", \"combination_column\": [\"reference_number\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.AirFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(338, 2, 35, 'air_freight_consumptions', NULL, 'product_category_id', 'Product category', NULL, 'dropdown', 'Product category', 'non_mandatory', 'visible', 'db.query(models.ProductCategory.id,models.ProductCategory.name).filter(and_(models.ProductCategory.subscriber_id == subscriber_id, models.ProductCategory.deleted == 0, models.ProductCategory.record_status == 1)).order_by(models.ProductCategory.sort_order).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AirFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"product_categories\", \"select_columns\":\"product_categories.id as product_category_id,product_categories.name as product_category_name\", \"on_condition\": \"product_categories.id\", \"where_condition\":\"(product_categories.deleted = 0 OR product_categories.deleted IS NULL)AND (product_categories.record_status = 1 OR product_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(339, 2, 35, 'air_freight_consumptions', NULL, 'product', 'Product', NULL, 'text', 'Product', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(340, 2, 35, 'air_freight_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AirFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(341, 2, 35, 'air_freight_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 0\r\n}]', 'models.AirFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(342, 2, 35, 'air_freight_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(348, 2, 36, 'road_freight_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(349, 2, 36, 'road_freight_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(350, 2, 36, 'road_freight_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.RoadFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(351, 2, 36, 'road_freight_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.RoadFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(352, 2, 36, 'road_freight_consumptions', NULL, 'origin_name', 'Origin', NULL, 'text', 'Origin Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(353, 2, 36, 'road_freight_consumptions', NULL, 'origin_country_id', 'Origin Country', NULL, 'dropdown', 'Origin Country', 'system_mandatory', 'visible', 'db.query(models.Country.id, models.Country.name).filter(and_(models.Country.deleted == 0, models.Country.record_status == 1, or_(models.Country.subscriber_id == subscriber_id, models.Country.subscriber_id == 1))).order_by(models.Country.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"countries as country\", \"select_columns\":\"country.id as origin_country_id,country.name as origin_country_name\", \"on_condition\": \"country.id\", \"where_condition\":\"(country.deleted = 0 OR country.deleted IS NULL)AND (country.record_status = 1 OR country.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(354, 2, 36, 'road_freight_consumptions', NULL, 'destination_name', 'Destination', NULL, 'text', 'Destination Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(355, 2, 36, 'road_freight_consumptions', NULL, 'destination_country_id', 'Destination Country', NULL, 'dropdown', 'Destination Country', 'system_mandatory', 'visible', 'db.query(models.Country.id, models.Country.name).filter(and_(models.Country.deleted == 0, models.Country.record_status == 1, or_(models.Country.subscriber_id == subscriber_id, models.Country.subscriber_id == 1))).order_by(models.Country.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"countries\", \"select_columns\":\"countries.id as destination_country_id,countries.name as destination_country_name\", \"on_condition\": \"countries.id\", \"where_condition\":\"(countries.deleted = 0 OR countries.deleted IS NULL)AND (countries.record_status = 1 OR countries.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(356, 2, 36, 'road_freight_consumptions', NULL, 'consumption', 'Distance', NULL, 'numeric', 'Distance of this shipment', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(357, 2, 36, 'road_freight_consumptions', NULL, 'distance_unit_id', 'Distance Unit', NULL, 'dropdown', 'Distance Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as distance_unit_id,units.name as distance_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Distance Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(358, 2, 36, 'road_freight_consumptions', NULL, 'provider_id', 'Road Carrier', NULL, 'dropdown', 'Train Carrier', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id, models.ThirdParty.name).filter( and_(models.ThirdParty.sub_type == \"RoadCarrier\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).order_by(models.ThirdParty.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.type=\'provider\' AND third_parties.sub_type=\'RoadCarrier\' AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(359, 2, 36, 'road_freight_consumptions', NULL, 'vehicle_type_id', 'Vehicle type', NULL, 'dropdown', 'Vehicle type', 'system_mandatory', 'visible', 'db.query(models.VehicleType.id, models.VehicleType.name).filter(and_(models.VehicleType.deleted == 0, models.VehicleType.record_status == 1, or_(models.VehicleType.subscriber_id == subscriber_id, models.VehicleType.subscriber_id == 1))).order_by(models.VehicleType.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"vehicle_types\", \"select_columns\":\"vehicle_types.id as vehicle_type_id,vehicle_types.name as vehicle_type_name\", \"on_condition\": \"vehicle_types.id\", \"where_condition\":\"(vehicle_types.deleted = 0 OR vehicle_types.deleted IS NULL)AND (vehicle_types.record_status = 1 OR vehicle_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(360, 2, 36, 'road_freight_consumptions', NULL, 'refrigerated', 'Refrigerated', NULL, 'dropdown', 'Refrigerated', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"Yes\", \"name\": \"Yes\"}, {\"id\": \"No\", \"name\": \"No\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, '[{\n \"type\": \"default\",\n \"value\": 0\n}]', 'models.RoadFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(361, 2, 36, 'road_freight_consumptions', NULL, 'load_factor_id', 'Load factor', NULL, 'dropdown', 'Load factor', 'system_mandatory', 'visible', 'db.query(models.LoadFactor.id, models.LoadFactor.name).filter(and_(models.LoadFactor.deleted == 0, models.LoadFactor.record_status == 1, or_(models.LoadFactor.subscriber_id == subscriber_id, models.LoadFactor.subscriber_id == 1))).order_by(models.LoadFactor.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"load_factors\", \"select_columns\":\"load_factors.id as load_factor_id,load_factors.name as load_factor_name\", \"on_condition\": \"load_factors.id\", \"where_condition\":\"(load_factors.deleted = 0 OR load_factors.deleted IS NULL)AND (load_factors.record_status = 1 OR load_factors.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(362, 2, 36, 'road_freight_consumptions', NULL, 'avoid_ferries', 'Avoid ferries', NULL, 'dropdown', 'Avoid ferries', 'system_mandatory', 'visible', NULL, '[{\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"Yes\", \"name\": \"Yes\"}, {\"id\": \"No\", \"name\": \"No\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, '[{\"type\": \"default\",\"value\": \"No\"}]', 'models.RoadFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(363, 2, 36, 'road_freight_consumptions', NULL, 'shipper', 'Shipper', NULL, 'text', 'Shipper', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(364, 2, 36, 'road_freight_consumptions', NULL, 'consignee', 'Consignee', NULL, 'text', 'Consignee', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(365, 2, 36, 'road_freight_consumptions', NULL, 'customer', 'Controlling Customer', NULL, 'text', 'Controlling Customer', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(366, 2, 36, 'road_freight_consumptions', NULL, 'weight', 'Weight', NULL, 'numeric', 'Weight of this shipment', 'system_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(367, 2, 36, 'road_freight_consumptions', NULL, 'weight_unit_id', 'Weight Unit', NULL, 'dropdown', 'Weight Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as weight_unit_id,unit.name as weight_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Weight Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(368, 2, 36, 'road_freight_consumptions', NULL, 'reference_number', 'Reference number', NULL, 'text', 'Reference number', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"reference_number\"], \"model_name\": \"models.RoadFreightConsumption\", \"combination_column\": [\"reference_number\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(369, 2, 36, 'road_freight_consumptions', NULL, 'product_category_id', 'Product category', NULL, 'dropdown', 'Product category', 'non_mandatory', 'visible', 'db.query(models.ProductCategory.id,models.ProductCategory.name).filter(and_(models.ProductCategory.subscriber_id == subscriber_id, models.ProductCategory.deleted == 0, models.ProductCategory.record_status == 1)).order_by(models.ProductCategory.sort_order).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"product_categories\", \"select_columns\":\"product_categories.id as product_category_id,product_categories.name as product_category_name\", \"on_condition\": \"product_categories.id\", \"where_condition\":\"(product_categories.deleted = 0 OR product_categories.deleted IS NULL)AND (product_categories.record_status = 1 OR product_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(370, 2, 36, 'road_freight_consumptions', NULL, 'product', 'Product', NULL, 'text', 'Product', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(371, 2, 36, 'road_freight_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(372, 2, 36, 'road_freight_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 0\r\n}]', 'models.RoadFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(373, 2, 36, 'road_freight_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.RoadFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(390, 2, 38, 'waste_monitorings', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteMonitoring', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(391, 2, 38, 'waste_monitorings', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.WasteMonitoring', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(392, 2, 38, 'waste_monitorings', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.WasteMonitoring', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(393, 2, 38, 'waste_monitorings', NULL, 'disposed_by', 'Disposed By', NULL, 'text', 'Disposed By', 'non_mandatory', 'visible', NULL, '[{\"type\":\"regex\",\"error_message\":\"must be alphabets or alphanumeric\",\"pattern\":\"^[A-Za-z0-9 ()_./:%&+-]*$\",\"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, NULL, 'models.WasteMonitoring', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(394, 2, 38, 'waste_monitorings', NULL, 'disposal_method_id', 'Disposal Method', NULL, 'dropdown', 'Disposal Method', 'non_mandatory', 'visible', 'db.query(models.DisposalMethod.id,models.DisposalMethod.name).filter(and_(models.DisposalMethod.subscriber_id == subscriber_id, models.DisposalMethod.deleted == 0, models.DisposalMethod.record_status == 1)).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteMonitoring', 1, 'docs#/data-entry', '{\"table_name\": \"disposal_methods\", \"select_columns\":\"disposal_methods.id as disposal_method_id,disposal_methods.name as disposal_method_name\", \"on_condition\": \"disposal_methods.id\", \"where_condition\":\"(disposal_methods.deleted = 0 OR disposal_methods.deleted IS NULL) AND (disposal_methods.record_status = 1 OR disposal_methods.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(395, 2, 38, 'waste_monitorings', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WasteMonitoring', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(396, 2, 38, 'waste_items', 'waste_monitoring_id', 'waste_type_id', 'Waste Type', NULL, 'dropdown', 'Waste Type', 'system_mandatory', 'visible', 'db.query(models.WasteType.id, models.WasteType.name).filter(and_(models.WasteType.deleted == 0, models.WasteType.record_status == 1, or_(models.WasteType.subscriber_id == subscriber_id, models.WasteType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, 'docs#/data-entry', '{\"table_name\": \"waste_types\", \"select_columns\":\"waste_types.id as waste_type_id,waste_types.name as waste_type_name\", \"on_condition\": \"waste_types.id\", \"where_condition\":\"(waste_types.deleted = 0 OR waste_types.deleted IS NULL)AND (waste_types.record_status = 1 OR waste_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(397, 2, 38, 'waste_items', 'waste_monitoring_id', 'weight_per_piece', 'Weight per Piece', NULL, 'numeric', 'Weight per Piece', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(398, 2, 38, 'waste_items', 'waste_monitoring_id', 'nb_of_pieces', 'No. of Pieces', NULL, 'numeric', 'No. of Pieces', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(399, 2, 38, 'waste_items', 'waste_monitoring_id', 'consumption', 'Total Weight', NULL, 'numeric', 'Total Weight', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(400, 2, 38, 'waste_items', 'waste_monitoring_id', 'weight_unit_id', 'Waste Unit', NULL, 'dropdown', 'Waste Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as weight_unit_id,units.name as weight_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(401, 2, 38, 'waste_items', 'waste_monitoring_id', 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(402, 2, 38, 'waste_items', 'waste_monitoring_id', 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(403, 2, 38, 'waste_items', 'waste_monitoring_id', 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"weight_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.WasteItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(404, 2, 38, 'waste_items', 'waste_monitoring_id', 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.WasteItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(405, 2, 2, 'antioxidants_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"weight_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.AntioxidantsConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(406, 2, 2, 'antioxidants_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.AntioxidantsConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(407, 2, 39, 'water_measurements', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterMeasurement', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(408, 2, 39, 'water_measurements', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.WaterMeasurement', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(409, 2, 39, 'water_measurements', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.WaterMeasurement', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(410, 2, 39, 'water_measurements', NULL, 'consumption', 'Recycled', NULL, 'numeric', 'Recycled', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterMeasurement', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(411, 2, 39, 'water_measurements', NULL, 'volume_unit_id', 'Water Unit', NULL, 'dropdown', 'Water Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Volume Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterMeasurement', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as volume_unit_id,units.name as volume_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Volume Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(412, 2, 39, 'water_measurements', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterMeasurement', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(413, 2, 39, 'water_measurements', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"volume_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.WaterMeasurement', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(425, 2, 41, 'flight_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FlightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(426, 2, 41, 'flight_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.FlightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(427, 2, 41, 'flight_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.FlightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(428, 2, 41, 'flight_consumptions', NULL, 'origin_id', 'Origin Airport', NULL, 'dropdown', 'Origin Country', 'system_mandatory', 'visible', 'db.query(models.Airport.id,models.Airport.name).filter(and_(models.Airport.subscriber_id == subscriber_id, models.Airport.deleted == 0, models.Airport.record_status == 1)).order_by(models.Airport.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FlightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"airports as origin_airport\", \"select_columns\":\"origin_airport.id as origin_id,origin_airport.name as origin_name\", \"on_condition\": \"origin_airport.id\", \"where_condition\":\"(origin_airport.deleted = 0 OR origin_airport.deleted IS NULL)AND (origin_airport.record_status = 1 OR origin_airport.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(429, 2, 41, 'flight_consumptions', NULL, 'destination_id', 'Destination Airport', NULL, 'dropdown', 'Destination Country', 'system_mandatory', 'visible', 'db.query(models.Airport.id,models.Airport.name).filter(and_(models.Airport.subscriber_id == subscriber_id, models.Airport.deleted == 0, models.Airport.record_status == 1)).order_by(models.Airport.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FlightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"airports as destination\", \"select_columns\":\"destination.id as destination_id,destination.name as destination_name\", \"on_condition\": \"destination.id\", \"where_condition\":\"(destination.deleted = 0 OR destination.deleted IS NULL)AND (destination.record_status = 1 OR destination.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(430, 2, 41, 'flight_consumptions', NULL, 'via_id', 'Via', NULL, 'dropdown', 'Via', 'non_mandatory', 'visible', 'db.query(models.Airport.id,models.Airport.name).filter(and_(models.Airport.subscriber_id == subscriber_id, models.Airport.deleted == 0, models.Airport.record_status == 1)).order_by(models.Airport.sort_order).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FlightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"airports\", \"select_columns\":\"airports.id as via_id,airports.name as via_name\", \"on_condition\": \"airports.id\", \"where_condition\":\"(airports.deleted = 0 OR airports.deleted IS NULL)AND (airports.record_status = 1 OR airports.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(431, 2, 41, 'flight_consumptions', NULL, 'provider_id', 'Airline', NULL, 'dropdown', 'Airline', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id, models.ThirdParty.name).filter( and_(models.ThirdParty.sub_type == \"Airline\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).order_by(models.ThirdParty.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FlightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.type=\'provider\' AND third_parties.sub_type=\'Airline\' AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(432, 2, 41, 'flight_consumptions', NULL, 'trip_type_id', 'Trip Type', NULL, 'dropdown', 'Trip Type', 'system_mandatory', 'visible', 'db.query(models.TripType.id,models.TripType.name).filter( and_( models.TripType.subscriber_id == subscriber_id, models.TripType.deleted == 0, models.TripType.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FlightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"trip_types\", \"select_columns\":\"trip_types.id as trip_type_id,trip_types.name as trip_type_name\", \"on_condition\": \"trip_types.id\", \"where_condition\":\"(trip_types.deleted = 0 OR trip_types.deleted IS NULL)AND (trip_types.record_status = 1 OR trip_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(433, 2, 41, 'flight_consumptions', NULL, 'trip_class_id', 'Trip Class', NULL, 'dropdown', 'Trip Class', 'system_mandatory', 'visible', 'db.query(models.TripClass.id,models.TripClass.name).filter( and_(models.TripClass.deleted == 0, models.TripClass.record_status == 1, or_(models.TripClass.subscriber_id == subscriber_id, models.TripClass.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FlightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"trip_classes\", \"select_columns\":\"trip_classes.id as trip_class_id,trip_classes.name as trip_class_name\", \"on_condition\": \"trip_classes.id\", \"where_condition\":\"(trip_classes.deleted = 0 OR trip_classes.deleted IS NULL)AND (trip_classes.record_status = 1 OR trip_classes.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(434, 2, 41, 'flight_consumptions', NULL, 'number_of_passengers', 'Number Of Passengers', NULL, 'numeric', 'Number Of Passengers', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FlightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(435, 2, 41, 'flight_consumptions', NULL, 'staff_code', 'Staff ID', NULL, 'text', 'Staff ID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.FlightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(436, 2, 41, 'flight_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FlightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(437, 2, 41, 'flight_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 0\r\n}]', 'models.FlightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(438, 2, 41, 'flight_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.FlightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(462, 2, 44, 'sea_freight_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SeaFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(463, 2, 44, 'sea_freight_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.SeaFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(464, 2, 44, 'sea_freight_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', '', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.SeaFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(465, 2, 44, 'sea_freight_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', '', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.SeaFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(466, 2, 44, 'sea_freight_consumptions', NULL, 'origin_id', 'Origin', NULL, 'dropdown', 'Origin', 'system_mandatory', 'visible', 'db.query(models.Port.id,models.Port.name).filter(and_(models.Port.subscriber_id == subscriber_id, models.Port.deleted == 0, models.Port.record_status == 1)).order_by(models.Port.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SeaFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"ports\", \"select_columns\":\"ports.id as origin_id,ports.name as origin_name\", \"on_condition\": \"ports.id\", \"where_condition\":\"(ports.deleted = 0 OR ports.deleted IS NULL)AND (ports.record_status = 1 OR ports.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(467, 2, 44, 'sea_freight_consumptions', NULL, 'destination_id', 'Destination', NULL, 'dropdown', 'Destination Country', 'system_mandatory', 'visible', 'db.query(models.Port.id,models.Port.name).filter(and_(models.Port.subscriber_id == subscriber_id, models.Port.deleted == 0, models.Port.record_status == 1)).order_by(models.Port.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SeaFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"ports as port\", \"select_columns\":\"port.id as destination_id,port.name as destination_name\", \"on_condition\": \"port.id\", \"where_condition\":\"(port.deleted = 0 OR port.deleted IS NULL)AND (port.record_status = 1 OR port.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(468, 2, 44, 'sea_freight_consumptions', NULL, 'provider_id', 'Carrier', NULL, 'dropdown', 'Carrier', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id, models.ThirdParty.name).filter( and_(models.ThirdParty.sub_type == \"Carrier\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).order_by(models.ThirdParty.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SeaFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.type=\'provider\' AND third_parties.sub_type=\'Carrier\' AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(469, 2, 44, 'sea_freight_consumptions', NULL, 'shipper', 'Shipper', NULL, 'text', 'Shipper', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SeaFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(470, 2, 44, 'sea_freight_consumptions', NULL, 'consignee', 'Consignee', NULL, 'text', 'Consignee', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SeaFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(471, 2, 44, 'sea_freight_consumptions', NULL, 'customer', 'Controlling Customer', NULL, 'text', 'Controlling Customer', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SeaFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(472, 2, 44, 'sea_freight_consumptions', NULL, 'container_unit_id', 'Container Unit', NULL, 'dropdown', 'Container Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Container Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SeaFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as container_unit_id,units.name as container_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Container Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(473, 2, 44, 'sea_freight_consumptions', NULL, 'volume_decimal', 'Qty', NULL, 'numeric', 'Qty', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SeaFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(474, 2, 44, 'sea_freight_consumptions', NULL, 'refrigerated', 'Refrigerated', NULL, 'dropdown', 'Refrigerated', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"Yes\", \"name\": \"Yes\"}, {\"id\": \"No\", \"name\": \"No\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, '[{\n \"type\": \"default\",\n \"value\": 0\n}]', 'models.SeaFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(475, 2, 44, 'sea_freight_consumptions', NULL, 'reference_number', 'Reference number', NULL, 'text', 'Reference number', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"reference_number\"], \"model_name\": \"models.SeaFreightConsumption\", \"combination_column\": [\"reference_number\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.SeaFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(476, 2, 44, 'sea_freight_consumptions', NULL, 'product_category_id', 'Product category', NULL, 'dropdown', 'Product category', 'non_mandatory', 'visible', 'db.query(models.ProductCategory.id,models.ProductCategory.name).filter(and_(models.ProductCategory.subscriber_id == subscriber_id, models.ProductCategory.deleted == 0, models.ProductCategory.record_status == 1)).order_by(models.ProductCategory.sort_order).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SeaFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"product_categories\", \"select_columns\":\"product_categories.id as product_category_id,product_categories.name as product_category_name\", \"on_condition\": \"product_categories.id\", \"where_condition\":\"(product_categories.deleted = 0 OR product_categories.deleted IS NULL)AND (product_categories.record_status = 1 OR product_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(477, 2, 44, 'sea_freight_consumptions', NULL, 'product', 'Product', NULL, 'text', 'Product', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SeaFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(478, 2, 44, 'sea_freight_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SeaFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(479, 2, 44, 'sea_freight_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 0\r\n}]', 'models.SeaFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(480, 2, 44, 'sea_freight_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SeaFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(488, 2, 33, 'electricity_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'text', NULL, 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.ElectricityConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(496, 2, 2, 'antioxidants_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"weight_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.AntioxidantsConsumption', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(497, 2, 2, 'antioxidants_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.AntioxidantsConsumption', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(498, 2, 13, 'water_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"volume_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\", \"no_of_decimal_places\": \"2\"}]', 'models.WaterConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(499, 2, 13, 'water_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.WaterConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(500, 2, 13, 'water_consumptions', NULL, 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"3\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"emission_factors\", \"result_type\": \"numeric\", \"match_column\": \"co2e\", \"match_result\": \"result\", \"match_condition\": [{\"value\": \"volume_unit_id\", \"column\": \"consumption_unit_id\", \"identifier\": \"=\"}, {\"value\": \"year\", \"column\": \"year\", \"identifier\": \"=\"}], \"where_condition\": \"type=\'WaterEmissionFactor\'\"}, {\"type\": \"math\", \"operation\": \"multiply\", \"variable1\": \"consumption_conv\", \"variable2\": \"match_result\", \"result_type\": \"numeric\", \"result_value\": \"emission\", \"no_of_decimal_places\": \"3\"}]', 'models.WaterConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(509, 2, 48, 'fuel_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(510, 2, 48, 'fuel_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(511, 2, 48, 'fuel_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(512, 2, 48, 'fuel_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(513, 2, 48, 'fuel_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(514, 2, 48, 'fuel_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 0\r\n}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(515, 2, 48, 'fuel_consumptions', NULL, 'fuel_type_id', 'Fuel Type', NULL, 'dropdown', 'Fuel Type', 'system_mandatory', 'visible', 'db.query(models.FuelType.id, models.FuelType.name).filter(and_(models.FuelType.deleted == 0, models.FuelType.record_status == 1, models.FuelType.unit_type == \"Volume Units\", or_(models.FuelType.subscriber_id == subscriber_id, models.FuelType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"fuel_types\", \"select_columns\":\"fuel_types.id as fuel_type_id,fuel_types.name as fuel_type_name\", \"on_condition\": \"fuel_types.id\", \"where_condition\":\"(fuel_types.deleted = 0 OR fuel_types.deleted IS NULL)AND (fuel_types.record_status = 1 OR fuel_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(516, 2, 48, 'fuel_consumptions', NULL, 'vehicle_type_id', 'Vehicle type', NULL, 'dropdown', 'Vehicle type', 'system_mandatory', 'visible', 'db.query(models.VehicleType.id, models.VehicleType.name).filter(and_(models.VehicleType.deleted == 0, models.VehicleType.record_status == 1, or_(models.VehicleType.subscriber_id == subscriber_id, models.VehicleType.subscriber_id == 1))).order_by(models.VehicleType.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"vehicle_types\", \"select_columns\":\"vehicle_types.id as vehicle_type_id,vehicle_types.name as vehicle_type_name\", \"on_condition\": \"vehicle_types.id\", \"where_condition\":\"(vehicle_types.deleted = 0 OR vehicle_types.deleted IS NULL)AND (vehicle_types.record_status = 1 OR vehicle_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(517, 2, 48, 'fuel_consumptions', NULL, 'distance_unit_id', 'Distance Unit', NULL, 'dropdown', 'Distance unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units as distance_unit\", \"select_columns\":\"distance_unit.id as distance_unit_id,distance_unit.name as distance_unit_name\", \"on_condition\": \"distance_unit.id\", \"where_condition\":\"distance_unit.type =\\\"Distance Units\\\" AND (distance_unit.deleted = 0 OR distance_unit.deleted IS NULL)AND (distance_unit.record_status = 1 OR distance_unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(518, 2, 48, 'fuel_consumptions', NULL, 'distance', 'Distance', NULL, 'numeric', 'Distance', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(519, 2, 48, 'fuel_consumptions', NULL, 'consumption', 'Consumption', NULL, 'numeric', 'Consumption', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(520, 2, 48, 'fuel_consumptions', NULL, 'volume_unit_id', 'Fuel Unit', NULL, 'dropdown', 'Fuel Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Volume Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as volume_unit_id,unit.name as volume_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Volume Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(521, 2, 48, 'fuel_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(522, 2, 48, 'fuel_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"volume_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\", \"no_of_decimal_places\": \"3\"}]', 'models.FuelConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(523, 2, 48, 'fuel_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.FuelConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(524, 2, 48, 'fuel_consumptions', NULL, 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"3\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"emission_factors\", \"result_type\": \"numeric\", \"match_column\": \"co2e\", \"match_result\": \"result\", \"match_condition\": [{\"value\": \"volume_unit_id\", \"column\": \"consumption_unit_id\", \"identifier\": \"=\"}, {\"value\": \"fuel_type_id\", \"column\": \"fuel_type_id\", \"identifier\": \"=\"},{\"value\": \"year\", \"column\": \"year\", \"identifier\": \"=\"}], \"where_condition\": \"type=\'VolumetricFuelEmissionFactor\'\"}, {\"type\": \"math\", \"operation\": \"multiply\", \"variable1\": \"consumption_conv\", \"variable2\": \"match_result\", \"result_type\": \"numeric\", \"result_value\": \"emission\", \"no_of_decimal_places\": \"3\"}]', 'models.FuelConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(525, 2, 48, 'fuel_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, '[{\"decimal_points\":\"4\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.FuelConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(526, 2, 48, 'fuel_consumptions', NULL, 'type', 'Type', NULL, 'text', 'Type', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be alphabets\", \"pattern\": \"^[A-Za-z]*$\", \"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, '[{\"type\": \"default\",\"value\": \"VolumetricFuelConsumption\"}]', 'models.FuelConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(527, 2, 49, 'fuel_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(528, 2, 49, 'fuel_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(529, 2, 49, 'fuel_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(530, 2, 49, 'fuel_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(531, 2, 49, 'fuel_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(532, 2, 49, 'fuel_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 0\r\n}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(533, 2, 49, 'fuel_consumptions', NULL, 'fuel_type_id', 'Fuel Type', NULL, 'dropdown', 'Fuel Type', 'system_mandatory', 'visible', 'db.query(models.FuelType.id, models.FuelType.name).filter(and_(models.FuelType.deleted == 0, models.FuelType.record_status == 1, models.FuelType.unit_type == \"Weight Units\", or_(models.FuelType.subscriber_id == subscriber_id, models.FuelType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"fuel_types\", \"select_columns\":\"fuel_types.id as fuel_type_id,fuel_types.name as fuel_type_name\", \"on_condition\": \"fuel_types.id\", \"where_condition\":\"(fuel_types.deleted = 0 OR fuel_types.deleted IS NULL)AND (fuel_types.record_status = 1 OR fuel_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(534, 2, 49, 'fuel_consumptions', NULL, 'consumption', 'Consumption', NULL, 'numeric', 'Consumption', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(535, 2, 49, 'fuel_consumptions', NULL, 'weight_unit_id', 'Fuel Unit', NULL, 'dropdown', 'Fuel Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as weight_unit_id,unit.name as weight_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Weight Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(536, 2, 49, 'fuel_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(537, 2, 49, 'fuel_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"weight_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\", \"no_of_decimal_places\": \"2\"}]', 'models.FuelConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(538, 2, 49, 'fuel_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.FuelConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(539, 2, 49, 'fuel_consumptions', NULL, 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"3\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"emission_factors\", \"result_type\": \"numeric\", \"match_column\": \"co2e\", \"match_result\": \"result\", \"match_condition\": [{\"value\": \"weight_unit_id\", \"column\": \"consumption_unit_id\", \"identifier\": \"=\"}, {\"value\": \"fuel_type_id\", \"column\": \"fuel_type_id\", \"identifier\": \"=\"},{\"value\": \"year\", \"column\": \"year\", \"identifier\": \"=\"}], \"where_condition\": \"type=\'WeightedFuelEmissionFactor\'\"}, {\"type\": \"math\", \"operation\": \"multiply\", \"variable1\": \"consumption_conv\", \"variable2\": \"match_result\", \"result_type\": \"numeric\", \"result_value\": \"emission\", \"no_of_decimal_places\": \"3\"}]', 'models.FuelConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(540, 2, 49, 'fuel_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, '[{\"decimal_points\":\"4\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.FuelConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(541, 2, 49, 'fuel_consumptions', NULL, 'type', 'Type', NULL, 'text', 'Type', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be alphabets\", \"pattern\": \"^[A-Za-z]*$\", \"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, '[{\"type\": \"default\",\"value\": \"WeightedFuelConsumption\"}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(542, 2, 50, 'fuel_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[1-9]d*$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(543, 2, 50, 'fuel_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(544, 2, 50, 'fuel_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(545, 2, 50, 'fuel_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(546, 2, 50, 'fuel_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[1-9]d*$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(547, 2, 50, 'fuel_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]d*(.d+)?$\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 0\r\n}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(548, 2, 50, 'fuel_consumptions', NULL, 'fuel_type_id', 'Fuel Type', NULL, 'dropdown', 'Fuel Type', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Volume Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[1-9]d*$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as volume_unit_id,units.name as volume_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Volume Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(549, 2, 50, 'fuel_consumptions', NULL, 'vehicle_type_id', 'Vehicle type', NULL, 'dropdown', 'Vehicle type', 'system_mandatory', 'visible', 'db.query(models.VehicleType.id, models.VehicleType.name).filter(and_(models.VehicleType.deleted == 0, models.VehicleType.record_status == 1, or_(models.VehicleType.subscriber_id == subscriber_id, models.VehicleType.subscriber_id == 1))).order_by(models.VehicleType.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[1-9]d*$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"vehicle_types\", \"select_columns\":\"vehicle_types.id as vehicle_type_id,vehicle_types.name as vehicle_type_name\", \"on_condition\": \"vehicle_types.id\", \"where_condition\":\"(vehicle_types.deleted = 0 OR vehicle_types.deleted IS NULL)AND (vehicle_types.record_status = 1 OR vehicle_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(550, 2, 50, 'fuel_consumptions', NULL, 'distance_unit_id', 'Distance Unit', NULL, 'dropdown', 'Distance unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[1-9]d*$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as distance_unit_id,units.name as distance_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Distance Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(551, 2, 50, 'fuel_consumptions', NULL, 'distance', 'Distance', NULL, 'numeric', 'Distance', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]d*(.d+)?$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(552, 2, 50, 'fuel_consumptions', NULL, 'consumption', 'Consumption', NULL, 'numeric', 'Consumption', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]d*(.d+)?$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(553, 2, 50, 'fuel_consumptions', NULL, 'volume_unit_id', 'Fuel Unit', NULL, 'dropdown', 'Fuel Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Volume Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[1-9]d*$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as volume_unit_id,unit.name as volume_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Volume Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(554, 2, 50, 'fuel_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(555, 2, 50, 'fuel_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"volume_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(556, 2, 50, 'fuel_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(557, 2, 50, 'fuel_consumptions', NULL, 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"emission_factors\", \"result_type\": \"numeric\", \"match_column\": \"co2e\", \"match_result\": \"result\", \"match_condition\": [{\"value\": \"volume_unit_id\", \"column\": \"consumption_unit_id\", \"identifier\": \"=\"}, {\"value\": \"fuel_type_id\", \"column\": \"consumable_id\", \"identifier\": \"=\"}], \"where_condition\": \"type=VolumetricFuelEmissionFactor\"}, {\"type\": \"math\", \"operation\": \"multiply\", \"variable1\": \"consumption\", \"variable2\": \"match_result\", \"result_type\": \"numeric\", \"result_value\": \"emission\"}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(558, 2, 50, 'fuel_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(559, 2, 50, 'fuel_consumptions', NULL, 'type', 'Type', NULL, 'text', 'Type', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be alphabets\", \"pattern\": \"^[A-Za-z]*$\", \"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(560, 2, 51, 'fuel_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[1-9]d*$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(561, 2, 51, 'fuel_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(562, 2, 51, 'fuel_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(563, 2, 51, 'fuel_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(564, 2, 51, 'fuel_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[1-9]d*$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(565, 2, 51, 'fuel_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]d*(.d+)?$\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 0\r\n}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(566, 2, 51, 'fuel_consumptions', NULL, 'fuel_type_id', 'Fuel Type', NULL, 'dropdown', 'Fuel Type', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[1-9]d*$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as weight_unit_id,units.name as weight_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(567, 2, 51, 'fuel_consumptions', NULL, 'consumption', 'Consumption', NULL, 'numeric', 'Consumption', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]d*(.d+)?$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(568, 2, 51, 'fuel_consumptions', NULL, 'weight_unit_id', 'Fuel Unit', NULL, 'dropdown', 'Fuel Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[1-9]d*$\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as weight_unit_id,unit.name as weight_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Weight Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(569, 2, 51, 'fuel_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(570, 2, 51, 'fuel_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"weight_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(571, 2, 51, 'fuel_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(572, 2, 51, 'fuel_consumptions', NULL, 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"emission_factors\", \"result_type\": \"numeric\", \"match_column\": \"co2e\", \"match_result\": \"result\", \"match_condition\": [{\"value\": \"weight_unit_id\", \"column\": \"consumption_unit_id\", \"identifier\": \"=\"}, {\"value\": \"fuel_type_id\", \"column\": \"consumable_id\", \"identifier\": \"=\"}], \"where_condition\": \"type=WeightedFuelEmissionFactor\"}, {\"type\": \"math\", \"operation\": \"multiply\", \"variable1\": \"consumption\", \"variable2\": \"match_result\", \"result_type\": \"numeric\", \"result_value\": \"emission\"}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(573, 2, 51, 'fuel_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(574, 2, 51, 'fuel_consumptions', NULL, 'type', 'Type', NULL, 'text', 'Type', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be alphabets\", \"pattern\": \"^[A-Za-z]*$\", \"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, NULL, 'models.FuelConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(575, 2, 2, 'antioxidants_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, '[{\"decimal_points\":\"4\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.AntioxidantsConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(576, 2, 13, 'water_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, '[{\"decimal_points\":\"4\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.WaterConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(577, 2, 38, 'waste_items', 'waste_monitoring_id', 'type', 'Type', NULL, 'text', 'Type', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be alphabets\", \"pattern\": \"^[A-Za-z]*$\", \"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"WeightedWasteItem\" \r\n}]', 'models.WasteItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(579, 2, 3, 'gas_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\": \"match_condition\", \"result_type\": \"numeric\", \"result_value\": \"result\", \"match_column\": \"exchange_rate\", \"match_table\": \"units\", \"match_condition\": [{\"value\": \"gas_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.GasConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(580, 2, 3, 'gas_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.GasConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(581, 2, 3, 'gas_consumptions', NULL, 'emission', 'Emission', NULL, 'numeric', 'Emission', 'template_mandatory', 'visible', NULL, '[{\"decimal_points\":\"3\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"emission_factors\", \"result_type\": \"numeric\", \"match_column\": \"co2e\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"gas_unit_id\", \"column\": \"consumption_unit_id\", \"identifier\": \"=\"}, {\"value\": \"year\", \"column\": \"year\", \"identifier\": \"=\"}], \"where_condition\": \"type=\'GasEmissionFactor\'\"}, {\"type\": \"math\", \"operation\": \"multiply\", \"variable1\": \"consumption_conv\", \"variable2\": \"match_result\", \"result_type\": \"numeric\", \"result_value\": \"emission\",\"no_of_decimal_places\": \"3\"}]', 'models.GasConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(582, 2, 3, 'gas_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.GasConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(583, 2, 52, 'consumers', NULL, 'parent_location_id', 'Parent Location', NULL, 'dropdown', 'Parent Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\"},{\"type\": \"default_value\",\"match_table\": \"consumers\",\"get_column\": \"name\",\"match_value\": \"1\",\"match_column\": \"id\",\"identifier\": \"=\"}]', '^[1-9]d*(.d+)?$', NULL, 'models.Consumer', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as parent_location_id,consumer_wise_user_access.consumer_name as parent_location_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND consumer_wise_user_access.user_id=userId\"}', 0, 0, 1, 0, 0),
(584, 2, 52, 'consumers', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": \"name\", \"model_name\": \"models.Consumer\", \"column_name\": [\"name\"], \"model_name\": \"models.Consumer\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Consumer', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(585, 2, 52, 'consumers', NULL, 'country_id', 'Country/Region', NULL, 'dropdown', 'Country/Region', 'non_mandatory', 'visible', 'db.query(models.Country.id, models.Country.name).filter(and_(models.Country.deleted == 0, models.Country.record_status == 1, or_(models.Country.subscriber_id == subscriber_id, models.Country.subscriber_id == 1))).order_by(models.Country.sort_order).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.Consumer', 1, 'docs#/data-entry', '{\"table_name\": \"countries\", \"select_columns\":\"countries.id as country_id,countries.name as country_name\", \"on_condition\": \"countries.id\", \"where_condition\":\"(countries.deleted = 0 OR countries.deleted IS NULL)AND (countries.record_status = 1 OR countries.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(586, 2, 52, 'consumers', NULL, 'province', 'Province', NULL, 'text', 'Province', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Consumer', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(587, 2, 52, 'consumers', NULL, 'enabled', 'Status', NULL, 'dropdown', 'Status', 'system_mandatory', 'visible', NULL, '[{\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"Yes\", \"name\": \"Yes\"}, {\"id\": \"No\", \"name\": \"No\"}], \"translation_key\": \"IS_INVALID\"},{\"type\": \"default\", \"value\": \"Yes\"}]', NULL, NULL, 'models.Consumer', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(588, 2, 39, 'water_measurements', NULL, 'type', 'Type', NULL, 'text', 'Type', 'system_mandatory', 'visible', 'db.query(models.WaterMeasurement).filter(and_(models.WaterMeasurement.subscriber_id == subscriber_id, models.WaterMeasurement.type == \"WaterRecycled\", models.WaterMeasurement.deleted == 0, models.WaterMeasurement.record_status == 1)).all()', NULL, NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"WaterRecycled\" \r\n}]', 'models.WaterMeasurement', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(589, 2, 53, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"gas_type_id\", \"year\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"gas_type_id\", \"year\"], \"default_filters\": [{\"type\": \"GasEmissionFactor\"}]}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(590, 2, 53, 'emission_factors', NULL, 'gas_type_id', 'Gas Type', NULL, 'dropdown', 'Gas Type', 'system_mandatory', 'visible', 'db.query(models.GasType.id, models.GasType.name).filter(and_(models.GasType.deleted == 0, models.GasType.record_status == 1, or_(models.GasType.subscriber_id == subscriber_id, models.GasType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"gas_type_id\", \"year\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"gas_type_id\", \"year\"], \"default_filters\": [{\"type\": \"GasEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"gas_types\", \"select_columns\":\"gas_types.id as gas_type_id,gas_types.name as gas_type_name\", \"on_condition\": \"gas_types.id\", \"where_condition\":\"(gas_types.deleted = 0 OR gas_types.deleted IS NULL) AND (gas_types.record_status = 1 OR gas_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(591, 2, 53, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(592, 2, 53, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(593, 2, 53, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(594, 2, 53, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Gas Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Gas Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(595, 2, 53, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(599, 2, 53, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(600, 2, 53, 'emission_factors', NULL, 'type', 'GasEmissionFactor', NULL, 'text', 'GasEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"type\",\n\"value\": \"GasEmissionFactor\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(601, 2, 53, 'emission_factors', NULL, 'consumable_type', 'GasType', NULL, 'text', 'GasType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumable_type\",\n\"value\": \"GasType\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(602, 2, 53, 'emission_factors', NULL, 'consumption_unit_type', 'GasUnit', NULL, 'text', 'GasUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumption_unit_type\",\n\"value\": \"GasUnit\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(603, 2, 54, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(604, 2, 54, 'emission_factors', NULL, 'fuel_type_id', 'Fuel Type', NULL, 'dropdown', 'Fuel Type', 'system_mandatory', 'visible', 'db.query(models.FuelType.id, models.FuelType.name).filter(and_(models.FuelType.deleted == 0, models.FuelType.record_status == 1, models.FuelType.unit_type == \"Volume Units\", or_(models.FuelType.subscriber_id == subscriber_id, models.FuelType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"fuel_types\", \"select_columns\":\"fuel_types.id as consumable_id,fuel_types.name as consumable_name\", \"on_condition\": \"fuel_types.id\", \"where_condition\":\"fuel_types.unit_type =\\\"Weight Units\\\" AND (fuel_types.deleted = 0 OR fuel_types.deleted IS NULL)AND (fuel_types.record_status = 1 OR fuel_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(605, 2, 54, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(606, 2, 54, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(607, 2, 54, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(608, 2, 54, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Weight Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(609, 2, 54, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(613, 2, 54, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(614, 2, 54, 'emission_factors', NULL, 'type', 'WeightedFuelEmissionFactor', NULL, 'text', 'WeightedFuelEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(615, 2, 54, 'emission_factors', NULL, 'consumable_type', 'FuelType', NULL, 'text', 'FuelType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(616, 2, 54, 'emission_factors', NULL, 'consumption_unit_type', 'WeightUnit', NULL, 'text', 'WeightUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(617, 2, 55, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(618, 2, 55, 'emission_factors', NULL, 'fuel_type_id', 'Fuel Type', NULL, 'dropdown', 'Fuel Type', 'system_mandatory', 'visible', 'db.query(models.FuelType.id, models.FuelType.name).filter(and_(models.FuelType.deleted == 0, models.FuelType.record_status == 1, models.FuelType.unit_type == \"Volume Units\", or_(models.FuelType.subscriber_id == subscriber_id, models.FuelType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\", \"fuel_type_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\", \"fuel_type_id\"], \"default_filters\": [{\"type\": \"VolumetricFuelEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"fuel_types\", \"select_columns\":\"fuel_types.id as fuel_type_id,fuel_types.name as fuel_type_name\", \"on_condition\": \"fuel_types.id\", \"where_condition\":\"(fuel_types.deleted = 0 OR fuel_types.deleted IS NULL)AND (fuel_types.record_status = 1 OR fuel_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(619, 2, 55, 'emission_factors', NULL, 'vehicle_type_id', 'Vehicle type', NULL, 'dropdown', 'Vehicle type', 'non_mandatory', 'visible', 'db.query(models.VehicleType.id, models.VehicleType.name).filter(and_(models.VehicleType.deleted == 0, models.VehicleType.record_status == 1, or_(models.VehicleType.subscriber_id == subscriber_id, models.VehicleType.subscriber_id == 1))).order_by(models.VehicleType.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"vehicle_types\", \"select_columns\":\"vehicle_types.id as vehicle_type_id,vehicle_types.name as vehicle_type_name\", \"on_condition\": \"vehicle_types.id\", \"where_condition\":\"(vehicle_types.deleted = 0 OR vehicle_types.deleted IS NULL)AND (vehicle_types.record_status = 1 OR vehicle_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(620, 2, 55, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(621, 2, 55, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(622, 2, 55, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(623, 2, 55, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Volume Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Volume Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(624, 2, 55, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(628, 2, 55, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(629, 2, 55, 'emission_factors', NULL, 'type', 'VolumetricFuelEmissionFactor', NULL, 'text', 'VolumetricFuelEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"type\",\n\"value\": \"VolumetricFuelEmissionFactor\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(630, 2, 55, 'emission_factors', NULL, 'consumable_type', 'FuelType', NULL, 'text', 'FuelType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumable_type\",\n\"value\": \"FuelType\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(631, 2, 55, 'emission_factors', NULL, 'consumption_unit_type', 'VolumeUnit', NULL, 'text', 'VolumeUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumption_unit_type\",\n\"value\": \"VolumeUnit\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(632, 2, 56, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"unique\", \"record_exists\": \"Record already exist\", \"column_name\": [\"year\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\"], \"default_filters\": [{\"type\": \"LubricantEmissionFactor\"}]}, {\"type\": \"required\", \"error_message\": \"is required\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(633, 2, 56, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(634, 2, 56, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(635, 2, 56, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(636, 2, 56, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Volume Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Volume Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(637, 2, 56, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(638, 2, 56, 'emission_factors', NULL, 'co2e', 'GWP', NULL, 'numeric', 'GWP', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(639, 2, 56, 'emission_factors', NULL, 'type', 'LubricantEmissionFactor', NULL, 'text', 'LubricantEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"type\",\n\"value\": \"LubricantEmissionFactor\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(640, 2, 56, 'emission_factors', NULL, 'consumption_unit_type', 'VolumeUnit', NULL, 'text', 'VolumeUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumption_unit_type\",\n\"value\": \"VolumeUnit\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(641, 2, 57, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\"], \"default_filters\": [{\"type\": \"SteamEmissionFactor\"}]}, {\"type\": \"required\", \"error_message\": \"required\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(642, 2, 57, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(643, 2, 57, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(644, 2, 57, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(645, 2, 57, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Energy Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Energy Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(646, 2, 57, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(647, 2, 57, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(648, 2, 57, 'emission_factors', NULL, 'type', 'SteamEmissionFactor', NULL, 'text', 'SteamEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"type\",\n\"value\": \"SteamEmissionFactor\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(649, 2, 57, 'emission_factors', NULL, 'consumption_unit_type', 'EnergyUnit', NULL, 'text', 'EnergyUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumption_unit_type\",\n\"value\": \"EnergyUnit\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(650, 2, 11, 'refrigerant_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"weight_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.RefrigerantConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(651, 2, 11, 'refrigerant_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.RefrigerantConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(652, 2, 11, 'refrigerant_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, '[{\"decimal_points\":\"4\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.RefrigerantConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(653, 2, 11, 'refrigerant_consumptions', NULL, 'emission', 'Emission', NULL, 'numeric', 'Emission', 'template_mandatory', 'visible', NULL, '[{\"decimal_points\":\"3\"}]', NULL, '[{\"type\": \"match_condition\", \"result_type\": \"numeric\", \"result_value\": \"result\", \"match_column\": \"co2e\", \"match_table\": \"emission_factors\", \"match_condition\": [{\"value\": \"refrigerant_type_id\",\"column\": \"refrigerant_type_id\",\"identifier\": \"=\"},{\"value\": \"year\",\"column\": \"year\",\"identifier\": \"=\"}], \"where_condition\": \"type=\'RefrigerantEmissionFactor\'\"},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"emission\", \"variable1\": \"consumption_conv\", \"variable2\": \"match_result\", \"operation\": \"multiply\"}]', 'models.RefrigerantConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(654, 2, 9, 'steam_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"energy_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.SteamConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(655, 2, 9, 'steam_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.SteamConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(656, 2, 9, 'steam_consumptions', NULL, 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"3\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"emission_factors\", \"result_type\": \"numeric\", \"match_column\": \"co2e\", \"match_result\": \"result\", \"match_condition\": [{\"value\": \"energy_unit_id\", \"column\": \"consumption_unit_id\", \"identifier\": \"=\"}, {\"value\": \"year\", \"column\": \"year\", \"identifier\": \"=\"}], \"where_condition\": \"type=\'SteamEmissionFactor\'\"}, {\"type\": \"math\", \"operation\": \"multiply\", \"variable1\": \"consumption_conv\", \"variable2\": \"match_result\", \"result_type\": \"numeric\", \"result_value\": \"emission\"}]', 'models.SteamConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(657, 2, 9, 'steam_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, '[{\"decimal_points\":\"4\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.SteamConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(658, 2, 18, 'vehicle_trackings', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"3\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.VehicleTracking', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(659, 2, 18, 'vehicle_trackings', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.VehicleTracking', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(660, 2, 5, 'detergent_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"weight_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\", \"no_of_decimal_places\": \"2\"}]', 'models.DetergentConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(661, 2, 5, 'detergent_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.DetergentConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(662, 2, 5, 'detergent_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.DetergentConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(663, 2, 10, 'lubricant_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"volume_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\", \"no_of_decimal_places\": \"2\"}]', 'models.LubricantConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(664, 2, 10, 'lubricant_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.LubricantConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(665, 2, 10, 'lubricant_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.LubricantConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(666, 2, 10, 'lubricant_consumptions', NULL, 'emission', 'Emission', NULL, 'numeric', 'Emission', 'template_mandatory', 'visible', NULL, '[{\"decimal_points\":\"3\"}]', NULL, '[{\"type\": \"match_condition\", \"result_type\": \"numeric\", \"result_value\": \"result\", \"match_column\": \"co2e\", \"match_table\": \"emission_factors\", \"match_condition\": [{\"value\": \"year\",\"column\": \"year\",\"identifier\": \"=\"}], \"where_condition\": \"type=\'LubricantEmissionFactor\'\"},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"emission\", \"variable1\": \"consumption_conv\", \"variable2\": \"match_result\", \"operation\": \"multiply\", \"no_of_decimal_places\": \"3\"}]', 'models.LubricantConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(667, 2, 58, 'emission_factors', NULL, 'provider_id', 'Provider', NULL, 'dropdown', 'Provider', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id,models.ThirdParty.name).filter(and_(models.ThirdParty.type == \"provider\",models.ThirdParty.sub_type== \"Provider\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.type=\\\"provider\\\" AND third_parties.sub_type=\\\"Provider\\\" AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(668, 2, 58, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(669, 2, 58, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(670, 2, 58, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(671, 2, 58, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(672, 2, 58, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Energy Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Energy Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(673, 2, 58, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(677, 2, 58, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(678, 2, 58, 'emission_factors', NULL, 'type', 'ElectricityEmissionFactor', NULL, 'text', 'MaterialEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(679, 2, 58, 'emission_factors', NULL, 'provider_type', 'Provider', NULL, 'text', 'Provider', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(680, 2, 58, 'emission_factors', NULL, 'consumption_unit_type', 'EnergyUnit', NULL, 'text', 'Provider', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(704, 2, 60, 'emission_factors', NULL, 'provider_id', 'Provider', NULL, 'dropdown', 'Provider', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id, models.ThirdParty.name).filter(and_(models.ThirdParty.type == \"provider\",models.ThirdParty.sub_type== \"Provider\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"provider_id\", \"year\", \"type\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"provider_id\", \"year\"], \"default_filters\": [{\"type\": \"ElectricityEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.type=\'provider\' AND third_parties.sub_type=\'Provider\' AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(705, 2, 60, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(706, 2, 60, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(707, 2, 60, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(708, 2, 60, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(709, 2, 60, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Electricity Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Electricity Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(710, 2, 60, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(714, 2, 60, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(715, 2, 60, 'emission_factors', NULL, 'type', 'ElectricityEmissionFactor', NULL, 'text', 'MaterialEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"type\",\n\"value\": \"ElectricityEmissionFactor\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(716, 2, 60, 'emission_factors', NULL, 'provider_type', 'Provider', NULL, 'text', 'Provider', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"provider_type\",\n\"value\": \"Provider\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(717, 2, 60, 'emission_factors', NULL, 'consumption_unit_type', 'EnergyUnit', NULL, 'text', 'Provider', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumption_unit_type\",\n\"value\": \"EnergyUnit\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(718, 2, 61, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(719, 2, 61, 'emission_factors', NULL, 'refrigerant_type_id', 'Refrigerant Type', NULL, 'dropdown', 'Refrigerant Type', 'system_mandatory', 'visible', 'db.query(models.RefrigerantType.id, models.RefrigerantType.name).filter(and_(models.RefrigerantType.deleted == 0, models.RefrigerantType.record_status == 1, or_(models.RefrigerantType.subscriber_id == subscriber_id, models.RefrigerantType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"refrigerant_type_id\", \"year\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"refrigerant_type_id\", \"year\"], \"default_filters\": [{\"type\": \"RefrigerantEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"refrigerant_types\", \"select_columns\":\"refrigerant_types.id as refrigerant_type_id,refrigerant_types.name as refrigerant_type_name\", \"on_condition\": \"refrigerant_types.id\", \"where_condition\":\"(refrigerant_types.deleted = 0 OR refrigerant_types.deleted IS NULL)AND (refrigerant_types.record_status = 1 OR refrigerant_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(720, 2, 61, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(721, 2, 61, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(722, 2, 61, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(723, 2, 61, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Weight Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(724, 2, 61, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(725, 2, 61, 'emission_factors', NULL, 'co2e', 'GWP', NULL, 'numeric', 'GWP', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(726, 2, 61, 'emission_factors', NULL, 'type', 'RefrigerantEmissionFactor', NULL, 'text', 'RefrigerantEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"type\",\n\"value\": \"RefrigerantEmissionFactor\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(727, 2, 61, 'emission_factors', NULL, 'consumption_unit_type', 'VolumeUnit', NULL, 'text', 'WeightUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumption_unit_type\",\n\"value\": \"VolumeUnit\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(728, 2, 61, 'emission_factors', NULL, 'consumable_type', 'RefrigerantType', NULL, 'text', 'MaterialType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumable_type\",\n\"value\": \"RefrigerantType\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(729, 2, 62, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(730, 2, 62, 'emission_factors', NULL, 'material_type_id', 'Material Type', NULL, 'dropdown', 'Material Type', 'system_mandatory', 'visible', 'db.query(models.MaterialType.id, models.MaterialType.name).filter(and_(models.MaterialType.deleted == 0, models.MaterialType.record_status == 1, or_(models.MaterialType.subscriber_id == subscriber_id, models.MaterialType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exits\", \"column_name\": [\"material_type_id\", \"year\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"material_type_id\", \"year\"], \"default_filters\": [{\"type\": \"MaterialEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"material_types\", \"select_columns\":\"material_types.id as material_type_id,material_types.name as material_type_name\", \"on_condition\": \"material_types.id\", \"where_condition\":\"(material_types.deleted = 0 OR material_types.deleted IS NULL)AND (material_types.record_status = 1 OR material_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(731, 2, 62, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(732, 2, 62, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(733, 2, 62, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(734, 2, 62, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Weight Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(735, 2, 62, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(736, 2, 62, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(737, 2, 62, 'emission_factors', NULL, 'type', 'MaterialEmissionFactor', NULL, 'text', 'MaterialEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"type\",\n\"value\": \"MaterialEmissionFactor\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(738, 2, 62, 'emission_factors', NULL, 'consumable_type', 'MaterialType', NULL, 'text', 'MaterialType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumable_type\",\n\"value\": \"MaterialType\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(739, 2, 62, 'emission_factors', NULL, 'consumption_unit_type', 'WeightUnit', NULL, 'text', 'WeightUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumption_unit_type\",\n\"value\": \"WeightUnit\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(740, 2, 63, 'emission_factors', NULL, 'provider_id', 'Water Provider', NULL, 'dropdown', 'Water Provider', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id, models.ThirdParty.name).filter(and_(models.ThirdParty.type == \"provider\",models.ThirdParty.sub_type== \"WaterProvider\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\", \"provider_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\", \"provider_id\"], \"default_filters\": [{\"type\": \"WaterEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.type=\'provider\' AND third_parties.sub_type=\'WaterProvider\' AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(741, 2, 63, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(742, 2, 63, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(743, 2, 63, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(744, 2, 63, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(745, 2, 63, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Volume Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Volume Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(746, 2, 63, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(750, 2, 63, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(751, 2, 63, 'emission_factors', NULL, 'provider_type', 'WaterProvider', NULL, 'text', 'WaterProvider', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"provider_type\",\n\"value\": \"WaterProvider\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(752, 2, 63, 'emission_factors', NULL, 'consumption_unit_type', 'VolumeUnit', NULL, 'text', 'VolumeUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumption_unit_type\",\n\"value\": \"VolumeUnit\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(753, 2, 63, 'emission_factors', NULL, 'type', 'WaterEmissionFactor', NULL, 'text', 'WaterEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"type\",\n\"value\": \"WaterEmissionFactor\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(754, 2, 64, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(755, 2, 64, 'emission_factors', NULL, 'waste_type_id', 'Waste Types', NULL, 'dropdown', 'Waste Types', 'system_mandatory', 'visible', 'db.query(models.WasteType.id, models.WasteType.name).filter(and_(models.WasteType.deleted == 0, models.WasteType.record_status == 1, or_(models.WasteType.subscriber_id == subscriber_id, models.WasteType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"year\", \"waste_type_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\", \"waste_type_id\"], \"default_filters\": [{\"type\": \"WeightedWasteEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"waste_types\", \"select_columns\":\"waste_types.id as waste_type_id,waste_types.name as waste_type_name\", \"on_condition\": \"waste_types.id\", \"where_condition\":\"(waste_types.deleted = 0 OR waste_types.deleted IS NULL)AND (waste_types.record_status = 1 OR waste_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(756, 2, 64, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(757, 2, 64, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(758, 2, 64, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(759, 2, 64, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Weight Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(760, 2, 64, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(764, 2, 64, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(765, 2, 64, 'emission_factors', NULL, 'type', 'WeightedWasteEmissionFactor', NULL, 'text', 'WeightedWasteEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"type\",\n\"value\": \"WeightedWasteEmissionFactor\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(766, 2, 64, 'emission_factors', NULL, 'consumable_type', 'WasteType', NULL, 'text', 'WasteType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumable_type\",\n\"value\": \"WasteType\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(767, 2, 64, 'emission_factors', NULL, 'consumption_unit_type', 'WeightUnit', NULL, 'text', 'WeightUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumption_unit_type\",\n\"value\": \"WeightUnit\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(768, 2, 65, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(769, 2, 65, 'emission_factors', NULL, 'waste_type_id', 'Waste Types', NULL, 'dropdown', 'Waste Types', 'system_mandatory', 'visible', 'db.query(models.WasteType.id, models.WasteType.name).filter(and_(models.WasteType.deleted == 0, models.WasteType.record_status == 1, or_(models.WasteType.subscriber_id == subscriber_id, models.WasteType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\", \"waste_type_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\", \"waste_type_id\"], \"default_filters\": [{\"type\": \"VolumetricWasteEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"waste_types\", \"select_columns\":\"waste_types.id as waste_type_id,waste_types.name as waste_type_name\", \"on_condition\": \"waste_types.id\", \"where_condition\":\"(waste_types.deleted = 0 OR waste_types.deleted IS NULL)AND (waste_types.record_status = 1 OR waste_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(770, 2, 65, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(771, 2, 65, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(772, 2, 65, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(773, 2, 65, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Volume Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Volume Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(774, 2, 65, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(778, 2, 65, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(779, 2, 65, 'emission_factors', NULL, 'type', 'VolumetricWasteEmissionFactor', NULL, 'text', 'VolumetricWasteEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"type\",\n\"value\": \"VolumetricWasteEmissionFactor\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(780, 2, 65, 'emission_factors', NULL, 'consumable_type', 'WasteType', NULL, 'text', 'WasteType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumable_type\",\n\"value\": \"WasteType\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(781, 2, 65, 'emission_factors', NULL, 'consumption_unit_type', 'VolumeUnit', NULL, 'text', 'VolumeUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumption_unit_type\",\n\"value\": \"VolumeUnit\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(782, 2, 66, 'emission_factors', NULL, 'provider_id', 'Flight Carrier', NULL, 'dropdown', 'Flight Carrier', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id, models.ThirdParty.name).filter(and_(models.ThirdParty.type == \"provider\",models.ThirdParty.sub_type== \"Airline\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"provider_id\", \"year\", \"consumable_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"provider_id\", \"year\", \"consumable_id\"], \"default_filters\": [{\"type\": \"FlightEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.type=\'provider\' AND third_parties.sub_type=\'Airline\' AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(783, 2, 66, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(784, 2, 66, 'emission_factors', NULL, 'consumable_id', 'Trip Class', NULL, 'dropdown', 'Trip Class', 'system_mandatory', 'visible', 'db.query(models.TripClass.id,models.TripClass.name).filter( and_(models.TripClass.deleted == 0, models.TripClass.record_status == 1, or_(models.TripClass.subscriber_id == subscriber_id, models.TripClass.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"trip_classes\", \"select_columns\":\"trip_classes.id as consumable_id,trip_classes.name as consumable_name\", \"on_condition\": \"trip_classes.id\", \"where_condition\":\"(trip_classes.deleted = 0 OR trip_classes.deleted IS NULL)AND (trip_classes.record_status = 1 OR trip_classes.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(785, 2, 66, 'emission_factors', NULL, 'distance', 'Distance Lower Bound', NULL, 'numeric', 'Distance Lower Bound', 'system_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(786, 2, 66, 'emission_factors', NULL, 'distance_upper_limit', 'Distance Upper Bound', NULL, 'numeric', 'Distance Upper Bound', 'system_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(787, 2, 66, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(788, 2, 66, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(789, 2, 66, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(790, 2, 66, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Distance Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(791, 2, 66, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(795, 2, 66, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(796, 2, 66, 'emission_factors', NULL, 'type', 'FlightEmissionFactor', NULL, 'text', 'FlightEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"type\",\n\"value\": \"FlightEmissionFactor\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(797, 2, 66, 'emission_factors', NULL, 'consumable_type', 'TripClass', NULL, 'text', 'TripClass', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumable_type\",\n\"value\": \"TripClass\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(798, 2, 66, 'emission_factors', NULL, 'consumption_unit_type', 'DistanceUnit', NULL, 'text', 'DistanceUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumption_unit_type\",\n\"value\": \"DistanceUnit\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(799, 2, 66, 'emission_factors', NULL, 'provider_type', 'Airline', NULL, 'text', 'Airline', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(800, 2, 67, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(801, 2, 67, 'emission_factors', NULL, 'transportation_mode_id', 'Mode of Transportation', NULL, 'dropdown', 'Mode of Transportation', 'system_mandatory', 'visible', 'db.query(models.TransportationMode.id, models.TransportationMode.name).filter(and_(models.TransportationMode.deleted == 0, models.TransportationMode.record_status == 1, or_(models.TransportationMode.subscriber_id == subscriber_id, models.TransportationMode.subscriber_id == 1))).order_by(models.TransportationMode.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"transportation_mode_id\", \"year\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"transportation_mode_id\", \"year\"], \"default_filters\": [{\"type\": \"CommuteEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"transportation_modes\", \"select_columns\":\"transportation_modes.id as transportation_mode_id,transportation_modes.name as transportation_mode_name\", \"on_condition\": \"transportation_modes.id\", \"where_condition\":\"(transportation_modes.deleted = 0 OR transportation_modes.deleted IS NULL)AND (transportation_modes.record_status = 1 OR transportation_modes.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(802, 2, 67, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(803, 2, 67, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(804, 2, 67, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(805, 2, 67, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Distance Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(806, 2, 67, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(810, 2, 67, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(811, 2, 67, 'emission_factors', NULL, 'type', 'CommuteEmissionFactor', NULL, 'text', 'CommuteEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\r\n\"type\": \"default\",\r\n\"column\":\"type\",\r\n\"value\": \"CommuteEmissionFactor\"\r\n}\r\n]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(812, 2, 67, 'emission_factors', NULL, 'consumption_unit_type', 'DistanceUnit', NULL, 'text', 'DistanceUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(813, 2, 6, 'commutes', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"distance_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\", \"no_of_decimal_places\": \"2\"}]', 'models.Commute', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(814, 2, 6, 'commutes', NULL, 'emission', 'Emission', NULL, 'numeric', 'Emission', 'template_mandatory', 'visible', NULL, '[{\"decimal_points\":\"3\"}]', NULL, '[{\"type\": \"match_condition\", \"result_type\": \"numeric\", \"result_value\": \"result\", \"match_column\": \"co2e\", \"match_table\": \"emission_factors\", \"match_condition\": [{\"value\": \"year\",\"column\": \"year\",\"identifier\": \"=\"},{\"value\": \"transportation_mode_id\",\"column\": \"transportation_mode_id\",\"identifier\": \"=\"},{\"value\": \"subscriber_id\",\"column\": \"subscriber_id\",\"identifier\": \"=\"}], \"where_condition\": \"type=\'CommuteEmissionFactor\'\"},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"emission\", \"variable1\": \"consumption_conv\", \"variable2\": \"match_result\", \"operation\": \"multiply\", \"no_of_decimal_places\": \"2\"}]', 'models.Commute', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(815, 2, 16, 'audits', NULL, 'type', 'Type', NULL, 'text', 'Type', 'non_mandatory', 'template_invisible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"InternalAudit\", \"name\": \"InternalAudit\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be InternalAudit\", \"pattern\": \"^[A-Za-z]*$\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"InternalAudit\" \r\n}]', 'models.Audit', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(816, 2, 68, 'emission_factors', NULL, 'type', 'RailFreightEmissionFactor', NULL, 'text', 'RailFreightEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\r\n\"type\": \"default\",\r\n\"column\":\"type\",\r\n\"value\": \"RailFreightEmissionFactor\"\r\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(817, 2, 68, 'emission_factors', NULL, 'provider_id', 'Rail Freight Carrier', NULL, 'dropdown', 'Rail Freight Carrier', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id, models.ThirdParty.name).filter(and_(models.ThirdParty.type == \"provider\",models.ThirdParty.sub_type== \"TrainCarrier\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\", \"provider_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\", \"provider_id\"], \"default_filters\": [{\"type\": \"RailFreightEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.type=\'provider\' AND third_parties.sub_type=\'TrainCarrier\' AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(818, 2, 68, 'emission_factors', NULL, 'provider_type', 'TrainCarrier', NULL, 'text', 'TrainCarrier', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(819, 2, 68, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(820, 2, 68, 'emission_factors', NULL, 'train_type_id', 'Train type', NULL, 'dropdown', 'Train type', 'system_mandatory', 'visible', 'db.query(models.TrainType.id, models.TrainType.name).filter(and_(models.TrainType.deleted == 0, models.TrainType.record_status == 1, or_(models.TrainType.subscriber_id == subscriber_id, models.TrainType.subscriber_id == 1))).order_by(models.TrainType.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[1-9]d*$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"train_types\", \"select_columns\":\"train_types.id as train_type_id,train_types.name as train_type_name\", \"on_condition\": \"train_types.id\", \"where_condition\":\"(train_types.deleted = 0 OR train_types.deleted IS NULL)AND (train_types.record_status = 1 OR train_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(821, 2, 68, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(822, 2, 68, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(823, 2, 68, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(824, 2, 68, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Distance Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(825, 2, 68, 'emission_factors', NULL, 'consumption_unit_type', 'DistanceUnit', NULL, 'text', 'DistanceUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(829, 2, 68, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(830, 2, 68, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(831, 2, 69, 'emission_factors', NULL, 'type', 'RoadFreightEmissionFactor', NULL, 'text', 'RoadFreightEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\r\n\"type\": \"default\",\r\n\"column\":\"type\",\r\n\"value\": \"RoadFreightEmissionFactor\"\r\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(832, 2, 69, 'emission_factors', NULL, 'provider_id', 'Road Freight Carrier', NULL, 'dropdown', 'Road Freight Carrier', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id, models.ThirdParty.name.label(\"name\")).filter(and_(models.ThirdParty.type == \"provider\",models.ThirdParty.sub_type== \"RoadCarrier\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\", \"provider_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\", \"provider_id\"], \"default_filters\": [{\"type\": \"RoadFreightEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.type=\'provider\' AND third_parties.sub_type=\'RoadCarrier\' AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(833, 2, 69, 'emission_factors', NULL, 'provider_type', 'RoadCarrier', NULL, 'text', 'RoadCarrier', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(834, 2, 69, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(835, 2, 69, 'emission_factors', NULL, 'refrigerated', 'Refrigerated', NULL, 'dropdown', 'Refrigerated', 'non_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"list_items\": [{\"id\": \"Yes\", \"name\": \"Yes\"}, {\"id\": \"No\", \"name\": \"No\"}], \"error_message\": \"is invalid\", \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(836, 2, 69, 'emission_factors', NULL, 'load_factor_id', 'Load factor', NULL, 'dropdown', 'Load factor', 'system_mandatory', 'visible', 'db.query(models.LoadFactor.id, models.LoadFactor.name).filter(and_(models.LoadFactor.deleted == 0, models.LoadFactor.record_status == 1, or_(models.LoadFactor.subscriber_id == subscriber_id, models.LoadFactor.subscriber_id == 1))).order_by(models.LoadFactor.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[1-9]d*$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"load_factors\", \"select_columns\":\"load_factors.id as load_factor_id,load_factors.name as load_factor_name\", \"on_condition\": \"load_factors.id\", \"where_condition\":\"(load_factors.deleted = 0 OR load_factors.deleted IS NULL)AND (load_factors.record_status = 1 OR load_factors.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(837, 2, 69, 'emission_factors', NULL, 'vehicle_type_id', 'Vehicle type', NULL, 'dropdown', 'Vehicle type', 'system_mandatory', 'visible', 'db.query(models.VehicleType.id, models.VehicleType.name).filter(and_(models.VehicleType.deleted == 0, models.VehicleType.record_status == 1, or_(models.VehicleType.subscriber_id == subscriber_id, models.VehicleType.subscriber_id == 1))).order_by(models.VehicleType.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"vehicle_types\", \"select_columns\":\"vehicle_types.id as vehicle_type_id,vehicle_types.name as vehicle_type_name\", \"on_condition\": \"vehicle_types.id\", \"where_condition\":\"(vehicle_types.deleted = 0 OR vehicle_types.deleted IS NULL)AND (vehicle_types.record_status = 1 OR vehicle_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(838, 2, 69, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(839, 2, 69, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(840, 2, 69, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(841, 2, 69, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Distance Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(842, 2, 69, 'emission_factors', NULL, 'consumption_unit_type', 'DistanceUnit', NULL, 'text', 'DistanceUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(846, 2, 69, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(847, 2, 69, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(848, 2, 70, 'emission_factors', NULL, 'type', 'AirFreightEmissionFactor', NULL, 'text', 'AirFreightEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\r\n\"type\": \"default\",\r\n\"column\":\"type\",\r\n\"value\": \"AirFreightEmissionFactor\"\r\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(849, 2, 70, 'emission_factors', NULL, 'provider_id', 'Air Freight Carrier', NULL, 'dropdown', 'Air Freight Carrier', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id, models.ThirdParty.name).filter(and_(models.ThirdParty.type == \"provider\",models.ThirdParty.sub_type== \"Airline\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\", \"provider_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\", \"provider_id\"], \"default_filters\": [{\"type\": \"AirFreightEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.type=\'provider\' AND third_parties.sub_type=\'Airline\' AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(850, 2, 70, 'emission_factors', NULL, 'provider_type', 'Airline', NULL, 'text', 'Airline', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(851, 2, 70, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(852, 2, 70, 'emission_factors', NULL, 'distance', 'Distance Lower Bound', NULL, 'numeric', 'Distance Lower Bound', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(853, 2, 70, 'emission_factors', NULL, 'distance_upper_limit', 'Distance Upper Bound', NULL, 'numeric', 'Distance Upper Bound', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(854, 2, 70, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(855, 2, 70, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(856, 2, 70, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(857, 2, 70, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Weight distance Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(858, 2, 70, 'emission_factors', NULL, 'consumption_unit_type', 'WeightDistanceUnit', NULL, 'text', 'WeightDistanceUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(862, 2, 70, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(863, 2, 70, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(864, 2, 71, 'emission_factors', NULL, 'type', 'SeaFreightEmissionFactor', NULL, 'text', 'SeaFreightEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\r\n\"type\": \"default\",\r\n\"column\":\"type\",\r\n\"value\": \"SeaFreightEmissionFactor\"\r\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(865, 2, 71, 'emission_factors', NULL, 'provider_id', 'Ocean Freight Carrier', NULL, 'dropdown', 'Ocean Freight Carrier', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id, models.ThirdParty.name).filter(and_(models.ThirdParty.type == \"provider\",models.ThirdParty.sub_type== \"Carrier\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\", \"provider_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\", \"provider_id\"], \"default_filters\": [{\"type\": \"SeaFreightEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.type=\'provider\' AND third_parties.sub_type=\'Carrier\' AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(866, 2, 71, 'emission_factors', NULL, 'provider_type', 'Carrier', NULL, 'text', 'Carrier', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(867, 2, 71, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(868, 2, 71, 'emission_factors', NULL, 'refrigerated', 'Refrigerated', NULL, 'dropdown', 'Refrigerated', 'non_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"list_items\": [{\"id\": \"Yes\", \"name\": \"Yes\"}, {\"id\": \"No\", \"name\": \"No\"}], \"error_message\": \"is invalid\", \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(869, 2, 71, 'emission_factors', NULL, 'unit_type_id', 'Unit type', NULL, 'dropdown', 'Unit type', 'system_mandatory', 'visible', 'db.query(models.UnitType.id, models.UnitType.name).filter(and_(models.UnitType.deleted == 0, models.UnitType.record_status == 1, or_(models.UnitType.subscriber_id == subscriber_id, models.UnitType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[1-9]d*$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"unit_types\", \"select_columns\":\"unit_types.id as unit_type_id,unit_types.name as unit_type_name\", \"on_condition\": \"unit_types.id\", \"where_condition\":\"(unit_types.deleted = 0 OR unit_types.deleted IS NULL)AND (unit_types.record_status = 1 OR unit_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(870, 2, 71, 'emission_factors', NULL, 'tradelane_id', 'Tradelane', NULL, 'dropdown', 'Tradelane', 'system_mandatory', 'visible', 'db.query(models.Tradelane.id, models.Tradelane.name).filter(and_(models.Tradelane.deleted == 0, models.Tradelane.record_status == 1, or_(models.Tradelane.subscriber_id == subscriber_id, models.Tradelane.subscriber_id == 1))).order_by(models.Tradelane.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"tradelanes\", \"select_columns\":\"tradelanes.id as tradelane_id,tradelanes.name as tradelane_name\", \"on_condition\": \"tradelanes.id\", \"where_condition\":\"(tradelanes.deleted = 0 OR tradelanes.deleted IS NULL)AND (tradelanes.record_status = 1 OR tradelanes.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(871, 2, 71, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(872, 2, 71, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(873, 2, 71, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(874, 2, 71, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Distance Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(875, 2, 71, 'emission_factors', NULL, 'consumption_unit_type', 'DistanceUnit', NULL, 'text', 'DistanceUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\r\n\"type\": \"default\",\r\n\"column\":\"consumption_unit_type\",\r\n\"value\": \"DistanceUnit\"\r\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(879, 2, 71, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(880, 2, 71, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(881, 2, 72, 'emission_factors', NULL, 'type', 'GasNOxEmissionFactor', NULL, 'text', 'GasNOxEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\r\n\"type\": \"default\",\r\n\"column\":\"type\",\r\n\"value\": \"GasNOxEmissionFactor\"\r\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(882, 2, 72, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(883, 2, 72, 'emission_factors', NULL, 'gas_type_id', 'Gas Type', NULL, 'dropdown', 'Gas Type', 'system_mandatory', 'visible', 'db.query(models.GasType.id, models.GasType.name).filter(and_(models.GasType.deleted == 0, models.GasType.record_status == 1, or_(models.GasType.subscriber_id == subscriber_id, models.GasType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\", \"gas_type_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\", \"gas_type_id\"], \"default_filters\": [{\"type\": \"GasNOxEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"gas_types\", \"select_columns\":\"gas_types.id as gas_type_id,gas_types.name as gas_type_name\", \"on_condition\": \"gas_types.id\", \"where_condition\":\"(gas_types.deleted = 0 OR gas_types.deleted IS NULL)AND (gas_types.record_status = 1 OR gas_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(884, 2, 72, 'emission_factors', NULL, 'consumable_type', 'GasType', NULL, 'text', 'GasType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(885, 2, 72, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(886, 2, 72, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(887, 2, 72, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(888, 2, 72, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Gas Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Gas Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(889, 2, 72, 'emission_factors', NULL, 'consumption_unit_type', 'GasUnit', NULL, 'text', 'GasUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(890, 2, 72, 'emission_factors', NULL, 'nox', 'NOx', NULL, 'numeric', 'NOx', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(891, 2, 72, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(892, 2, 73, 'emission_factors', NULL, 'type', 'GasSOxEmissionFactor', NULL, 'text', 'GasSOxEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\r\n\"type\": \"default\",\r\n\"column\":\"type\",\r\n\"value\": \"GasSOxEmissionFactor\"\r\n}\r\n]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(893, 2, 73, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(894, 2, 73, 'emission_factors', NULL, 'gas_type_id', 'Gas Type', NULL, 'dropdown', 'Gas Type', 'system_mandatory', 'visible', 'db.query(models.GasType.id, models.GasType.name).filter(and_(models.GasType.deleted == 0, models.GasType.record_status == 1, or_(models.GasType.subscriber_id == subscriber_id, models.GasType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\", \"gas_type_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\", \"gas_type_id\"], \"default_filters\": [{\"type\": \"GasSOxEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"gas_types\", \"select_columns\":\"gas_types.id as gas_type_id,gas_types.name as gas_type_name\", \"on_condition\": \"gas_types.id\", \"where_condition\":\"(gas_types.deleted = 0 OR gas_types.deleted IS NULL)AND (gas_types.record_status = 1 OR gas_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(895, 2, 73, 'emission_factors', NULL, 'consumable_type', 'GasType', NULL, 'text', 'GasType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(896, 2, 73, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(897, 2, 73, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(898, 2, 73, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(899, 2, 73, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Gas Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Gas Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(900, 2, 73, 'emission_factors', NULL, 'consumption_unit_type', 'GasUnit', NULL, 'text', 'GasUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(901, 2, 73, 'emission_factors', NULL, 'sox', 'SOx', NULL, 'numeric', 'SOx', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(902, 2, 73, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(903, 2, 74, 'emission_factors', NULL, 'type', 'VolumetricFuelNOxEmissionFactor', NULL, 'text', 'VolumetricFuelNOxEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\r\n\"type\": \"default\",\r\n\"column\":\"type\",\r\n\"value\": \"VolumetricFuelNOxEmissionFactor\"\r\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(904, 2, 74, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(905, 2, 74, 'emission_factors', NULL, 'fuel_type_id', 'Fuel Type', NULL, 'dropdown', 'Fuel Type', 'system_mandatory', 'visible', 'db.query(models.FuelType.id, models.FuelType.name).filter(and_(models.FuelType.deleted == 0, models.FuelType.record_status == 1, models.FuelType.unit_type == \"Volume Units\", or_(models.FuelType.subscriber_id == subscriber_id, models.FuelType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\", \"fuel_type_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\", \"fuel_type_id\"], \"default_filters\": [{\"type\": \"VolumetricFuelNOxEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"fuel_types\", \"select_columns\":\"fuel_types.id as fuel_type_id,fuel_types.name as fuel_type_name\", \"on_condition\": \"fuel_types.id\", \"where_condition\":\"(fuel_types.deleted = 0 OR fuel_types.deleted IS NULL)AND (fuel_types.record_status = 1 OR fuel_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(906, 2, 74, 'emission_factors', NULL, 'consumable_type', 'FuelType', NULL, 'text', 'FuelType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(907, 2, 74, 'emission_factors', NULL, 'vehicle_type_id', 'Vehicle Type', NULL, 'dropdown', 'Vehicle Type', 'system_mandatory', 'visible', 'db.query(models.VehicleType.id, models.VehicleType.name).filter(and_(models.VehicleType.deleted == 0, models.VehicleType.record_status == 1, or_(models.VehicleType.subscriber_id == subscriber_id, models.VehicleType.subscriber_id == 1))).order_by(models.VehicleType.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"vehicle_types\", \"select_columns\":\"vehicle_types.id as vehicle_type_id,vehicle_types.name as vehicle_type_name\", \"on_condition\": \"vehicle_types.id\", \"where_condition\":\"(vehicle_types.deleted = 0 OR vehicle_types.deleted IS NULL)AND (vehicle_types.record_status = 1 OR vehicle_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(908, 2, 74, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(909, 2, 74, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'client_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\", \"translation_key\": \"MUST_BE_WEB_ADDRESS\"}, {\"type\": \"required\", \"error_message\": \"REQUIRED\", \"translation_key\": \"IS_REQUIRED\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 346),
(910, 2, 74, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(911, 2, 74, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Volume Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Volume Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(912, 2, 74, 'emission_factors', NULL, 'consumption_unit_type', 'VolumeUnit', NULL, 'text', 'VolumeUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"match_condition\",\"variable1\": \"name\",\"variable2\": \"label\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(913, 2, 74, 'emission_factors', NULL, 'nox', 'NOx', NULL, 'numeric', 'NOx', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(914, 2, 74, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(921, 2, 8, 'improvements', NULL, 'amount_conv', 'Amount Conv', NULL, 'numeric', 'Amount Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"match_table\":\"currencies\",\"result_type\":\"numeric\",\"match_column\":\"exchange_rate\",\"result_value\":\"result\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"id\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"amount_conv\",\"variable1\":\"amount\",\"variable2\":\"result\",\"operation\":\"divide\"}]', 'models.Improvement', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(922, 2, 25, 'audits', NULL, 'type', 'Type', NULL, 'text', 'Type', 'system_mandatory', 'template_invisible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"InternalAudit\", \"name\": \"InternalAudit\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be InternalAudit\", \"pattern\": \"^[A-Za-z]*$\"}]', NULL, '[{\"type\":\"default\",\"column\":\"type\",\"value\":\"ExternalAudit\"}]', 'models.Audit', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(923, 2, 36, 'road_freight_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"distance_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.RoadFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(924, 2, 36, 'road_freight_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.RoadFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(926, 2, 36, 'road_freight_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.RoadFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(927, 2, 36, 'road_freight_consumptions', NULL, 'emission', 'Emission', NULL, 'numeric', 'Emission', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"co2e\",\"match_table\":\"emission_factors\",\"match_condition\":[{\"value\":\"provider_id\",\"column\":\"provider_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"},{\"value\":\"vehicle_type_id\",\"column\":\"vehicle_type_id\",\"identifier\":\"=\"}],\"where_condition\":\"type=\'RoadFreightEmissionFactor\'\"},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"emission\",\"variable1\":\"consumption_conv\",\"variable2\":\"match_result\",\"operation\":\"multiply\",\"no_of_decimal_places\":\"2\"}]', 'models.RoadFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(928, 2, 36, 'road_freight_consumptions', NULL, 'nox_emission', 'Nox Emission', NULL, 'numeric', 'Nox Emission', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"nox\",\"match_table\":\"emission_factors\",\"match_condition\":[{\"value\":\"provider_id\",\"column\":\"provider_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"},{\"value\":\"vehicle_type_id\",\"column\":\"vehicle_type_id\",\"identifier\":\"=\"}],\"where_condition\":\"type=\'RoadFreightNoxEmissionFactor\'\"}]', 'models.RoadFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(929, 2, 36, 'road_freight_consumptions', NULL, 'pm_emission', 'PM Emission', NULL, 'numeric', 'PM Emission', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"pm\",\"match_table\":\"emission_factors\",\"match_condition\":[{\"value\":\"provider_id\",\"column\":\"provider_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"},{\"value\":\"vehicle_type_id\",\"column\":\"vehicle_type_id\",\"identifier\":\"=\"}],\"where_condition\":\"type=\'RoadFreightPmEmissionFactor\'\"}]', 'models.RoadFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(930, 2, 75, 'pollutants', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.Pollutant\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Pollutant', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(931, 2, 75, 'pollutants', NULL, 'metric_type', 'Metric type', NULL, 'dropdown', 'Metric type', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"concentration\", \"name\": \"concentration\"}, {\"id\": \"temperature\", \"name\": \"temperature\"}, {\"id\": \"ph\", \"name\": \"ph\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be valid metric type\", \"pattern\": \"^[A-Za-z]*$\",\"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, NULL, 'models.Pollutant', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(932, 2, 75, 'pollutants', NULL, 'type', 'type', NULL, 'text', 'type', 'system_mandatory', 'template_invisible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"WaterPollutant\", \"name\": \"WaterPollutant\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be valid metric type\", \"pattern\": \"^[A-Za-z]*$\",\"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, NULL, 'models.Pollutant', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(933, 2, 75, 'pollutants', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Pollutant', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(934, 2, 76, 'fine_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.FineType\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.FineType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(935, 2, 76, 'fine_types', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.FineType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(936, 2, 77, 'disposal_methods', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.DisposalMethod\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.DisposalMethod', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(937, 2, 77, 'disposal_methods', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": \"sort_order\", \"model_name\": \"models.DisposalMethod\", \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.DisposalMethod', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(941, 2, 15, 'fines', NULL, 'amount_conv', 'Amount Conv', NULL, 'numeric', 'Amount Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"match_table\":\"currencies\",\"result_type\":\"numeric\",\"match_column\":\"exchange_rate\",\"result_value\":\"result\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"id\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"amount_conv\",\"variable1\":\"amount\",\"variable2\":\"result\",\"operation\":\"divide\"}]', 'models.Fine', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(942, 2, 79, 'water_report_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.WaterReportType\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.WaterReportType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(943, 2, 79, 'water_report_types', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterReportType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(944, 2, 79, 'water_report_types', NULL, 'domain_id', 'domain_id', NULL, 'numeric', 'domain_id', 'system_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"1\" \r\n}]', 'models.WaterReportType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(945, 2, 80, 'operational_risk_statuses', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.OperationalRiskStatus\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.OperationalRiskStatus', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(946, 2, 80, 'operational_risk_statuses', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": \"sort_order\", \"model_name\": \"models.OperationalRiskStatus\", \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.OperationalRiskStatus', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(947, 2, 80, 'operational_risk_statuses', NULL, 'domain_id', 'domain_id', NULL, 'numeric', 'domain_id', 'system_mandatory', 'template_invisible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric or 1\", \"pattern\": \"^1+$\"}, {\"type\": \"default\", \"value\": 1}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"1\" \r\n}]', 'models.OperationalRiskStatus', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(948, 2, 81, 'supply_chain_risk_statuses', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.SupplyChainRiskStatus\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.SupplyChainRiskStatus', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(949, 2, 81, 'supply_chain_risk_statuses', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": \"sort_order\", \"model_name\": \"models.SupplyChainRiskStatus\", \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.SupplyChainRiskStatus', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(950, 2, 81, 'supply_chain_risk_statuses', NULL, 'domain_id', 'domain_id', NULL, 'numeric', 'domain_id', 'system_mandatory', 'template_invisible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric or 1\", \"pattern\": \"^1+$\"}, {\"type\": \"default\", \"value\": 1}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"1\" \r\n}]', 'models.SupplyChainRiskStatus', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(951, 2, 82, 'report_categories', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.ReportCategory\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.ReportCategory', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(952, 2, 82, 'report_categories', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": \"sort_order\", \"model_name\": \"models.ReportCategory\", \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.ReportCategory', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(953, 2, 82, 'report_categories', NULL, 'domain_id', 'domain_id', NULL, 'numeric', 'domain_id', 'system_mandatory', 'template_invisible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric or 1\", \"pattern\": \"^1+$\"}, {\"type\": \"default\", \"value\": 1}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"1\" \r\n}]', 'models.ReportCategory', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(954, 2, 83, 'issue_categories', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.IssueCategory\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.IssueCategory', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(955, 2, 83, 'issue_categories', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": \"sort_order\", \"model_name\": \"models.IssueCategory\", \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.IssueCategory', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(956, 2, 83, 'issue_categories', NULL, 'domain_id', 'domain_id', NULL, 'numeric', 'domain_id', 'system_mandatory', 'template_invisible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric or 1\", \"pattern\": \"^1+$\"}, {\"type\": \"default\", \"value\": 1}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"1\" \r\n}]', 'models.IssueCategory', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(957, 2, 84, 'issue_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\", \"issue_category_id\"], \"model_name\": \"models.IssueType\", \"combination_column\": [\"name\", \"issue_category_id\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.IssueType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(958, 2, 84, 'issue_types', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": \"sort_order\", \"model_name\": \"models.IssueType\", \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.IssueType', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(959, 2, 84, 'issue_types', NULL, 'issue_category_id', 'Operational Issue Type', NULL, 'dropdown', 'Operational Issue Category', 'system_mandatory', 'visible', 'db.query(models.IssueCategory.id,models.IssueCategory.name).filter(and_(models.IssueCategory.subscriber_id == subscriber_id, models.IssueCategory.deleted == 0, models.IssueCategory.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.IssueType', 1, 'docs#/data-entry', '{\"table_name\": \"issue_categories\", \"select_columns\":\"issue_categories.id as issue_category_id,issue_categories.name as issue_category_name\", \"on_condition\": \"issue_categories.id\", \"where_condition\":\"(issue_categories.deleted = 0 OR issue_categories.deleted IS NULL)AND (issue_categories.record_status = 1 OR issue_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(960, 2, 84, 'issue_types', NULL, 'domain_id', 'domain_id', NULL, 'numeric', 'domain_id', 'system_mandatory', 'template_invisible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric or 1\", \"pattern\": \"^1+$\"}, {\"type\": \"default\", \"value\": 1}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"1\" \r\n}]', 'models.IssueType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(961, 2, 85, 'report_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\", \"report_category_id\"], \"model_name\": \"models.ReportType\", \"combination_column\": [\"name\", \"report_category_id\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.ReportType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(962, 2, 85, 'report_types', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": \"sort_order\", \"model_name\": \"models.ReportType\", \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.ReportType', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(963, 2, 85, 'report_types', NULL, 'report_category_id', 'Supply Chain Issue Type', NULL, 'dropdown', 'Supply Chain Issue Category', 'system_mandatory', 'visible', 'db.query(models.ReportCategory.id,models.ReportCategory.name).filter(and_(models.ReportCategory.subscriber_id == subscriber_id, models.ReportCategory.deleted == 0, models.ReportCategory.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.ReportType', 1, 'docs#/data-entry', '{\"table_name\": \"report_categories\", \"select_columns\":\"report_categories.id as report_category_id,report_categories.name as report_category_name\", \"on_condition\": \"report_categories.id\", \"where_condition\":\"(report_categories.deleted = 0 OR report_categories.deleted IS NULL)AND (report_categories.record_status = 1 OR report_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(964, 2, 85, 'report_types', NULL, 'domain_id', 'domain_id', NULL, 'numeric', 'domain_id', 'system_mandatory', 'template_invisible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric or 1\", \"pattern\": \"^1+$\"}, {\"type\": \"default\", \"value\": 1}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"1\" \r\n}]', 'models.ReportType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(970, 2, 34, 'rail_freight_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"distance_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.RailFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(971, 2, 34, 'rail_freight_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.RailFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(972, 2, 34, 'rail_freight_consumptions', NULL, 'weight_conv', 'Weight Conv', NULL, 'numeric', 'Weight Conv', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result1\", \"match_condition\": [{\"value\": \"weight_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"weight_conv\", \"variable1\": \"weight\", \"variable2\": \"result1\", \"operation\": \"divide\"}]', 'models.RailFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(973, 2, 34, 'rail_freight_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.RailFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(974, 2, 34, 'rail_freight_consumptions', NULL, 'emission', 'Emission', NULL, 'numeric', 'Emission', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"co2e\",\"match_table\":\"emission_factors\",\"match_condition\":[{\"value\":\"provider_id\",\"column\":\"provider_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"},{\"value\":\"train_type_id\",\"column\":\"train_type_id\",\"identifier\":\"=\"}],\"where_condition\":\"type=\'RailFreightEmissionFactor\'\"},{\"type\":\"match_condition\",\"result_type\":\"numeric\",\"result_value\":\"weight_exchange\",\"match_column\":\"exchange_rate\",\"match_table\":\"units\",\"where_condition\":\"type=\'WeightUnit\' AND code=\'T\'\"},{\"type\":\"math\",\"weight_exchange\":true,\"result_type\":\"numeric\",\"result_value\":\"emission\",\"variable1\":\"consumption_conv\",\"variable2\":\"match_result\",\"variable3\":\"weight_exchange\",\"variable4\":\"weight_conv\",\"operation\":\"multiply\",\"no_of_decimal_places\":\"2\"}]', 'models.RailFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(975, 2, 12, 'material_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"weight_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\", \"no_of_decimal_places\": \"2\"},{\"type\":\"default\", \"value\":\"0.00\"}]', 'models.MaterialConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(976, 2, 12, 'material_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.MaterialConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(977, 2, 12, 'material_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.MaterialConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(978, 2, 12, 'material_consumptions', NULL, 'emission', 'Emission', NULL, 'numeric', 'Emission', 'template_mandatory', 'visible', NULL, '[{\"decimal_points\":\"3\"}]', NULL, '[{\"type\": \"match_condition\", \"result_type\": \"numeric\", \"result_value\": \"result\", \"match_column\": \"co2e\", \"match_table\": \"emission_factors\", \"match_condition\": [{\"value\": \"weight_unit_id\", \"column\": \"consumption_unit_id\", \"identifier\": \"=\"}, { \"value\": \"year\", \"column\": \"year\", \"identifier\": \"=\"}, {\"value\": \"material_type_id\", \"column\": \"material_type_id\", \"identifier\": \"=\"}], \"where_condition\": \"type=\'MaterialEmissionFactor\'\"},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"emission\", \"variable1\": \"consumption_conv\", \"variable2\": \"match_result\", \"operation\": \"multiply\", \"no_of_decimal_places\": \"3\"}]', 'models.MaterialConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(979, 2, 86, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(980, 2, 86, 'emission_factors', NULL, 'fuel_type_id', 'Fuel Type', NULL, 'dropdown', 'Fuel Type', 'system_mandatory', 'visible', 'db.query(models.FuelType.id, models.FuelType.name).filter(and_(models.FuelType.deleted == 0, models.FuelType.record_status == 1, models.FuelType.unit_type == \"Weight Units\", or_(models.FuelType.subscriber_id == subscriber_id, models.FuelType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\", \"fuel_type_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\", \"fuel_type_id\"], \"default_filters\": [{\"type\": \"WeightedFuelEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"fuel_types\", \"select_columns\":\"fuel_types.id as fuel_type_id,fuel_types.name as fuel_type_name\", \"on_condition\": \"fuel_types.id\", \"where_condition\":\"(fuel_types.deleted = 0 OR fuel_types.deleted IS NULL)AND (fuel_types.record_status = 1 OR fuel_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(981, 2, 86, 'emission_factors', NULL, 'vehicle_type_id', 'Vehicle type', NULL, 'dropdown', 'Vehicle type', 'non_mandatory', 'visible', 'db.query(models.VehicleType.id, models.VehicleType.name).filter(and_(models.VehicleType.deleted == 0, models.VehicleType.record_status == 1, or_(models.VehicleType.subscriber_id == subscriber_id, models.VehicleType.subscriber_id == 1))).order_by(models.VehicleType.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"vehicle_types\", \"select_columns\":\"vehicle_types.id as vehicle_type_id,vehicle_types.name as vehicle_type_name\", \"on_condition\": \"vehicle_types.id\", \"where_condition\":\"(vehicle_types.deleted = 0 OR vehicle_types.deleted IS NULL)AND (vehicle_types.record_status = 1 OR vehicle_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(982, 2, 86, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(983, 2, 86, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(984, 2, 86, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(985, 2, 86, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Weight Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(986, 2, 86, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(990, 2, 86, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(991, 2, 86, 'emission_factors', NULL, 'type', 'WeightedFuelEmissionFactor', NULL, 'text', 'WeightedFuelEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"type\",\n\"value\": \"WeightedFuelEmissionFactor\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(992, 2, 86, 'emission_factors', NULL, 'consumable_type', 'FuelType', NULL, 'text', 'FuelType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumable_type\",\n\"value\": \"FuelType\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(993, 2, 86, 'emission_factors', NULL, 'consumption_unit_type', 'WeightUnit', NULL, 'text', 'WeightUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumption_unit_type\",\n\"value\": \"WeightUnit\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(994, 2, 87, 'pollutants', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"name\", \"metric_type\"], \"model_name\": \"models.Pollutant\", \"combination_column\": [\"name\", \"metric_type\"]}]', NULL, NULL, 'models.Pollutant', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(995, 2, 87, 'pollutants', NULL, 'metric_type', 'Metric type', NULL, 'dropdown', 'Metric type', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"Concentration\", \"name\": \"Concentration\"}, {\"id\": \"Temperature\", \"name\": \"Temperature\"}, {\"id\": \"ph\", \"name\": \"ph\"}, {\"id\": \"Darkness\", \"name\": \"Darkness\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be valid metric type\", \"pattern\": \"^[A-Za-z]*$\",\"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, NULL, 'models.Pollutant', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(996, 2, 87, 'pollutants', NULL, 'type', 'type', NULL, 'text', 'type', 'system_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"AirPollutant\" \r\n}]', 'models.Pollutant', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(997, 2, 87, 'pollutants', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Pollutant', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(998, 2, 88, 'pollutants', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"name\", \"metric_type\"], \"model_name\": \"models.Pollutant\", \"combination_column\": [\"name\", \"metric_type\"]}]', NULL, NULL, 'models.Pollutant', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(999, 2, 88, 'pollutants', NULL, 'metric_type', 'Metric type', NULL, 'dropdown', 'Metric type', 'system_mandatory', 'visible', NULL, '[{\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"Concentration\", \"name\": \"Concentration\"}, {\"id\": \"Temperature\", \"name\": \"Temperature\"}, {\"id\": \"ph\", \"name\": \"ph\"}, {\"id\": \"Darkness\", \"name\": \"Darkness\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be valid metric type\", \"pattern\": \"^[A-Za-z]*$\"}, {\"type\": \"required\", \"error_message\": \"is required\",\"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.Pollutant', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1000, 2, 88, 'pollutants', NULL, 'type', 'type', NULL, 'text', 'type', 'system_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\", \"value\": \"WaterPollutant\" }]', 'models.Pollutant', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1001, 2, 88, 'pollutants', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Pollutant', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1002, 2, 89, 'water_providers', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.WaterProvider\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.WaterProvider', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1003, 2, 89, 'water_providers', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": \"sort_order\", \"model_name\": \"models.WaterProvider\", \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.WaterProvider', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(1006, 2, 35, 'air_freight_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.AirFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1007, 2, 90, 'improvement_categories', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.ImprovementCategory\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.ImprovementCategory', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1008, 2, 90, 'improvement_categories', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.ImprovementCategory', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1009, 2, 91, 'gas_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.GasType\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.GasType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1010, 2, 91, 'gas_types', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'system_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.GasType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1011, 2, 38, 'waste_items', 'waste_monitoring_id', 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"3\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"emission_factors\", \"result_type\": \"numeric\", \"match_column\": \"co2e\", \"match_result\": \"result\", \"match_condition\": [{\"value\": \"weight_unit_id\", \"column\": \"consumption_unit_id\", \"identifier\": \"=\"}, {\"value\": \"waste_type_id\", \"column\": \"waste_type_id\", \"identifier\": \"=\"}, {\"value\": \"year\", \"column\": \"year\", \"identifier\": \"=\"}], \"where_condition\": \"type=\'WeightedWasteEmissionFactor\'\"}, {\"type\": \"math\", \"operation\": \"multiply\", \"variable1\": \"consumption_conv\", \"variable2\": \"match_result\", \"result_type\": \"numeric\", \"result_value\": \"emission\"}]', 'models.WasteItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1012, 2, 38, 'waste_items', 'waste_monitoring_id', 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.WasteItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1013, 2, 38, 'waste_items', 'waste_monitoring_id', 'waste_monitoring_id', 'Waste Monitoring ID', NULL, 'numeric', 'Waste Monitoring ID', 'system_mandatory', 'visible', '[{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\"}]', '[{\"decimal_points\":\"4\"}]', NULL, NULL, 'models.WasteItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1014, 2, 38, 'waste_monitorings', NULL, 'type', 'Type', NULL, 'text', 'Type', 'system_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be alphabets\", \"pattern\": \"^[A-Za-z]*$\", \"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, '[{\"type\": \"default\",\"value\": \"WeightedWasteMonitoring\"}]', 'models.WasteMonitoring', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1015, 2, 92, 'improvement_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\", \"improvement_category_id\"], \"model_name\": \"models.ImprovementType\", \"combination_column\": [\"name\", \"improvement_category_id\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.ImprovementType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1016, 2, 92, 'improvement_types', NULL, 'improvement_category_id', 'CSR and Environment Investment Type', NULL, 'dropdown', 'CSR and Environment Investment Type', 'non_mandatory', 'visible', 'db.query(models.ImprovementCategory.id,models.ImprovementCategory.name).filter( and_(models.ImprovementCategory.record_status == 1,models.ImprovementCategory.deleted == 0,models.ImprovementCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.ImprovementType', 1, 'docs#/data-entry', '{\"table_name\": \"improvement_categories\", \"select_columns\":\"improvement_categories.id as improvement_category_id,improvement_categories.name as improvement_category_name\", \"on_condition\": \"improvement_categories.id\", \"where_condition\":\"(improvement_categories.deleted = 0 OR improvement_categories.deleted IS NULL)AND (improvement_categories.record_status = 1 OR improvement_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1017, 2, 92, 'improvement_types', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.ImprovementType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1018, 2, 93, 'staffs', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1019, 2, 93, 'staffs', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_data\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}]', NULL, '[\r\n{\r\n\"type\":\"date_format\",\"date\":\"start_date\"\r\n}\r\n]', 'models.Staff', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1020, 2, 93, 'staffs', NULL, 'staff_code', 'Staff ID', NULL, 'text', 'Staff ID', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"staff_code\"], \"model_name\": \"models.Staff\", \"combination_column\": [\"staff_code\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1021, 2, 93, 'staffs', NULL, 'year_of_birth', 'Year of Birth', NULL, 'numeric', 'Year Of Birth', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\"}, {\"type\": \"year\", \"start_year\": \"-100\", \"end_year\": 0, \"error_message\": \"should be less than current year\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1022, 2, 93, 'staffs', NULL, 'gender_id', 'Gender', NULL, 'dropdown', 'Gender', 'system_mandatory', 'visible', 'db.query(models.Gender.id,models.Gender.name).filter( and_(models.Gender.record_status == 1,models.Gender.deleted == 0,models.Gender.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', '{\"table_name\": \"gender\", \"on_condition\": \"gender.id\", \"select_columns\": \"gender.id as gender_id,gender.name as gender_name\", \"where_condition\": \"(gender.deleted = 0 OR gender.deleted IS NULL) AND (gender.record_status = 1 OR gender.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1023, 2, 93, 'staffs', NULL, 'nationality_id', 'Nationality', NULL, 'dropdown', 'Nationality', 'non_mandatory', 'visible', 'db.query(models.Nationality.id,models.Nationality.name).filter( and_(models.Nationality.record_status == 1,models.Nationality.deleted == 0,models.Nationality.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', '{\"table_name\": \"nationalities\", \"on_condition\": \"nationalities.id\", \"select_columns\": \"nationalities.id as nationality_id,nationalities.name as nationality_name\", \"where_condition\": \"(nationalities.deleted = 0 OR nationalities.deleted IS NULL) AND (nationalities.record_status = 1 OR nationalities.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1024, 2, 93, 'staffs', NULL, 'ethnicity_id', 'Ethnicity', NULL, 'dropdown', 'Ethnicity', 'non_mandatory', 'visible', 'db.query(models.Ethnicity.id,models.Ethnicity.name).filter( and_(models.Ethnicity.record_status == 1,models.Ethnicity.deleted == 0,models.Ethnicity.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', '{\"table_name\": \"ethnicities\", \"on_condition\": \"ethnicities.id\", \"select_columns\": \"ethnicities.id as ethnicity_id,ethnicities.name as ethnicity_name\", \"where_condition\": \"(ethnicities.deleted = 0 OR ethnicities.deleted IS NULL) AND (ethnicities.record_status = 1 OR ethnicities.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1025, 2, 93, 'staffs', NULL, 'hired_locally', 'Hired Locally', NULL, 'dropdown', 'Hired Locally', 'non_mandatory', 'visible', NULL, '[{\"type\": \"list\", \"list_items\": [{\"id\": \"Yes\", \"name\": \"Yes\"}, {\"id\": \"No\", \"name\": \"No\"}], \"error_message\": \"is invalid\", \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1026, 2, 93, 'staffs', NULL, 'nationality_group_id', 'Nationality Group', NULL, 'numeric', 'Nationality Group', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"nationalities\", \"result_type\": \"numeric\", \"match_column\": \"nationality_group_id\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"nationality_id\",\"column\": \"id\",\"identifier\": \"=\"}]}]', 'models.Staff', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1027, 2, 93, 'staffs', NULL, 'end_date', 'Contract End Date', NULL, 'date', 'Contract End Date', 'non_mandatory', 'visible', NULL, '[{\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}]', NULL, '[{\"type\":\"default\",\"column\":\"end_date\",\"value\":null},{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.Staff', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1028, 2, 93, 'staffs', NULL, 'contract_end_reason_id', 'Contract End Reason', NULL, 'dropdown', 'Contract End Reason', 'non_mandatory', 'visible', 'db.query(models.ContractEndReason.id,models.ContractEndReason.name).filter( and_(models.ContractEndReason.record_status == 1,models.ContractEndReason.deleted == 0,models.ContractEndReason.subscriber_id == subscriber_id)).all()', '[{\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', '{\"table_name\": \"contract_end_reasons\", \"on_condition\": \"contract_end_reasons.id\", \"select_columns\": \"contract_end_reasons.id as contract_end_reason_id,contract_end_reasons.name as contract_end_reason_name\", \"where_condition\": \"(contract_end_reasons.deleted = 0 OR contract_end_reasons.deleted IS NULL) AND (contract_end_reasons.record_status = 1 OR contract_end_reasons.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1029, 2, 93, 'staffs', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1030, 2, 94, 'languages', NULL, 'language_name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Language', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1031, 2, 94, 'languages', NULL, 'language_code', 'Code', NULL, 'text', 'Code', 'system_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Language', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1032, 2, 94, 'languages', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[1-9]d*$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"field\": \"sort_order\", \"table\": \"languages\", \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Language', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1033, 2, 96, 'organisational_sectors', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.OrganisationalSector', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1034, 2, 96, 'organisational_sectors', NULL, 'sector_name', 'Sector Name', NULL, 'text', 'Sector Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"sector_name\", \"consumer_id\"], \"model_name\": \"models.OrganisationalSector\", \"combination_column\": [\"sector_name\", \"consumer_id\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.OrganisationalSector', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1036, 2, 35, 'air_freight_consumptions', NULL, 'consumption', 'Distance', NULL, 'numeric', 'Distance', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"default_value\":\"consumption\",\"multimatch\":true,\"match_table\":\"airport_distances\",\"result_type\":\"numeric\",\"match_column\":\"distance\",\"result_value\":\"consumption\",\"match_condition\":[{\"value1\":\"origin_code\",\"column1\":\"origin\",\"value2\":\"destination_code\",\"column2\":\"destination\",\"identifier\":\"=\"}],\"join_condition\":[{\"join_value1\":\"origin_id\",\"join_column1\":\"iata\",\"join_table1\":\"airports\",\"join_where1\":\"id\",\"join_value2\":\"destination_id\",\"join_column2\":\"iata\",\"join_table2\":\"airports\",\"join_where2\":\"id\",\"identifier\":\"=\"}]}]', 'models.AirFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1037, 2, 35, 'air_freight_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"distance_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.AirFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1038, 2, 35, 'air_freight_consumptions', NULL, 'emission', 'Emission', NULL, 'numeric', 'Emission', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"co2e\",\"match_table\":\"emission_factors\",\"match_condition\":[{\"value\":\"provider_id\",\"column\":\"provider_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"}],\"where_condition\":\"type=\'AirFreightEmissionFactor\'\"},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"emission\",\"variable1\":\"consumption_conv\",\"variable2\":\"match_result\",\"operation\":\"multiply\",\"no_of_decimal_places\":\"2\"}]', 'models.AirFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1039, 2, 97, 'waste_categories', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.WasteCategory\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.WasteCategory', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1040, 2, 97, 'waste_categories', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WasteCategory', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1041, 2, 98, 'waste_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\", \"waste_category_id\"], \"model_name\": \"models.WasteType\", \"combination_column\": [\"name\", \"waste_category_id\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.WasteType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1042, 2, 98, 'waste_types', NULL, 'waste_category_id', 'Waste Type', NULL, 'dropdown', 'Waste Type', 'system_mandatory', 'visible', 'db.query(models.WasteCategory.id, models.WasteCategory.name).filter(and_(models.WasteCategory.deleted == 0, models.WasteCategory.record_status == 1, or_(models.WasteCategory.subscriber_id == subscriber_id, models.WasteCategory.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteType', 1, 'docs#/data-entry', '{\"table_name\": \"waste_categories\", \"select_columns\":\"waste_categories.id as waste_category_id,waste_categories.name as waste_category_name\", \"on_condition\": \"waste_categories.id\", \"where_condition\":\"(waste_categories.deleted = 0 OR waste_categories.deleted IS NULL)AND (waste_categories.record_status = 1 OR waste_categories.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(1043, 2, 98, 'waste_types', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WasteType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1044, 2, 99, 'engine_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.EngineType\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.EngineType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1045, 2, 99, 'engine_types', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": \"sort_order\", \"model_name\": \"models.EngineType\", \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.EngineType', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(1046, 2, 100, 'vehicle_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.VehicleType\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.VehicleType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1047, 2, 100, 'vehicle_types', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": \"sort_order\", \"model_name\": \"models.VehicleType\", \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.VehicleType', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(1048, 2, 101, 'transportation_modes', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.TransportationMode\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.TransportationMode', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1049, 2, 101, 'transportation_modes', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": \"sort_order\", \"model_name\": \"models.TransportationMode\", \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.TransportationMode', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(1050, 2, 102, 'departments', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Department', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1051, 2, 102, 'departments', NULL, 'name', 'Department', NULL, 'text', 'Department', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.Department\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Department', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1052, 2, 103, 'training_records', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1053, 2, 103, 'training_records', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"start_date\", \"compare_data\": \"staff_id\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.TrainingRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1054, 2, 103, 'training_records', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"end_date\", \"compare_data\": \"staff_id\", \"validate_date_one\": \"start_date\", \"validate_date_two\": \"end_date\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.TrainingRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1055, 2, 103, 'training_records', NULL, 'staff_id', 'Staff', NULL, 'dropdown', 'Staff ID', 'system_mandatory', 'visible', 'db.query(models.Staff.id,models.Staff.staff_code.label(\"name\")).filter(and_(models.Staff.deleted == 0, models.Staff.record_status == 1, models.Staff.subscriber_id == subscriber_id, models.Staff.staff_code.isnot(None))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"start_date\", \"end_date\", \"staff_id\"], \"model_name\": \"models.TrainingRecord\", \"combination_column\": [\"start_date\", \"end_date\", \"staff_id\"]}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"staffs\", \"select_columns\":\"staffs.id as staff_id,staffs.staff_code as staff_name\", \"on_condition\": \"staffs.id\", \"where_condition\":\"(staffs.deleted = 0 OR staffs.deleted IS NULL)AND (staffs.record_status = 1 OR staffs.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1056, 2, 103, 'training_records', NULL, 'gender_id', 'Gender', NULL, 'dropdown', 'Gender', 'system_mandatory', 'visible', 'db.query(models.Gender.id,models.Gender.name).filter(and_(models.Gender.deleted == 0, models.Gender.record_status == 1, models.Gender.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"gender\", \"select_columns\":\"gender.id as gender_id,gender.name as gender_name\", \"on_condition\": \"gender.id\", \"where_condition\":\"(gender.deleted = 0 OR gender.deleted IS NULL)AND (gender.record_status = 1 OR gender.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(1057, 2, 103, 'training_records', NULL, 'nationality_id', 'Nationality', NULL, 'dropdown', 'Nationality', 'template_mandatory', 'visible', 'db.query(models.Nationality.id,models.Nationality.name).filter(and_(models.Nationality.deleted == 0, models.Nationality.record_status == 1, models.Nationality.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"nationalities\", \"select_columns\":\"nationalities.id as nationality_id,nationalities.name as nationality_name\", \"on_condition\": \"nationalities.id\", \"where_condition\":\"(nationalities.deleted = 0 OR nationalities.deleted IS NULL)AND (nationalities.record_status = 1 OR nationalities.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(1058, 2, 103, 'training_records', NULL, 'ethnicity_id', 'Ethnicity', NULL, 'dropdown', 'Ethnicity', 'template_mandatory', 'visible', 'db.query(models.Ethnicity.id,models.Ethnicity.name).filter(and_(models.Ethnicity.deleted == 0, models.Ethnicity.record_status == 1, models.Ethnicity.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"ethnicities\", \"select_columns\":\"ethnicities.id as ethnicity_id,ethnicities.name as ethnicity_name\", \"on_condition\": \"ethnicities.id\", \"where_condition\":\"(ethnicities.deleted = 0 OR ethnicities.deleted IS NULL)AND (ethnicities.record_status = 1 OR ethnicities.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(1059, 2, 103, 'training_records', NULL, 'employee_category_id', 'Employee Type', NULL, 'dropdown', 'Employee Type', 'template_mandatory', 'visible', 'db.query(models.EmployeeCategory.id,models.EmployeeCategory.name).filter(and_(models.EmployeeCategory.deleted == 0, models.EmployeeCategory.record_status == 1, models.EmployeeCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"employee_categories\", \"select_columns\":\"employee_categories.id as employee_type_id,employee_categories.name as employee_type_name\", \"on_condition\": \"employee_categories.id\", \"where_condition\":\"(employee_categories.deleted = 0 OR employee_categories.deleted IS NULL)AND (employee_categories.record_status = 1 OR employee_categories.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(1060, 2, 103, 'training_records', NULL, 'employee_type_id', 'Employee Type', NULL, 'dropdown', 'Employee Type', 'template_mandatory', 'visible', 'db.query(models.EmployeeType.id,models.EmployeeType.name).filter(and_(models.EmployeeType.deleted == 0, models.EmployeeType.record_status == 1, models.EmployeeType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"employee_types\", \"select_columns\":\"employee_types.id as employee_type_id,employee_types.name as employee_type_name\", \"on_condition\": \"employee_types.id\", \"where_condition\":\"(employee_types.deleted = 0 OR employee_types.deleted IS NULL)AND (employee_types.record_status = 1 OR employee_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1061, 2, 103, 'training_records', NULL, 'contract_type_id', 'Contract Type', NULL, 'dropdown', 'Contract Type', 'system_mandatory', 'visible', 'db.query(models.ContractType.id,models.ContractType.name).filter(and_(models.ContractType.deleted == 0, models.ContractType.record_status == 1, models.ContractType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"contract_types\", \"select_columns\":\"contract_types.id as contract_type_id,contract_types.name as contract_type_name\", \"on_condition\": \"contract_types.id\", \"where_condition\":\"(contract_types.deleted = 0 OR contract_types.deleted IS NULL)AND (contract_types.record_status = 1 OR contract_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1062, 2, 103, 'training_records', NULL, 'nb_staffs', 'Nb of Staffs', NULL, 'numeric', 'Nb of Staffs', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(1063, 2, 103, 'training_records', NULL, 'training_type_id', 'Training Type', NULL, 'dropdown', 'Training Type', 'system_mandatory', 'visible', 'db.query(models.TrainingType.id,models.TrainingType.name).filter(and_(models.TrainingType.deleted == 0,models.TrainingType.record_status == 1,models.TrainingType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"training_types\", \"select_columns\":\"training_types.id as training_type_id,training_types.name as training_type_name\", \"on_condition\": \"training_types.id\", \"where_condition\":\"(training_types.deleted = 0 OR training_types.deleted IS NULL)AND (training_types.record_status = 1 OR training_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1064, 2, 103, 'training_records', NULL, 'total_hours', 'Training Hours', NULL, 'numeric', 'Training Hours', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1065, 2, 103, 'training_records', NULL, 'training_cost', 'Training Cost', NULL, 'numeric', 'Training Cost', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1066, 2, 103, 'training_records', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1067, 2, 104, 'training_records', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1068, 2, 104, 'training_records', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.TrainingRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1069, 2, 104, 'training_records', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.TrainingRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1070, 2, 104, 'training_records', NULL, 'department_id', 'Department', NULL, 'dropdown', 'Department ID', 'system_mandatory', 'visible', 'db.query(models.Department.id,models.Department.name).filter(and_(models.Department.deleted == 0,models.Department.record_status == 1, models.Department.subscriber_id == subscriber_id))', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"start_date\", \"end_date\", \"department_id\"], \"model_name\": \"models.TrainingRecord\", \"combination_column\": [\"start_date\", \"end_date\", \"department_id\"]}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"departments\", \"select_columns\":\"departments.id as department_id,departments.name as department_name\", \"on_condition\": \"departments.id\", \"where_condition\":\"(departments.deleted = 0 OR departments.deleted IS NULL)AND (departments.record_status = 1 OR departments.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1071, 2, 104, 'training_records', NULL, 'gender_id', 'Gender', NULL, 'dropdown', 'Gender', 'system_mandatory', 'visible', 'db.query(models.Gender.id,models.Gender.name).filter(and_(models.Gender.deleted == 0, models.Gender.record_status == 1, models.Gender.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"gender\", \"select_columns\":\"gender.id as gender_id,gender.name as gender_name\", \"on_condition\": \"gender.id\", \"where_condition\":\"(gender.deleted = 0 OR gender.deleted IS NULL)AND (gender.record_status = 1 OR gender.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(1072, 2, 104, 'training_records', NULL, 'nationality_id', 'Nationality', NULL, 'dropdown', 'Nationality', 'template_mandatory', 'visible', 'db.query(models.Nationality.id,models.Nationality.name).filter(and_(models.Nationality.deleted == 0, models.Nationality.record_status == 1, models.Nationality.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"nationalities\", \"select_columns\":\"nationalities.id as nationality_id,nationalities.name as nationality_name\", \"on_condition\": \"nationalities.id\", \"where_condition\":\"(nationalities.deleted = 0 OR nationalities.deleted IS NULL)AND (nationalities.record_status = 1 OR nationalities.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(1073, 2, 104, 'training_records', NULL, 'ethnicity_id', 'Ethnicity', NULL, 'dropdown', 'Ethnicity', 'template_mandatory', 'visible', 'db.query(models.Ethnicity.id,models.Ethnicity.name).filter(and_(models.Ethnicity.deleted == 0, models.Ethnicity.record_status == 1, models.Ethnicity.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"ethnicities\", \"select_columns\":\"ethnicities.id as ethnicity_id,ethnicities.name as ethnicity_name\", \"on_condition\": \"ethnicities.id\", \"where_condition\":\"(ethnicities.deleted = 0 OR ethnicities.deleted IS NULL)AND (ethnicities.record_status = 1 OR ethnicities.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(1074, 2, 104, 'training_records', NULL, 'employee_category_id', 'Employee Type', NULL, 'dropdown', 'Employee Type', 'template_mandatory', 'visible', 'db.query(models.EmployeeCategory.id,models.EmployeeCategory.name).filter(and_(models.EmployeeCategory.deleted == 0, models.EmployeeCategory.record_status == 1, models.EmployeeCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"employee_categories\", \"select_columns\":\"employee_categories.id as employee_type_id,employee_categories.name as employee_type_name\", \"on_condition\": \"employee_categories.id\", \"where_condition\":\"(employee_categories.deleted = 0 OR employee_categories.deleted IS NULL)AND (employee_categories.record_status = 1 OR employee_categories.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(1075, 2, 104, 'training_records', NULL, 'employee_type_id', 'Employee Type', NULL, 'dropdown', 'Employee Type', 'template_mandatory', 'visible', 'db.query(models.EmployeeType.id,models.EmployeeType.name).filter(and_(models.EmployeeType.deleted == 0, models.EmployeeType.record_status == 1, models.EmployeeType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"employee_types\", \"select_columns\":\"employee_types.id as employee_type_id,employee_types.name as employee_type_name\", \"on_condition\": \"employee_types.id\", \"where_condition\":\"(employee_types.deleted = 0 OR employee_types.deleted IS NULL)AND (employee_types.record_status = 1 OR employee_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1076, 2, 104, 'training_records', NULL, 'contract_type_id', 'Contract Type', NULL, 'dropdown', 'Contract Type', 'system_mandatory', 'visible', 'db.query(models.ContractType.id,models.ContractType.name).filter(and_(models.ContractType.deleted == 0, models.ContractType.record_status == 1, models.ContractType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"contract_types\", \"select_columns\":\"contract_types.id as contract_type_id,contract_types.name as contract_type_name\", \"on_condition\": \"contract_types.id\", \"where_condition\":\"(contract_types.deleted = 0 OR contract_types.deleted IS NULL)AND (contract_types.record_status = 1 OR contract_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(1077, 2, 104, 'training_records', NULL, 'nb_staffs', 'Nb of Staffs', NULL, 'numeric', 'Nb of Staffs', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1078, 2, 104, 'training_records', NULL, 'training_type_id', 'Training Type', NULL, 'dropdown', 'Training Type', 'system_mandatory', 'visible', 'db.query(models.TrainingType.id,models.TrainingType.name).filter(and_(models.TrainingType.deleted == 0,models.TrainingType.record_status == 1,models.TrainingType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', '{\"table_name\": \"training_types\", \"select_columns\":\"training_types.id as training_type_id,training_types.name as training_type_name\", \"on_condition\": \"training_types.id\", \"where_condition\":\"(training_types.deleted = 0 OR training_types.deleted IS NULL)AND (training_types.record_status = 1 OR training_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1079, 2, 104, 'training_records', NULL, 'total_hours', 'Training Hours', NULL, 'numeric', 'Training Hours', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1080, 2, 104, 'training_records', NULL, 'training_cost', 'Training Cost', NULL, 'numeric', 'Training Cost', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1081, 2, 104, 'training_records', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.TrainingRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1082, 2, 105, 'performance_reviews', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"staff_id\", \"review_date\", \"consumer_id\", \"employee_type_id\", \"review_type_id\"], \"model_name\": \"models.PerformanceReview\", \"combination_column\": [\"staff_id\", \"review_date\", \"consumer_id\", \"employee_type_id\", \"review_type_id\"]}]', NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1083, 2, 105, 'performance_reviews', NULL, 'review_date', 'Review Date', NULL, 'date', 'Review Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"review_date\", \"compare_data\": \"staff_id\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"review_date\"}]', 'models.PerformanceReview', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1084, 2, 105, 'performance_reviews', NULL, 'staff_id', 'Staff', NULL, 'dropdown', 'Staff ID', 'system_mandatory', 'visible', 'db.query(models.Staff.id,models.Staff.staff_code.label(\"name\")).filter(and_(models.Staff.deleted == 0, models.Staff.record_status == 1, models.Staff.subscriber_id == subscriber_id, models.Staff.staff_code.isnot(None))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"staff_id\", \"review_date\"], \"model_name\": \"models.PerformanceReview\", \"combination_column\": [\"staff_id\", \"review_date\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', '{\"table_name\": \"staffs\", \"select_columns\":\"staffs.id as staff_id,staffs.staff_code as staff_name\", \"on_condition\": \"staffs.id\", \"where_condition\":\"(staffs.deleted = 0 OR staffs.deleted IS NULL)AND (staffs.record_status = 1 OR staffs.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1085, 2, 105, 'performance_reviews', NULL, 'gender_id', 'Gender', NULL, 'dropdown', 'Gender', 'system_mandatory', 'visible', 'db.query(models.Gender.id,models.Gender.name).filter(and_(models.Gender.deleted == 0, models.Gender.record_status == 1, models.Gender.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', '{\"table_name\": \"gender\", \"select_columns\":\"gender.id as gender_id,gender.name as gender_name\", \"on_condition\": \"gender.id\", \"where_condition\":\"(gender.deleted = 0 OR gender.deleted IS NULL)AND (gender.record_status = 1 OR gender.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(1086, 2, 105, 'performance_reviews', NULL, 'nationality_id', 'Nationality', NULL, 'dropdown', 'Nationality', 'template_mandatory', 'visible', 'db.query(models.Nationality.id,models.Nationality.name).filter(and_(models.Nationality.deleted == 0, models.Nationality.record_status == 1, models.Nationality.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', '{\"table_name\": \"nationalities\", \"select_columns\":\"nationalities.id as nationality_id,nationalities.name as nationality_name\", \"on_condition\": \"nationalities.id\", \"where_condition\":\"(nationalities.deleted = 0 OR nationalities.deleted IS NULL)AND (nationalities.record_status = 1 OR nationalities.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(1087, 2, 105, 'performance_reviews', NULL, 'ethnicity_id', 'Ethnicity', NULL, 'dropdown', 'Ethnicity', 'template_mandatory', 'visible', 'db.query(models.Ethnicity.id,models.Ethnicity.name).filter(and_(models.Ethnicity.deleted == 0, models.Ethnicity.record_status == 1, models.Ethnicity.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', '{\"table_name\": \"ethnicities\", \"select_columns\":\"ethnicities.id as ethnicity_id,ethnicities.name as ethnicity_name\", \"on_condition\": \"ethnicities.id\", \"where_condition\":\"(ethnicities.deleted = 0 OR ethnicities.deleted IS NULL)AND (ethnicities.record_status = 1 OR ethnicities.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(1088, 2, 105, 'performance_reviews', NULL, 'employee_category_id', 'Employee Type', NULL, 'dropdown', 'Employee Type', 'template_mandatory', 'visible', 'db.query(models.EmployeeCategory.id,models.EmployeeCategory.name).filter(and_(models.EmployeeCategory.deleted == 0, models.EmployeeCategory.record_status == 1, models.EmployeeCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', '{\"table_name\": \"employee_categories\", \"select_columns\":\"employee_categories.id as employee_type_id,employee_categories.name as employee_type_name\", \"on_condition\": \"employee_categories.id\", \"where_condition\":\"(employee_categories.deleted = 0 OR employee_categories.deleted IS NULL)AND (employee_categories.record_status = 1 OR employee_categories.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(1089, 2, 105, 'performance_reviews', NULL, 'employee_type_id', 'Employee Type', NULL, 'dropdown', 'Employee Type', 'template_mandatory', 'visible', 'db.query(models.EmployeeType.id,models.EmployeeType.name).filter(and_(models.EmployeeType.deleted == 0, models.EmployeeType.record_status == 1, models.EmployeeType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', '{\"table_name\": \"employee_types\", \"select_columns\":\"employee_types.id as employee_type_id,employee_types.name as employee_type_name\", \"on_condition\": \"employee_types.id\", \"where_condition\":\"(employee_types.deleted = 0 OR employee_types.deleted IS NULL)AND (employee_types.record_status = 1 OR employee_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1090, 2, 105, 'performance_reviews', NULL, 'contract_type_id', 'Contract Type', NULL, 'dropdown', 'Contract Type', 'system_mandatory', 'visible', 'db.query(models.ContractType.id,models.ContractType.name).filter(and_(models.ContractType.deleted == 0, models.ContractType.record_status == 1, models.ContractType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', '{\"table_name\": \"contract_types\", \"select_columns\":\"contract_types.id as contract_type_id,contract_types.name as contract_type_name\", \"on_condition\": \"contract_types.id\", \"where_condition\":\"(contract_types.deleted = 0 OR contract_types.deleted IS NULL)AND (contract_types.record_status = 1 OR contract_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1091, 2, 105, 'performance_reviews', NULL, 'nb_staffs', 'Nb of Staffs', NULL, 'numeric', 'Nb of Staffs', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(1092, 2, 105, 'performance_reviews', NULL, 'review_type_id', 'Review Type', NULL, 'dropdown', 'Review Type', 'system_mandatory', 'visible', 'db.query(models.ReviewType.id,models.ReviewType.name).filter(and_(models.ReviewType.deleted == 0,models.ReviewType.record_status == 1,models.ReviewType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', '{\"table_name\": \"review_types\", \"select_columns\":\"review_types.id as review_type_id,review_types.name as review_type_name\", \"on_condition\": \"review_types.id\", \"where_condition\":\"(review_types.deleted = 0 OR review_types.deleted IS NULL)AND (review_types.record_status = 1 OR review_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1093, 2, 105, 'performance_reviews', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1094, 2, 106, 'customer_accident_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.CustomerAccidentType\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.CustomerAccidentType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1095, 2, 106, 'customer_accident_types', NULL, 'domain_id', 'Domain Id', NULL, 'numeric', 'Domain Id', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"1\" \r\n}]', 'models.CustomerAccidentType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1096, 2, 106, 'customer_accident_types', NULL, 'description', 'Description', NULL, 'text', 'Description', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.CustomerAccidentType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1097, 2, 107, 'leaves', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"staff_id\", \"date_of_leave\", \"date_of_return\", \"consumer_id\", \"employee_type_id\", \"contract_type_id\", \"description\", \"leave_type_id\", \"report_date\", \"no_of_day_entitled\", \"number_of_absentee_days\", \"number_of_working_days\"], \"model_name\": \"models.Leave\", \"combination_column\": [\"staff_id\", \"date_of_leave\", \"date_of_return\", \"consumer_id\", \"employee_type_id\", \"contract_type_id\", \"description\", \"leave_type_id\", \"report_date\", \"no_of_day_entitled\", \"number_of_absentee_days\", \"number_of_working_days\"]}]', NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1098, 2, 107, 'leaves', NULL, 'staff_id', 'Staff', NULL, 'dropdown', 'Staff ID', 'system_mandatory', 'visible', 'db.query(models.Staff.id,models.Staff.staff_code.label(\"name\")).filter(and_(models.Staff.deleted == 0, models.Staff.record_status == 1, models.Staff.subscriber_id == subscriber_id, models.Staff.staff_code.isnot(None))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"staff_id\", \"date_of_leave\", \"date_of_return\"], \"model_name\": \"models.Leave\", \"combination_column\": [\"staff_id\", \"date_of_leave\", \"date_of_return\"]}]', NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', '{\"table_name\": \"staffs\", \"on_condition\": \"staffs.id\", \"select_columns\": \"staffs.id as staff_id,staffs.staff_code as staff_name\", \"where_condition\": \"(staffs.deleted = 0 OR staffs.deleted IS NULL) AND (staffs.record_status = 1 OR staffs.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1099, 2, 107, 'leaves', NULL, 'employee_type_id', 'Employee Type', NULL, 'dropdown', 'Employee Type', 'non_mandatory', 'visible', 'db.query(models.EmployeeType.id,models.EmployeeType.name).filter( and_(models.EmployeeType.record_status == 1,models.EmployeeType.deleted == 0,models.EmployeeType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', '{\"table_name\": \"employee_types\", \"on_condition\": \"employee_types.id\", \"select_columns\": \"employee_types.id as employee_type_id,employee_types.name as employee_type_name\", \"where_condition\": \"(employee_types.deleted = 0 OR employee_types.deleted IS NULL) AND (employee_types.record_status = 1 OR employee_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1100, 2, 107, 'leaves', NULL, 'contract_type_id', 'Contract Type', NULL, 'dropdown', 'Contract Type', 'non_mandatory', 'visible', 'db.query(models.ContractType.id,models.ContractType.name).filter( and_(models.ContractType.record_status == 1,models.ContractType.deleted == 0,models.ContractType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', '{\"table_name\": \"contract_types\", \"on_condition\": \"contract_types.id\", \"select_columns\": \"contract_types.id as contract_type_id,contract_types.name as contract_type_name\", \"where_condition\": \"(contract_types.deleted = 0 OR contract_types.deleted IS NULL) AND (contract_types.record_status = 1 OR contract_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1101, 2, 107, 'leaves', NULL, 'date_of_leave', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"date_of_leave\", \"compare_data\": \"staff_id\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"date_of_leave\"}]', 'models.Leave', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1102, 2, 107, 'leaves', NULL, 'date_of_return', 'End date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"date_of_return\", \"compare_data\": \"staff_id\", \"validate_date_one\": \"date_of_leave\", \"validate_date_two\": \"date_of_return\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"date_of_return\"}]', 'models.Leave', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1103, 2, 107, 'leaves', NULL, 'description', 'Reason of absense', NULL, 'text', 'Reason of absense', 'system_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1104, 2, 107, 'leaves', NULL, 'leave_type_id', 'Lost day Type', NULL, 'dropdown', 'Lost day Type', 'non_mandatory', 'visible', 'db.query(models.LeaveType.id,models.LeaveType.name).filter( and_(models.LeaveType.record_status == 1,models.LeaveType.deleted == 0,models.LeaveType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', '{\"table_name\": \"leave_types\", \"on_condition\": \"leave_types.id\", \"select_columns\": \"leave_types.id as leave_type_id,leave_types.name as leave_type_name\", \"where_condition\": \"(leave_types.deleted = 0 OR leave_types.deleted IS NULL) AND (leave_types.record_status = 1 OR leave_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1106, 2, 107, 'leaves', NULL, 'no_of_day_entitled', 'No of day entitled', NULL, 'numeric', 'No of day entitled', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1107, 2, 107, 'leaves', NULL, 'number_of_absentee_days', 'Number of absentee days', NULL, 'numeric', 'Number of absentee days', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1108, 2, 107, 'leaves', NULL, 'number_of_working_days', 'Number of working days', NULL, 'numeric', 'Number of working days', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1109, 2, 107, 'leaves', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1110, 2, 108, 'leaves', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"department_id\", \"date_of_leave\", \"date_of_return\", \"consumer_id\", \"employee_type_id\", \"contract_type_id\", \"description\", \"leave_type_id\", \"report_date\", \"no_of_day_entitled\", \"number_of_absentee_days\", \"number_of_working_days\"], \"model_name\": \"models.Leave\", \"combination_column\": [\"department_id\", \"date_of_leave\", \"date_of_return\", \"consumer_id\", \"employee_type_id\", \"contract_type_id\", \"description\", \"leave_type_id\", \"report_date\", \"no_of_day_entitled\", \"number_of_absentee_days\", \"number_of_working_days\"]}]', NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1111, 2, 108, 'leaves', NULL, 'department_id', 'Department', NULL, 'dropdown', 'Department', 'system_mandatory', 'visible', 'db.query(models.Department.id,models.Department.name).filter( and_(models.Department.record_status == 1,models.Department.deleted == 0,models.Department.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"department_id\", \"date_of_leave\", \"date_of_return\"], \"model_name\": \"models.Leave\", \"combination_column\": [\"department_id\", \"date_of_leave\", \"date_of_return\"]}]', NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', '{\"table_name\": \"departments\", \"on_condition\": \"departments.id\", \"select_columns\": \"departments.id as department_id,departments.name as department_name\", \"where_condition\": \"(departments.deleted = 0 OR departments.deleted IS NULL) AND (departments.record_status = 1 OR departments.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1112, 2, 108, 'leaves', NULL, 'employee_type_id', 'Employee Type', NULL, 'dropdown', 'Employee Type', 'non_mandatory', 'visible', 'db.query(models.EmployeeType.id,models.EmployeeType.name).filter( and_(models.EmployeeType.record_status == 1,models.EmployeeType.deleted == 0,models.EmployeeType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', '{\"table_name\": \"employee_types\", \"on_condition\": \"employee_types.id\", \"select_columns\": \"employee_types.id as employee_type_id,employee_types.name as employee_type_name\", \"where_condition\": \"(employee_types.deleted = 0 OR employee_types.deleted IS NULL) AND (employee_types.record_status = 1 OR employee_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1113, 2, 108, 'leaves', NULL, 'contract_type_id', 'Contract Type', NULL, 'dropdown', 'Contract Type', 'non_mandatory', 'visible', 'db.query(models.ContractType.id,models.ContractType.name).filter( and_(models.ContractType.record_status == 1,models.ContractType.deleted == 0,models.ContractType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', '{\"table_name\": \"contract_types\", \"on_condition\": \"contract_types.id\", \"select_columns\": \"contract_types.id as contract_type_id,contract_types.name as contract_type_name\", \"where_condition\": \"(contract_types.deleted = 0 OR contract_types.deleted IS NULL) AND (contract_types.record_status = 1 OR contract_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1114, 2, 108, 'leaves', NULL, 'date_of_leave', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"date_of_leave\"}]', 'models.Leave', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1115, 2, 108, 'leaves', NULL, 'date_of_return', 'End date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"date_of_leave\", \"second_date\": \"date_of_return\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"date_of_return\"}]', 'models.Leave', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1116, 2, 108, 'leaves', NULL, 'description', 'Reason of absense', NULL, 'text', 'Reason of absense', 'system_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1117, 2, 108, 'leaves', NULL, 'leave_type_id', 'Lost day Type', NULL, 'dropdown', 'Lost day Type', 'non_mandatory', 'visible', 'db.query(models.LeaveType.id,models.LeaveType.name).filter( and_(models.LeaveType.record_status == 1,models.LeaveType.deleted == 0,models.LeaveType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', '{\"table_name\": \"leave_types\", \"on_condition\": \"leave_types.id\", \"select_columns\": \"leave_types.id as leave_type_id,leave_types.name as leave_type_name\", \"where_condition\": \"(leave_types.deleted = 0 OR leave_types.deleted IS NULL) AND (leave_types.record_status = 1 OR leave_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1119, 2, 108, 'leaves', NULL, 'no_of_day_entitled', 'No of day entitled', NULL, 'numeric', 'No of day entitled', 'system_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1120, 2, 108, 'leaves', NULL, 'number_of_absentee_days', 'Number of absentee days', NULL, 'numeric', 'Number of absentee days', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1121, 2, 108, 'leaves', NULL, 'number_of_working_days', 'Number of working days', NULL, 'numeric', 'Number of working days', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1122, 2, 108, 'leaves', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Leave', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1123, 2, 109, 'waste_marpol_disposals', NULL, 'name', 'Garbage Category by MARPOL', NULL, 'text', 'Garbage Category by MARPOL', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.WasteMarpolDisposal\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.WasteMarpolDisposal', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1124, 2, 109, 'waste_marpol_disposals', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": \"sort_order\", \"model_name\": \"models.WasteMarpolDisposal\", \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.WasteMarpolDisposal', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(1125, 2, 109, 'waste_marpol_disposals', NULL, 'color_code', 'Garbage Colour code by MARPOL', NULL, 'text', 'Garbage Colour code by MARPOL', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"color_code\"], \"model_name\": \"models.WasteMarpolDisposal\", \"combination_column\": [\"color_code\"], \"translation_key\": \"MUST_BE_UNIQUE\"}, {\"type\": \"regex\", \"error_message\": \"must be valid color code\", \"pattern\": \"#(?:[0-9a-fA-F]{3}){1,2}$\"}]', NULL, NULL, 'models.WasteMarpolDisposal', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1126, 2, 110, 'staff_turnovers', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"staff_id\", \"start_date\", \"end_date\", \"consumer_id\", \"employee_type_id\", \"contract_type_id\", \"age_group_id\", \"nb_turnovers\", \"turnover_type\"], \"model_name\": \"models.StaffTurnover\", \"combination_column\": [\"staff_id\", \"start_date\", \"end_date\", \"consumer_id\", \"employee_type_id\", \"contract_type_id\", \"age_group_id\", \"nb_turnovers\", \"turnover_type\"]}]', NULL, NULL, 'models.StaffTurnover', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1127, 2, 110, 'staff_turnovers', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"start_date\", \"compare_data\": \"staff_id\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[\r\n{\r\n\"type\":\"date_format\",\"date\":\"start_date\"\r\n}\r\n]', 'models.StaffTurnover', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1128, 2, 110, 'staff_turnovers', NULL, 'end_date', 'End date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"end_date\", \"compare_data\": \"staff_id\", \"validate_date_one\": \"start_date\", \"validate_date_two\": \"end_date\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[\r\n{\r\n\"type\":\"date_format\",\"date\":\"end_date\"\r\n}\r\n]', 'models.StaffTurnover', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1129, 2, 110, 'staff_turnovers', NULL, 'staff_id', 'Staff', NULL, 'dropdown', 'Staff ID', 'system_mandatory', 'visible', 'db.query(models.Staff.id,models.Staff.staff_code.label(\"name\")).filter(and_(models.Staff.deleted == 0, models.Staff.record_status == 1, models.Staff.subscriber_id == subscriber_id, models.Staff.staff_code.isnot(None))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"staff_id\", \"start_date\", \"end_date\"], \"model_name\": \"models.StaffTurnover\", \"combination_column\": [\"staff_id\", \"start_date\", \"end_date\"]}]', NULL, NULL, 'models.StaffTurnover', 1, 'docs#/data-entry', '{\"table_name\": \"staffs\", \"on_condition\": \"staffs.id\", \"select_columns\": \"staffs.id as staff_id,staffs.staff_code as staff_name\", \"where_condition\": \"(staffs.deleted = 0 OR staffs.deleted IS NULL) AND (staffs.record_status = 1 OR staffs.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1130, 2, 110, 'staff_turnovers', NULL, 'employee_type_id', 'Employee Type', NULL, 'dropdown', 'Employee Type', 'non_mandatory', 'visible', 'db.query(models.EmployeeType.id,models.EmployeeType.name).filter( and_(models.EmployeeType.record_status == 1,models.EmployeeType.deleted == 0,models.EmployeeType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.StaffTurnover', 1, 'docs#/data-entry', '{\"table_name\": \"employee_types\", \"on_condition\": \"employee_types.id\", \"select_columns\": \"employee_types.id as employee_type_id,employee_types.name as employee_type_name\", \"where_condition\": \"(employee_types.deleted = 0 OR employee_types.deleted IS NULL) AND (employee_types.record_status = 1 OR employee_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1131, 2, 110, 'staff_turnovers', NULL, 'contract_type_id', 'Contract Type', NULL, 'dropdown', 'Contract Type', 'non_mandatory', 'visible', 'db.query(models.ContractType.id,models.ContractType.name).filter( and_(models.ContractType.record_status == 1,models.ContractType.deleted == 0,models.ContractType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.StaffTurnover', 1, 'docs#/data-entry', '{\"table_name\": \"contract_types\", \"on_condition\": \"contract_types.id\", \"select_columns\": \"contract_types.id as contract_type_id,contract_types.name as contract_type_name\", \"where_condition\": \"(contract_types.deleted = 0 OR contract_types.deleted IS NULL) AND (contract_types.record_status = 1 OR contract_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1132, 2, 110, 'staff_turnovers', NULL, 'age_group_id', 'Age Group', NULL, 'dropdown', 'Lost day Type', 'non_mandatory', 'visible', 'db.query(models.AgeGroup.id,models.AgeGroup.name).filter( and_(models.AgeGroup.record_status == 1,models.AgeGroup.deleted == 0,models.AgeGroup.subscriber_id == subscriber_id)).all()', '[{\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.StaffTurnover', 1, 'docs#/data-entry', '{\"table_name\": \"age_groups\", \"on_condition\": \"age_groups.id\", \"select_columns\": \"age_groups.id as age_group_id,age_groups.name as age_group_name\", \"where_condition\": \"(age_groups.deleted = 0 OR age_groups.deleted IS NULL) AND (age_groups.record_status = 1 OR age_groups.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1133, 2, 110, 'staff_turnovers', NULL, 'nb_turnovers', 'No.of turnovers', NULL, 'numeric', 'No.of turnovers', 'system_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\", \"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.StaffTurnover', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 346),
(1134, 2, 110, 'staff_turnovers', NULL, 'turnover_type', 'Turnover Type', NULL, 'dropdown', 'Turnover Type', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"list_items\": [{\"id\": \"Voluntary\", \"name\": \"Voluntary\"}, {\"id\": \"Non Voluntary\", \"name\": \"Non Voluntary\"}], \"error_message\": \"is invalid\", \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.StaffTurnover', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1135, 2, 110, 'staff_turnovers', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.StaffTurnover', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1136, 2, 111, 'staff_turnovers', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"department_id\", \"start_date\", \"end_date\", \"consumer_id\", \"employee_type_id\", \"contract_type_id\", \"age_group_id\", \"nb_turnovers\", \"turnover_type\"], \"model_name\": \"models.StaffTurnover\", \"combination_column\": [\"department_id\", \"start_date\", \"end_date\", \"consumer_id\", \"employee_type_id\", \"contract_type_id\", \"age_group_id\", \"nb_turnovers\", \"turnover_type\"]}]', NULL, NULL, 'models.StaffTurnover', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1137, 2, 111, 'staff_turnovers', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[\r\n{\r\n\"type\":\"date_format\",\"date\":\"start_date\"\r\n}\r\n]', 'models.StaffTurnover', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1138, 2, 111, 'staff_turnovers', NULL, 'end_date', 'End date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[\r\n{\r\n\"type\":\"date_format\",\"date\":\"end_date\"\r\n}\r\n]', 'models.StaffTurnover', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1139, 2, 111, 'staff_turnovers', NULL, 'department_id', 'Department', NULL, 'dropdown', 'Department', 'system_mandatory', 'visible', 'db.query(models.Department.id,models.Department.name).filter( and_(models.Department.record_status == 1,models.Department.deleted == 0,models.Department.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"department_id\", \"start_date\", \"end_date\"], \"model_name\": \"models.StaffTurnover\", \"combination_column\": [\"department_id\", \"start_date\", \"end_date\"]}]', NULL, NULL, 'models.StaffTurnover', 1, 'docs#/data-entry', '{\"table_name\": \"departments\", \"on_condition\": \"departments.id\", \"select_columns\": \"departments.id as department_id,departments.name as department_name\", \"where_condition\": \"(departments.deleted = 0 OR departments.deleted IS NULL) AND (departments.record_status = 1 OR departments.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1140, 2, 111, 'staff_turnovers', NULL, 'employee_type_id', 'Employee Type', NULL, 'dropdown', 'Employee Type', 'non_mandatory', 'visible', 'db.query(models.EmployeeType.id,models.EmployeeType.name).filter( and_(models.EmployeeType.record_status == 1,models.EmployeeType.deleted == 0,models.EmployeeType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.StaffTurnover', 1, 'docs#/data-entry', '{\"table_name\": \"employee_types\", \"on_condition\": \"employee_types.id\", \"select_columns\": \"employee_types.id as employee_type_id,employee_types.name as employee_type_name\", \"where_condition\": \"(employee_types.deleted = 0 OR employee_types.deleted IS NULL) AND (employee_types.record_status = 1 OR employee_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1141, 2, 111, 'staff_turnovers', NULL, 'contract_type_id', 'Contract Type', NULL, 'dropdown', 'Contract Type', 'non_mandatory', 'visible', 'db.query(models.ContractType.id,models.ContractType.name).filter( and_(models.ContractType.record_status == 1,models.ContractType.deleted == 0,models.ContractType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.StaffTurnover', 1, 'docs#/data-entry', '{\"table_name\": \"contract_types\", \"on_condition\": \"contract_types.id\", \"select_columns\": \"contract_types.id as contract_type_id,contract_types.name as contract_type_name\", \"where_condition\": \"(contract_types.deleted = 0 OR contract_types.deleted IS NULL) AND (contract_types.record_status = 1 OR contract_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(1142, 2, 111, 'staff_turnovers', NULL, 'age_group_id', 'Age Group', NULL, 'dropdown', 'Lost day Type', 'non_mandatory', 'visible', 'db.query(models.AgeGroup.id,models.AgeGroup.name).filter( and_(models.AgeGroup.record_status == 1,models.AgeGroup.deleted == 0,models.AgeGroup.subscriber_id == subscriber_id)).all()', '[{\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.StaffTurnover', 1, 'docs#/data-entry', '{\"table_name\": \"age_groups\", \"on_condition\": \"age_groups.id\", \"select_columns\": \"age_groups.id as age_group_id,age_groups.name as age_group_name\", \"where_condition\": \"(age_groups.deleted = 0 OR age_groups.deleted IS NULL) AND (age_groups.record_status = 1 OR age_groups.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1143, 2, 111, 'staff_turnovers', NULL, 'nb_turnovers', 'No.of turnovers', NULL, 'numeric', 'No.of turnovers', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.StaffTurnover', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1144, 2, 111, 'staff_turnovers', NULL, 'turnover_type', 'Turnover Type', NULL, 'dropdown', 'Turnover Type', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"list_items\": [{\"id\": \"Voluntary\", \"name\": \"Voluntary\"}, {\"id\": \"Non Voluntary\", \"name\": \"Non Voluntary\"}], \"error_message\": \"is invalid\", \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.StaffTurnover', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1145, 2, 111, 'staff_turnovers', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.StaffTurnover', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1146, 2, 112, 'tracking_categories', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.TrackingCategory\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.TrackingCategory', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1147, 2, 112, 'tracking_categories', NULL, 'sort_order', 'Sort Order', NULL, 'text', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"sort_order\"], \"model_name\": \"models.TrackingCategory\", \"combination_column\": [\"sort_order\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.TrackingCategory', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(1148, 2, 113, 'tracking_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.TrackingType\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.TrackingType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1149, 2, 113, 'tracking_types', NULL, 'sort_order', 'Sort Order', NULL, 'text', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"sort_order\"], \"model_name\": \"models.TrackingType\", \"combination_column\": [\"sort_order\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.TrackingType', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(1150, 2, 114, 'end_points', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"field\": \"name\", \"table\": \"end_points\", \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.EndPoint', 1, 'docs#/data-entry', NULL, 0, 0, 1, 1, 1),
(1151, 2, 114, 'end_points', NULL, 'url', 'Url', NULL, 'text', 'Url', 'system_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EndPoint', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1152, 2, 114, 'end_points', NULL, 'method', 'Method', NULL, 'dropdown', 'Method', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": 1, \"name\": \"GET\"}, {\"id\": 2, \"name\": \"PUT\"}, {\"id\": 3, \"name\": \"POST\"}, {\"id\": 4, \"name\": \"DELETE\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.EndPoint', 1, 'docs#/data-entry', NULL, 0, 0, 1, 1, 1),
(1153, 2, 114, 'end_points', NULL, 'form_id', 'Form id', NULL, 'dropdown', 'Form id', 'system_mandatory', 'visible', 'db.query(models.Form.id.label(\"Form id\"),models.Form.title.label(\"Form title\")).filter( and_(models.Form.record_status == 1,models.Form.deleted == 0,models.Form.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.EndPoint', 1, 'docs#/data-entry', '{\"table_name\": \"forms\", \"select_columns\":\"forms.id as form_id,forms.title as form_title\", \"on_condition\": \"forms.id\", \"where_condition\":\"(forms.deleted = 0 OR forms.deleted IS NULL)AND (forms.record_status = 1 OR forms.record_status IS NULL)\"}', 0, 0, 1, 1, 1),
(1154, 2, 115, 'access_controls', NULL, 'endpoint_id', 'Endpoint', NULL, 'dropdown', 'Endpoint', 'system_mandatory', 'visible', 'db.query(models.EndPoint.id,models.EndPoint.name).filter(and_(models.EndPoint.subscriber_id == subscriber_id, models.EndPoint.editable == \'Yes\',models.EndPoint.deleted == 0,models.EndPoint.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"endpoint_id\", \"role_id\"], \"model_name\": \"models.AccessControl\", \"combination_column\": [\"endpoint_id\", \"role_id\"]}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.AccessControl', 1, 'docs#/data-entry', '{\"table_name\": \"end_points\", \"select_columns\":\"end_points.id as endpoint_id,end_points.name as endpoint_name\", \"on_condition\": \"end_points.id\", \"where_condition\":\"(end_points.editable = \'Yes\' )AND (end_points.deleted = 0 OR end_points.deleted IS NULL)AND (end_points.record_status = 1 OR end_points.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1155, 2, 115, 'access_controls', NULL, 'role_id', 'Role', NULL, 'dropdown', 'Role', 'system_mandatory', 'visible', 'db.query(models.Role.id,models.Role.name).filter(and_(models.Role.subscriber_id == subscriber_id, models.Role.deleted == 0, models.Role.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.AccessControl', 1, 'docs#/data-entry', '{\"table_name\": \"roles\", \"select_columns\":\"roles.id as role_id,roles.name as role_name\", \"on_condition\": \"roles.id\", \"where_condition\":\"(roles.deleted = 0 OR roles.deleted IS NULL)AND (roles.record_status = 1 OR roles.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1156, 2, 116, 'performance_reviews', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"consumer_id\", \"review_date\", \"department_id\", \"employee_type_id\", \"employee_category_id\", \"contract_type_id\", \"review_type_id\", \"nb_staffs\"], \"model_name\": \"models.PerformanceReview\", \"combination_column\": [\"consumer_id\", \"review_date\", \"department_id\", \"employee_type_id\", \"employee_category_id\", \"contract_type_id\", \"review_type_id\", \"nb_staffs\"]}]', NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1157, 2, 116, 'performance_reviews', NULL, 'review_date', 'Review Date', NULL, 'date', 'Review Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"review_date\"}]', 'models.PerformanceReview', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1158, 2, 116, 'performance_reviews', NULL, 'department_id', 'Department', NULL, 'dropdown', 'Department ID', 'system_mandatory', 'visible', 'db.query(models.Department.id,models.Department.name).filter(and_(models.Department.deleted == 0,models.Department.record_status == 1, models.Department.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"department_id\", \"review_date\"], \"model_name\": \"models.PerformanceReview\", \"combination_column\": [\"department_id\", \"review_date\"]}]', NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', '{\"table_name\": \"departments\", \"select_columns\":\"departments.id as department_id,departments.name as department_name\", \"on_condition\": \"departments.id\", \"where_condition\":\"(departments.deleted = 0 OR departments.deleted IS NULL)AND (departments.record_status = 1 OR departments.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1160, 2, 116, 'performance_reviews', NULL, 'employee_type_id', 'Employee SubType', NULL, 'dropdown', 'Employee SubType', 'template_mandatory', 'visible', 'db.query(models.EmployeeType.id,models.EmployeeType.name).filter(and_(models.EmployeeType.deleted == 0, models.EmployeeType.record_status == 1, models.EmployeeType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', '{\"table_name\": \"employee_types\", \"select_columns\":\"employee_types.id as employee_type_id,employee_types.name as employee_type_name\", \"on_condition\": \"employee_types.id\", \"where_condition\":\"(employee_types.deleted = 0 OR employee_types.deleted IS NULL)AND (employee_types.record_status = 1 OR employee_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1161, 2, 116, 'performance_reviews', NULL, 'contract_type_id', 'Contract Type', NULL, 'dropdown', 'Contract Type', 'system_mandatory', 'visible', 'db.query(models.ContractType.id,models.ContractType.name).filter(and_(models.ContractType.deleted == 0, models.ContractType.record_status == 1, models.ContractType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', '{\"table_name\": \"contract_types\", \"select_columns\":\"contract_types.id as contract_type_id,contract_types.name as contract_type_name\", \"on_condition\": \"contract_types.id\", \"where_condition\":\"(contract_types.deleted = 0 OR contract_types.deleted IS NULL)AND (contract_types.record_status = 1 OR contract_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1162, 2, 116, 'performance_reviews', NULL, 'nb_staffs', 'Nb of Staffs', NULL, 'numeric', 'Nb of Staffs', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1163, 2, 116, 'performance_reviews', NULL, 'review_type_id', 'Review Type', NULL, 'dropdown', 'Review Type', 'system_mandatory', 'visible', 'db.query(models.ReviewType.id,models.ReviewType.name).filter(and_(models.ReviewType.deleted == 0,models.ReviewType.record_status == 1,models.ReviewType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', '{\"table_name\": \"review_types\", \"select_columns\":\"review_types.id as review_type_id,review_types.name as review_type_name\", \"on_condition\": \"review_types.id\", \"where_condition\":\"(review_types.deleted = 0 OR review_types.deleted IS NULL)AND (review_types.record_status = 1 OR review_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1164, 2, 116, 'performance_reviews', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.PerformanceReview', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1165, 2, 117, 'air_emissions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AirEmission', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1166, 2, 117, 'air_emissions', NULL, 'report_date', 'Report Date', NULL, 'date', 'Report Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"report_date\"}]', 'models.AirEmission', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1167, 2, 117, 'air_emissions', NULL, 'report_no', 'Report No', NULL, 'text', 'Report No', 'non_mandatory', 'visible', NULL, '[{\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"report_no\"], \"model_name\": \"models.AirEmission\", \"combination_column\": [\"report_no\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.AirEmission', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1168, 2, 117, 'air_emissions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirEmission', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1169, 2, 117, 'air_emission_items', 'air_emission_id', 'type', 'Type', NULL, 'text', 'Type', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"value\":\"AirEmissionDarkness\"}]', 'models.AirEmissionItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1170, 2, 117, 'air_emission_items', 'air_emission_id', 'air_pollutant_id', 'Air Pollutant', NULL, 'dropdown', 'Air Pollutant', 'system_mandatory', 'visible', 'db.query(models.Pollutant.id,models.Pollutant.name).filter( and_(models.Pollutant.type == \"AirPollutant\", models.Pollutant.subscriber_id == subscriber_id, models.Pollutant.deleted == 0, models.Pollutant.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AirEmissionItem', 1, 'docs#/data-entry', '{\r\n    \"table_name\": \"pollutants\",\r\n    \"select_columns\": \"pollutants.id as air_pollutant_id,pollutants.name as air_pollutant_name\",\r\n    \"on_condition\": \"pollutants.id\",\r\n    \"where_condition\": \"pollutants.type = \'AirPollutant\' AND (pollutants.deleted = 0 OR pollutants.deleted IS NULL)AND (pollutants.record_status = 1 OR pollutants.record_status IS NULL)\"\r\n}', 0, 0, 1, 0, 0),
(1171, 2, 117, 'air_emission_items', 'air_emission_id', 'avg', 'Reading', NULL, 'numeric', 'Reading', 'system_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": 2}]', NULL, '[{\"type\":\"default\",\"column\":\"avg\",\"value\":0}]', 'models.AirEmissionItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1172, 2, 117, 'air_emission_items', 'air_emission_id', 'comments', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirEmissionItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1182, 2, 118, 'air_emissions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AirEmission', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1183, 2, 118, 'air_emissions', NULL, 'report_date', 'Report Date', NULL, 'date', 'Report Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"report_date\"}]', 'models.AirEmission', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1184, 2, 118, 'air_emissions', NULL, 'report_no', 'Report No', NULL, 'text', 'Report No', 'non_mandatory', 'visible', NULL, '[{\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"report_no\"], \"model_name\": \"models.AirEmission\", \"combination_column\": [\"report_no\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.AirEmission', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1185, 2, 118, 'air_emissions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirEmission', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1186, 2, 118, 'air_emission_items', 'air_emission_id', 'type', 'Type', NULL, 'text', 'Type', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"column\":\"type\",\"value\":\"AirEmissionIndicator\"}]', 'models.AirEmissionItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1187, 2, 118, 'air_emission_items', 'air_emission_id', 'air_pollutant_id', 'Air Pollutant', NULL, 'dropdown', 'Air Pollutant', 'system_mandatory', 'visible', 'db.query(models.Pollutant.id,models.Pollutant.name).filter( and_(models.Pollutant.type == \"AirPollutant\", models.Pollutant.subscriber_id == subscriber_id, models.Pollutant.deleted == 0, models.Pollutant.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AirEmissionItem', 1, 'docs#/data-entry', '{\r\n    \"table_name\": \"pollutants\",\r\n    \"select_columns\": \"pollutants.id as air_pollutant_id,pollutants.name as air_pollutant_name\",\r\n    \"on_condition\": \"pollutants.id\",\r\n    \"where_condition\": \"pollutants.type = \'AirPollutant\' AND (pollutants.deleted = 0 OR pollutants.deleted IS NULL)AND (pollutants.record_status = 1 OR pollutants.record_status IS NULL)\"\r\n}', 0, 0, 1, 0, 0),
(1188, 2, 118, 'air_emission_items', 'air_emission_id', 'concentration_unit_id', 'Concentration Unit', NULL, 'dropdown', 'Concentration Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Concentration Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AirEmissionItem', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as concentration_unit_id,units.name as concentration_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Concentration Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1189, 2, 118, 'air_emission_items', 'air_emission_id', 'avg', 'Reading', NULL, 'numeric', 'Reading', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": 2}]', NULL, '[{\"type\":\"default\",\"column\":\"avg\",\"value\":0}]', 'models.AirEmissionItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1190, 2, 118, 'air_emission_items', 'air_emission_id', 'comments', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirEmissionItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1191, 2, 119, 'salaries', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"staff_id\", \"start_date\", \"end_date\", \"consumer_id\", \"salary_range_id\", \"salary_grade_id\", \"employee_type_id\"], \"model_name\": \"models.Salary\", \"combination_column\": [\"staff_id\", \"start_date\", \"end_date\", \"consumer_id\", \"salary_range_id\", \"salary_grade_id\", \"employee_type_id\"]}]', NULL, NULL, 'models.Salary', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1192, 2, 119, 'salaries', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"start_date\", \"compare_data\": \"staff_id\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.Salary', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1193, 2, 119, 'salaries', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"end_date\", \"compare_data\": \"staff_id\", \"validate_date_one\": \"start_date\", \"validate_date_two\": \"end_date\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.Salary', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1194, 2, 119, 'salaries', NULL, 'staff_id', 'Staff', NULL, 'dropdown', 'Staff ID', 'system_mandatory', 'visible', 'db.query(models.Staff.id,models.Staff.staff_code.label(\"name\")).filter(and_(models.Staff.deleted == 0, models.Staff.record_status == 1, models.Staff.subscriber_id == subscriber_id, models.Staff.staff_code.isnot(None))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"staff_id\", \"start_date\", \"end_date\"], \"model_name\": \"models.Salary\", \"combination_column\": [\"staff_id\", \"start_date\", \"end_date\"]}]', NULL, NULL, 'models.Salary', 1, 'docs#/data-entry', '{\"table_name\": \"staffs\", \"select_columns\":\"staffs.id as staff_id,staffs.staff_code as staff_name\", \"on_condition\": \"staffs.id\", \"where_condition\":\"(staffs.deleted = 0 OR staffs.deleted IS NULL)AND (staffs.record_status = 1 OR staffs.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1195, 2, 119, 'salaries', NULL, 'salary_range_id', 'Salary Range', NULL, 'dropdown', 'Salary Range', 'system_mandatory', 'visible', 'db.query(models.SalaryRange.id,models.SalaryRange.name).filter(and_(models.SalaryRange.deleted == 0, models.SalaryRange.record_status == 1, models.SalaryRange.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Salary', 1, 'docs#/data-entry', '{\"table_name\": \"salary_ranges\", \"select_columns\":\"salary_ranges.id as salary_range_id,salary_ranges.name as salary_range_name\", \"on_condition\": \"salary_ranges.id\", \"where_condition\":\"(salary_ranges.deleted = 0 OR salary_ranges.deleted IS NULL)AND (salary_ranges.record_status = 1 OR salary_ranges.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1196, 2, 119, 'salaries', NULL, 'salary_grade_id', 'Salary Grade', NULL, 'dropdown', 'Salary Grade', 'system_mandatory', 'visible', 'db.query(models.SalaryGrade.id,models.SalaryGrade.name).filter(and_(models.SalaryGrade.deleted == 0, models.SalaryGrade.record_status == 1, models.SalaryGrade.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Salary', 1, 'docs#/data-entry', '{\"table_name\": \"salary_grades\", \"select_columns\":\"salary_grades.id as salary_grade_id,salary_grades.name as salary_grade_name\", \"on_condition\": \"salary_grades.id\", \"where_condition\":\"(salary_grades.deleted = 0 OR salary_grades.deleted IS NULL)AND (salary_grades.record_status = 1 OR salary_grades.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1197, 2, 119, 'salaries', NULL, 'employee_type_id', 'Employee Type', NULL, 'dropdown', 'Employee Type', 'template_mandatory', 'visible', 'db.query(models.EmployeeType.id,models.EmployeeType.name).filter(and_(models.EmployeeType.deleted == 0, models.EmployeeType.record_status == 1, models.EmployeeType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Salary', 1, 'docs#/data-entry', '{\"table_name\": \"employee_types\", \"select_columns\":\"employee_types.id as employee_type_id,employee_types.name as employee_type_name\", \"on_condition\": \"employee_types.id\", \"where_condition\":\"(employee_types.deleted = 0 OR employee_types.deleted IS NULL)AND (employee_types.record_status = 1 OR employee_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1198, 2, 119, 'salaries', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Salary', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1199, 2, 120, 'committees', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"consumer_id\", \"member_since\", \"member_until\", \"department_id\", \"committee_category_id\", \"committee_type_id\", \"nb_staffs\", \"position\"], \"model_name\": \"models.Committee\", \"combination_column\": [\"consumer_id\", \"member_since\", \"member_until\", \"department_id\", \"committee_category_id\", \"committee_type_id\", \"nb_staffs\", \"position\"]}]', NULL, NULL, 'models.Committee', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1200, 2, 120, 'committees', NULL, 'member_since', 'Member Start Date', NULL, 'date', 'Member Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"member_since\"}]', 'models.Committee', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1201, 2, 120, 'committees', NULL, 'member_until', 'Member End Date', NULL, 'date', 'Member End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"member_since\", \"second_date\": \"member_until\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"member_until\"}]', 'models.Committee', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1202, 2, 120, 'committees', NULL, 'department_id', 'Department', NULL, 'dropdown', 'Department ID', 'system_mandatory', 'visible', 'db.query(models.Department.id,models.Department.name).filter(and_(models.Department.deleted == 0,models.Department.record_status == 1, models.Department.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"department_id\", \"member_since\", \"member_until\"], \"model_name\": \"models.Committee\", \"combination_column\": [\"department_id\", \"member_since\", \"member_until\"]}]', NULL, NULL, 'models.Committee', 1, 'docs#/data-entry', '{\"table_name\": \"departments\", \"select_columns\":\"departments.id as department_id,departments.name as department_name\", \"on_condition\": \"departments.id\", \"where_condition\":\"(departments.deleted = 0 OR departments.deleted IS NULL)AND (departments.record_status = 1 OR departments.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1203, 2, 120, 'committees', NULL, 'committee_category_id', 'Committee Type', NULL, 'dropdown', 'Committee Type', 'template_mandatory', 'visible', 'db.query(models.CommitteeCategory.id,models.CommitteeCategory.name).filter(and_(models.CommitteeCategory.deleted == 0, models.CommitteeCategory.record_status == 1, models.CommitteeCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Committee', 1, 'docs#/data-entry', '{\"table_name\": \"committee_categories\", \"select_columns\":\"committee_categories.id as committee_category_id,committee_categories.name as committee_category_name\", \"on_condition\": \"committee_categories.id\", \"where_condition\":\"(committee_categories.deleted = 0 OR committee_categories.deleted IS NULL)AND (committee_categories.record_status = 1 OR committee_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1204, 2, 120, 'committees', NULL, 'committee_type_id', 'Committee SubType', NULL, 'dropdown', 'Committee SubType', 'template_mandatory', 'visible', 'db.query(models.CommitteeType.id,models.CommitteeType.name).filter(and_(models.CommitteeType.deleted == 0, models.CommitteeType.record_status == 1, models.CommitteeType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Committee', 1, 'docs#/data-entry', '{\"table_name\": \"committee_types\", \"select_columns\":\"committee_types.id as committee_type_id,committee_types.name as committee_type_name\", \"on_condition\": \"committee_types.id\", \"where_condition\":\"(committee_types.deleted = 0 OR committee_types.deleted IS NULL)AND (committee_types.record_status = 1 OR committee_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1205, 2, 120, 'committees', NULL, 'position', 'Position', NULL, 'text', 'Position', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be alphabets or alphanumeric\", \"pattern\": \"^[A-Za-z0-9 ()_./:%&+-]*$\"}]', NULL, NULL, 'models.Committee', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1206, 2, 120, 'committees', NULL, 'nb_staffs', 'Nb of Staffs', NULL, 'numeric', 'Nb of Staffs', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Committee', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1207, 2, 120, 'committees', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Committee', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1217, 2, 121, 'salaries', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"consumer_id\", \"start_date\", \"end_date\", \"department_id\", \"salary_range_id\", \"salary_grade_id\", \"employee_type_id\", \"nb_staffs\"], \"model_name\": \"models.Salary\", \"combination_column\": [\"consumer_id\", \"start_date\", \"end_date\", \"department_id\", \"salary_range_id\", \"salary_grade_id\", \"employee_type_id\", \"nb_staffs\"]}]', NULL, NULL, 'models.Salary', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1218, 2, 121, 'salaries', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.Salary', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1219, 2, 121, 'salaries', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.Salary', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1220, 2, 121, 'salaries', NULL, 'department_id', 'Department', NULL, 'dropdown', 'Department ID', 'system_mandatory', 'visible', 'db.query(models.Department.id,models.Department.name).filter(and_(models.Department.deleted == 0,models.Department.record_status == 1, models.Department.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"department_id\", \"start_date\", \"end_date\"], \"model_name\": \"models.Salary\", \"combination_column\": [\"department_id\", \"start_date\", \"end_date\"]}]', NULL, NULL, 'models.Salary', 1, 'docs#/data-entry', '{\"table_name\": \"departments\", \"select_columns\":\"departments.id as department_id,departments.name as department_name\", \"on_condition\": \"departments.id\", \"where_condition\":\"(departments.deleted = 0 OR departments.deleted IS NULL)AND (departments.record_status = 1 OR departments.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1221, 2, 121, 'salaries', NULL, 'salary_range_id', 'Salary Range', NULL, 'dropdown', 'Salary Range', 'system_mandatory', 'visible', 'db.query(models.SalaryRange.id,models.SalaryRange.name).filter(and_(models.SalaryRange.deleted == 0, models.SalaryRange.record_status == 1, models.SalaryRange.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Salary', 1, 'docs#/data-entry', '{\"table_name\": \"salary_ranges\", \"select_columns\":\"salary_ranges.id as salary_range_id,salary_ranges.name as salary_range_name\", \"on_condition\": \"salary_ranges.id\", \"where_condition\":\"(salary_ranges.deleted = 0 OR salary_ranges.deleted IS NULL)AND (salary_ranges.record_status = 1 OR salary_ranges.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1222, 2, 121, 'salaries', NULL, 'salary_grade_id', 'Salary Grade', NULL, 'dropdown', 'Salary Grade', 'system_mandatory', 'visible', 'db.query(models.SalaryGrade.id,models.SalaryGrade.name).filter(and_(models.SalaryGrade.deleted == 0, models.SalaryGrade.record_status == 1, models.SalaryGrade.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Salary', 1, 'docs#/data-entry', '{\"table_name\": \"salary_grades\", \"select_columns\":\"salary_grades.id as salary_grade_id,salary_grades.name as salary_grade_name\", \"on_condition\": \"salary_grades.id\", \"where_condition\":\"(salary_grades.deleted = 0 OR salary_grades.deleted IS NULL)AND (salary_grades.record_status = 1 OR salary_grades.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1223, 2, 121, 'salaries', NULL, 'employee_type_id', 'Employee SubType', NULL, 'dropdown', 'Employee SubType', 'template_mandatory', 'visible', 'db.query(models.EmployeeType.id,models.EmployeeType.name).filter(and_(models.EmployeeType.deleted == 0, models.EmployeeType.record_status == 1, models.EmployeeType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Salary', 1, 'docs#/data-entry', '{\"table_name\": \"employee_types\", \"select_columns\":\"employee_types.id as employee_type_id,employee_types.name as employee_type_name\", \"on_condition\": \"employee_types.id\", \"where_condition\":\"(employee_types.deleted = 0 OR employee_types.deleted IS NULL)AND (employee_types.record_status = 1 OR employee_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1224, 2, 121, 'salaries', NULL, 'nb_staffs', 'Nb of Staffs', NULL, 'numeric', 'Nb of Staffs', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Salary', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1225, 2, 121, 'salaries', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Salary', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1226, 2, 122, 'retirement_plans', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RetirementPlan', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1227, 2, 122, 'retirement_plans', NULL, 'covered_since', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"covered_since\", \"compare_data\": \"staff_id\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"covered_since\"}]', 'models.RetirementPlan', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(1228, 2, 122, 'retirement_plans', NULL, 'covered_until', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"covered_until\", \"compare_data\": \"staff_id\", \"validate_date_one\": \"covered_since\", \"validate_date_two\": \"covered_until\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"covered_until\"}]', 'models.RetirementPlan', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1229, 2, 122, 'retirement_plans', NULL, 'staff_id', 'Staff', NULL, 'dropdown', 'Staff ID', 'system_mandatory', 'visible', 'db.query(models.Staff.id,models.Staff.staff_code.label(\"name\")).filter(and_(models.Staff.deleted == 0, models.Staff.record_status == 1, models.Staff.subscriber_id == subscriber_id, models.Staff.staff_code.isnot(None))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"staff_id\", \"covered_since\", \"covered_until\"], \"model_name\": \"models.RetirementPlan\", \"combination_column\": [\"staff_id\", \"covered_since\", \"covered_until\"]}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"compare_dates\": 2, \"compare_date_one\": \"covered_since\", \"compare_date_two\": \"covered_until\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"consumer_id\", \"covered_since\", \"covered_until\", \"staff_id\", \"coverage_category_id\", \"coverage_type_id\"], \"model_name\": \"models.RetirementPlan\", \"combination_column\": [\"consumer_id\", \"covered_since\", \"covered_until\", \"staff_id\", \"coverage_category_id\", \"coverage_type_id\"]}]', NULL, NULL, 'models.RetirementPlan', 1, 'docs#/data-entry', '{\"table_name\": \"staffs\", \"select_columns\":\"staffs.id as staff_id,staffs.staff_code as staff_name\", \"on_condition\": \"staffs.id\", \"where_condition\":\"(staffs.deleted = 0 OR staffs.deleted IS NULL)AND (staffs.record_status = 1 OR staffs.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1230, 2, 122, 'retirement_plans', NULL, 'coverage_category_id', 'Coverage Type', NULL, 'dropdown', 'Coverage Type', 'template_mandatory', 'visible', 'db.query(models.CoverageCategory.id,models.CoverageCategory.name).filter(and_(models.CoverageCategory.deleted == 0, models.CoverageCategory.record_status == 1, models.CoverageCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RetirementPlan', 1, 'docs#/data-entry', '{\"table_name\": \"coverage_categories\", \"select_columns\":\"coverage_categories.id as coverage_category_id,coverage_categories.name as coverage_category_name\", \"on_condition\": \"coverage_categories.id\", \"where_condition\":\"(coverage_categories.deleted = 0 OR coverage_categories.deleted IS NULL)AND (coverage_categories.record_status = 1 OR coverage_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1231, 2, 122, 'retirement_plans', NULL, 'coverage_type_id', 'Coverage SubType', NULL, 'dropdown', 'Coverage SubType', 'template_mandatory', 'visible', 'db.query(models.CoverageType.id,models.CoverageType.name).filter(and_(models.CoverageType.deleted == 0, models.CoverageType.record_status == 1, models.CoverageType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RetirementPlan', 1, 'docs#/data-entry', '{\"table_name\": \"coverage_types\", \"select_columns\":\"coverage_types.id as coverage_type_id,coverage_types.name as coverage_type_name\", \"on_condition\": \"coverage_types.id\", \"where_condition\":\"(coverage_types.deleted = 0 OR coverage_types.deleted IS NULL)AND (coverage_types.record_status = 1 OR coverage_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1232, 2, 122, 'retirement_plans', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.RetirementPlan', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1233, 2, 123, 'retirement_plans', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"consumer_id\", \"covered_since\", \"covered_until\", \"department_id\", \"coverage_category_id\", \"coverage_type_id\", \"nb_staffs\"], \"model_name\": \"models.RetirementPlan\", \"combination_column\": [\"consumer_id\", \"covered_since\", \"covered_until\", \"department_id\", \"coverage_category_id\", \"coverage_type_id\", \"nb_staffs\"]}]', NULL, NULL, 'models.RetirementPlan', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1234, 2, 123, 'retirement_plans', NULL, 'covered_since', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"covered_since\"}]', 'models.RetirementPlan', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1235, 2, 123, 'retirement_plans', NULL, 'covered_until', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"covered_since\", \"second_date\": \"covered_until\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"covered_until\"}]', 'models.RetirementPlan', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1236, 2, 123, 'retirement_plans', NULL, 'department_id', 'Department', NULL, 'dropdown', 'Department ID', 'system_mandatory', 'visible', 'db.query(models.Department.id,models.Department.name).filter(and_(models.Department.deleted == 0,models.Department.record_status == 1, models.Department.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"department_id\", \"covered_since\", \"covered_until\"], \"model_name\": \"models.RetirementPlan\", \"combination_column\": [\"department_id\", \"covered_since\", \"covered_until\"]}]', NULL, NULL, 'models.RetirementPlan', 1, 'docs#/data-entry', '{\"table_name\": \"departments\", \"select_columns\":\"departments.id as department_id,departments.name as department_name\", \"on_condition\": \"departments.id\", \"where_condition\":\"(departments.deleted = 0 OR departments.deleted IS NULL)AND (departments.record_status = 1 OR departments.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1237, 2, 123, 'retirement_plans', NULL, 'coverage_category_id', 'Coverage Type', NULL, 'dropdown', 'Coverage Type', 'template_mandatory', 'visible', 'db.query(models.CoverageCategory.id,models.CoverageCategory.name).filter(and_(models.CoverageCategory.deleted == 0, models.CoverageCategory.record_status == 1, models.CoverageCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RetirementPlan', 1, 'docs#/data-entry', '{\"table_name\": \"coverage_categories\", \"select_columns\":\"coverage_categories.id as coverage_category_id,coverage_categories.name as coverage_category_name\", \"on_condition\": \"coverage_categories.id\", \"where_condition\":\"(coverage_categories.deleted = 0 OR coverage_categories.deleted IS NULL)AND (coverage_categories.record_status = 1 OR coverage_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1238, 2, 123, 'retirement_plans', NULL, 'coverage_type_id', 'Coverage SubType', NULL, 'dropdown', 'Coverage SubType', 'template_mandatory', 'visible', 'db.query(models.CoverageType.id,models.CoverageType.name).filter(and_(models.CoverageType.deleted == 0, models.CoverageType.record_status == 1, models.CoverageType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RetirementPlan', 1, 'docs#/data-entry', '{\"table_name\": \"coverage_types\", \"select_columns\":\"coverage_types.id as coverage_type_id,coverage_types.name as coverage_type_name\", \"on_condition\": \"coverage_types.id\", \"where_condition\":\"(coverage_types.deleted = 0 OR coverage_types.deleted IS NULL)AND (coverage_types.record_status = 1 OR coverage_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1239, 2, 123, 'retirement_plans', NULL, 'nb_staffs', 'Nb of Staffs', NULL, 'numeric', 'Nb of Staffs', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RetirementPlan', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1240, 2, 123, 'retirement_plans', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.RetirementPlan', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1241, 2, 124, 'committees', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"staff_id\", \"member_since\", \"member_until\", \"consumer_id\", \"committee_category_id\", \"committee_type_id\", \"position\"], \"model_name\": \"models.Salary\", \"combination_column\": [\"staff_id\", \"member_since\", \"member_until\", \"consumer_id\", \"committee_category_id\", \"committee_type_id\", \"position\"]}]', NULL, NULL, 'models.Committee', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1242, 2, 124, 'committees', NULL, 'member_since', 'Member Start Date', NULL, 'date', 'Member Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"member_since\", \"compare_data\": \"staff_id\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"member_since\"}]', 'models.Committee', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1243, 2, 124, 'committees', NULL, 'member_until', 'Member End Date', NULL, 'date', 'Member End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"member_until\", \"compare_data\": \"staff_id\", \"validate_date_one\": \"member_since\", \"validate_date_two\": \"member_until\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"member_until\"}]', 'models.Committee', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1244, 2, 124, 'committees', NULL, 'staff_id', 'Staff', NULL, 'dropdown', 'Staff ID', 'system_mandatory', 'visible', 'db.query(models.Staff.id,models.Staff.staff_code.label(\"name\")).filter(and_(models.Staff.deleted == 0, models.Staff.record_status == 1, models.Staff.subscriber_id == subscriber_id, models.Staff.staff_code.isnot(None))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"required\", \"error_message\": \"required\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"staff_id\", \"member_since\", \"member_until\"], \"model_name\": \"models.Committee\", \"combination_column\": [\"staff_id\", \"member_since\", \"member_until\"]}]', NULL, NULL, 'models.Committee', 1, 'docs#/data-entry', '{\"table_name\": \"staffs\", \"select_columns\":\"staffs.id as staff_id,staffs.staff_code as staff_name\", \"on_condition\": \"staffs.id\", \"where_condition\":\"(staffs.deleted = 0 OR staffs.deleted IS NULL)AND (staffs.record_status = 1 OR staffs.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1245, 2, 124, 'committees', NULL, 'committee_category_id', 'Committee Type', NULL, 'dropdown', 'Committee Type', 'template_mandatory', 'visible', 'db.query(models.CommitteeCategory.id,models.CommitteeCategory.name).filter(and_(models.CommitteeCategory.deleted == 0, models.CommitteeCategory.record_status == 1, models.CommitteeCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Committee', 1, 'docs#/data-entry', '{\"table_name\": \"committee_categories\", \"select_columns\":\"committee_categories.id as committee_category_id,committee_categories.name as committee_category_name\", \"on_condition\": \"committee_categories.id\", \"where_condition\":\"(committee_categories.deleted = 0 OR committee_categories.deleted IS NULL)AND (committee_categories.record_status = 1 OR committee_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1246, 2, 124, 'committees', NULL, 'committee_type_id', 'Committee SubType', NULL, 'dropdown', 'Committee SubType', 'template_mandatory', 'visible', 'db.query(models.CommitteeType.id,models.CommitteeType.name).filter(and_(models.CommitteeType.deleted == 0, models.CommitteeType.record_status == 1, models.CommitteeType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Committee', 1, 'docs#/data-entry', '{\"table_name\": \"committee_types\", \"select_columns\":\"committee_types.id as committee_type_id,committee_types.name as committee_type_name\", \"on_condition\": \"committee_types.id\", \"where_condition\":\"(committee_types.deleted = 0 OR committee_types.deleted IS NULL)AND (committee_types.record_status = 1 OR committee_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1247, 2, 124, 'committees', NULL, 'position', 'Position', NULL, 'text', 'Position', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be alphabets or alphanumeric\", \"pattern\": \"^[A-Za-z0-9 ()_./:%&+-]*$\"}]', NULL, NULL, 'models.Committee', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1248, 2, 124, 'committees', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Committee', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1249, 2, 125, 'water_treatments', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterTreatment', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1250, 2, 125, 'water_treatments', NULL, 'report_date', 'Report Date', NULL, 'date', 'Report Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"report_date\"}]', 'models.WaterTreatment', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1251, 2, 125, 'water_treatments', NULL, 'report_no', 'Report No', NULL, 'text', 'Report No', 'system_mandatory', 'visible', NULL, '[{\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"report_no\"], \"model_name\": \"models.WaterTreatment\", \"combination_column\": [\"report_no\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.WaterTreatment', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1252, 2, 125, 'water_treatments', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'system_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatment', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1254, 2, 125, 'water_treatment_items', 'water_treatment_id', 'water_pollutant_id', 'Water Pollutant', NULL, 'dropdown', 'Water Pollutant', 'system_mandatory', 'visible', 'db.query(models.Pollutant.id,models.Pollutant.name).filter(and_(models.Pollutant.subscriber_id == subscriber_id,models.Pollutant.type == \"WaterPollutant\", models.Pollutant.metric_type == \"ph\",models.Pollutant.deleted == 0, models.Pollutant.record_status == 1)).order_by(models.Pollutant.id).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', '{\"table_name\": \"pollutants\",\"select_columns\": \"pollutants.id as water_pollutant_id,pollutants.name as water_pollutant_name\",\"on_condition\": \"pollutants.id\",\"where_condition\": \"pollutants.type = \\\"WaterPollutant\\\" AND (pollutants.deleted = 0 OR pollutants.deleted IS NULL)AND (pollutants.record_status = 1 OR pollutants.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1255, 2, 125, 'water_treatment_items', 'water_treatment_id', 'in_reading_min', 'In reading Min', NULL, 'numeric', 'In reading', 'system_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric or check the ph value\", \"pattern\": \"^(?:[0-9](?:\\\\.[0-9]+)?|1[0-3](?:\\\\.[0-9]+)?|14(?:\\\\.0+)?)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"date_range\", \"error_message\": \" must be less than In Reading Max\", \"model_name\": \"null\", \"first_date\": \"in_reading_min\", \"second_date\": \"in_reading_max\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"start_year\", \"translation_key\": \"INVALID_RANGE\"}]', NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1256, 2, 125, 'water_treatment_items', 'water_treatment_id', 'in_reading_max', 'In reading Max', NULL, 'numeric', 'In reading', 'system_mandatory', 'visible', NULL, '[{\"type\":\"regex\",\"error_message\":\"must be numeric or check the ph value\",\"pattern\":\"^(?:[0-9](?:\\\\.[0-9]+)?|1[0-3](?:\\\\.[0-9]+)?|14(?:\\\\.0+)?)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1257, 2, 125, 'water_treatment_items', 'water_treatment_id', 'out_reading_min', 'Out reading Min', NULL, 'numeric', 'Out reading', 'system_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric or check the ph value\", \"pattern\": \"^(?:[0-9](?:\\\\.[0-9]+)?|1[0-3](?:\\\\.[0-9]+)?|14(?:\\\\.0+)?)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"date_range\", \"error_message\": \" must be less than Out Reading Max\", \"model_name\": \"null\", \"first_date\": \"out_reading_min\", \"second_date\": \"out_reading_max\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"start_year\", \"translation_key\": \"INVALID_RANGE\"}]', NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1258, 2, 125, 'water_treatment_items', 'water_treatment_id', 'out_reading_max', 'Out reading Max', NULL, 'numeric', 'Out reading', 'system_mandatory', 'visible', NULL, '[{\"type\":\"regex\",\"error_message\":\"must be numeric or check the ph value\",\"pattern\":\"^(?:[0-9](?:\\\\.[0-9]+)?|1[0-3](?:\\\\.[0-9]+)?|14(?:\\\\.0+)?)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1259, 2, 125, 'water_treatment_items', 'water_treatment_id', 'in_reading_avg', 'in_reading_avg', NULL, 'numeric', 'In reading', 'system_mandatory', 'template_invisible', NULL, NULL, NULL, NULL, 'models.WaterTreatmentItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1260, 2, 125, 'water_treatment_items', 'water_treatment_id', 'out_reading_avg', 'out_reading_avg', NULL, 'numeric', 'Out reading', 'system_mandatory', 'template_invisible', NULL, NULL, NULL, NULL, 'models.WaterTreatmentItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1261, 2, 126, 'water_treatments', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterTreatment', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1262, 2, 126, 'water_treatments', NULL, 'report_date', 'Report Date', NULL, 'date', 'Report Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"report_date\"}]', 'models.WaterTreatment', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1263, 2, 126, 'water_treatments', NULL, 'report_no', 'Report No', NULL, 'text', 'Report No', 'system_mandatory', 'visible', NULL, '[{\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"report_no\"], \"model_name\": \"models.WaterTreatment\", \"combination_column\": [\"report_no\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.WaterTreatment', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1264, 2, 126, 'water_treatments', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'system_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatment', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1265, 2, 126, 'water_treatment_items', 'water_treatment_id', 'type', 'type', NULL, 'text', 'type', 'system_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"WaterTreatmentIndicator\" \r\n}]', 'models.WaterTreatmentItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1266, 2, 126, 'water_treatment_items', 'water_treatment_id', 'water_pollutant_id', 'Water Pollutant', NULL, 'dropdown', 'Water Pollutant', 'system_mandatory', 'visible', 'db.query(models.Pollutant.id,models.Pollutant.name).filter(and_(models.Pollutant.subscriber_id == subscriber_id,models.Pollutant.type == \"WaterPollutant\", models.Pollutant.metric_type == \"concentration\",models.Pollutant.deleted == 0, models.Pollutant.record_status == 1)).order_by(models.Pollutant.id).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', '{\"table_name\": \"pollutants\",\"select_columns\": \"pollutants.id as water_pollutant_id,pollutants.name as water_pollutant_name\",\"on_condition\": \"pollutants.id\",\"where_condition\": \"pollutants.type = \\\"WaterPollutant\\\" AND (pollutants.deleted = 0 OR pollutants.deleted IS NULL)AND (pollutants.record_status = 1 OR pollutants.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1267, 2, 126, 'water_treatment_items', 'water_treatment_id', 'in_reading_avg', 'In reading', NULL, 'numeric', 'In reading', 'system_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1268, 2, 126, 'water_treatment_items', 'water_treatment_id', 'out_reading_avg', 'Out reading', NULL, 'numeric', 'Out reading', 'system_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1269, 2, 126, 'water_treatment_items', 'water_treatment_id', 'concentration_unit_id', 'Concentration Unit', NULL, 'dropdown', 'Concentration Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Concentration Units\", models.Unit.deleted == 0, models.Unit.record_status == 1,or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1))).order_by(models.Unit.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as concentration_unit_id,units.name as concentration_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Concentration Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1270, 2, 127, 'water_treatments', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterTreatment', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1271, 2, 127, 'water_treatments', NULL, 'report_date', 'Report Date', NULL, 'date', 'Report Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"report_date\"}]', 'models.WaterTreatment', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1272, 2, 127, 'water_treatments', NULL, 'report_no', 'Report No', NULL, 'text', 'Report No', 'system_mandatory', 'visible', NULL, '[{\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"report_no\"], \"model_name\": \"models.WaterTreatment\", \"combination_column\": [\"report_no\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.WaterTreatment', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1273, 2, 127, 'water_treatments', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'system_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatment', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1274, 2, 127, 'water_treatment_items', 'water_treatment_id', 'type', 'type', NULL, 'text', 'type', 'system_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"WaterTreatmentTemp\" \r\n}]', 'models.WaterTreatmentItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1275, 2, 127, 'water_treatment_items', 'water_treatment_id', 'water_pollutant_id', 'Water Pollutant', NULL, 'dropdown', 'Water Pollutant', 'system_mandatory', 'visible', 'db.query(models.Pollutant.id,models.Pollutant.name).filter(and_(models.Pollutant.subscriber_id == subscriber_id,models.Pollutant.type == \"WaterPollutant\", models.Pollutant.metric_type == \"temperature\",models.Pollutant.deleted == 0, models.Pollutant.record_status == 1)).order_by(models.Pollutant.id).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', '{\"table_name\": \"pollutants\",\"select_columns\": \"pollutants.id as water_pollutant_id,pollutants.name as water_pollutant_name\",\"on_condition\": \"pollutants.id\",\"where_condition\": \"pollutants.type = \\\"WaterPollutant\\\" AND (pollutants.deleted = 0 OR pollutants.deleted IS NULL)AND (pollutants.record_status = 1 OR pollutants.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1276, 2, 127, 'water_treatment_items', 'water_treatment_id', 'in_reading_avg', 'In reading', NULL, 'numeric', 'In reading', 'system_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1277, 2, 127, 'water_treatment_items', 'water_treatment_id', 'out_reading_avg', 'Out reading', NULL, 'numeric', 'Out reading', 'system_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1278, 2, 127, 'water_treatment_items', 'water_treatment_id', 'temp_unit_id', 'Temp Unit', NULL, 'dropdown', 'Temperature Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Temp Units\",or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).order_by(models.Unit.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterTreatmentItem', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as temp_unit_id,units.name as temp_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Temp Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1281, 2, 128, 'consumer_users', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.Consumer.id,models.Consumer.name).order_by(models.Consumer.id).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"consumer_id\", \"domain_user_id\"], \"model_name\": \"models.ConsumerUser\", \"combination_column\": [\"consumer_id\", \"domain_user_id\"]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.ConsumerUser', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND consumer_wise_user_access.user_id=userId\"}', 0, 0, 1, 0, 0),
(1282, 2, 128, 'consumer_users', NULL, 'domain_user_id', 'Users', NULL, 'dropdown', 'Users', 'system_mandatory', 'visible', 'db.query(models.DomainUser.id, models.User.firstname.label(\'name\')).join(models.User, models.DomainUser.user_id == models.User.id).filter(and_(models.User.subscriber_id == subscriber_id, models.User.deleted == 0, models.User.record_status == 1)).order_by(models.User.id).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"consumer_id\", \"domain_user_id\"], \"model_name\": \"models.ConsumerUser\", \"combination_column\": [\"consumer_id\", \"domain_user_id\"]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.ConsumerUser', 1, NULL, '{\r\n    \"table_name\":\"domain_users\",\r\n    \"select_columns\":\"domain_users.id AS domain_user_id,users.firstname AS domain_user_name\",\r\n    \"on_condition\": \"domain_users.id\",\r\n    \"where_condition\":\"(domain_users.deleted = 0 OR domain_users.deleted IS NULL) AND (domain_users.record_status = 1 OR domain_users.record_status IS NULL) AND (domain_users.deleted = 0 OR domain_users.deleted IS NULL) AND (domain_users.record_status = 1 OR domain_users.record_status IS NULL)\",\r\n    \"sub_conditions\" :[\"LEFT JOIN users ON users.id = domain_users.user_id\"]\r\n    }', 0, 0, 1, 0, 0),
(1283, 2, 128, 'consumer_users', NULL, 'all_children', 'All children', NULL, 'dropdown', 'All children', 'template_mandatory', 'visible', NULL, '[{\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"Yes\", \"name\": \"Yes\"}, {\"id\": \"No\", \"name\": \"No\"}], \"translation_key\": \"IS_INVALID\"},{\"type\": \"default\", \"value\": \"No\"}]', NULL, NULL, 'models.ConsumerUser', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1291, 2, 133, 'users', NULL, 'firstname', 'First Name', NULL, 'text', 'First Name', 'non_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"can only contain valid characters or characters with numbers combined and It should not exceed more than 20 characters\", \"pattern\": \"^(?=.*[a-zA-Z])[a-zA-Z0-9\\\\-@_. ]{1,20}$\",\"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, NULL, 'models.User', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1292, 2, 133, 'users', NULL, 'lastname', 'Last Name', NULL, 'text', 'Last Name', 'non_mandatory', 'visible', NULL, '[\r\n{\"type\":\"regex\",\"error_message\":\"can only contain valid characters or characters with numbers combined and It should not exceed more than 20 characters\", \"pattern\":\"^(?=.*[a-zA-Z])[a-zA-Z0-9\\\\-@_. ]{1,20}$\",\"translation_key\": \"MUST_BE_ALPHABETS\"}\r\n]\r\n', NULL, NULL, 'models.User', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1293, 2, 133, 'users', NULL, 'login', 'Username', NULL, 'text', 'Username', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"can only contain valid characters or characters with numbers combined and It should not exceed more than 25 characters\", \"pattern\": \"^(?=.*[a-zA-Z])[a-zA-Z0-9\\\\-@_. ]{2,25}$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"login\"], \"model_name\": \"models.User\", \"combination_column\": [\"login\"]}]', NULL, NULL, 'models.User', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(1294, 2, 133, 'users', NULL, 'email', 'Email', NULL, 'text', 'Email', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be valid\", \"pattern\": \"^[\\\\w\\\\.+-]+@[\\\\w\\\\.-]+\\\\.\\\\w+$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"email\"], \"model_name\": \"models.User\", \"combination_column\": [\"email\"]},{\"type\":\"domain_validation\",\"model\":\"models.Domain\",\"compare_with\":\"allowable_email_domains\",\"error_message\":\"Invalid domain\",\"translation_key\":\"INVALID_DOMAIN\"}]', NULL, NULL, 'models.User', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1295, 2, 133, 'users', NULL, 'verified', 'Enabled', NULL, 'dropdown', 'Enabled', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"},{\"type\": \"default\", \"value\": \"Yes\"},{\"type\": \"list\", \"list_items\": [{\"id\": \"Yes\", \"name\": \"Yes\"}, {\"id\": \"No\", \"name\": \"No\"}], \"error_message\": \"is invalid\", \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.User', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1296, 2, 134, 'users', NULL, 'firstname', 'First Name', NULL, 'text', NULL, 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.User', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1297, 2, 134, 'users', NULL, 'lastname', 'Last Name', NULL, 'text', 'Last Name', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.User', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1315, 2, 136, 'domain_users_roles', NULL, 'domain_user_id', 'User', NULL, 'dropdown', 'User', 'system_mandatory', 'visible', 'db.query(models.DomainUser.id, models.User.firstname.label(\'name\')).join(models.User, models.DomainUser.user_id == models.User.id).filter(and_(models.User.subscriber_id == subscriber_id, models.User.deleted == 0, models.User.record_status == 1, models.DomainUser.subscriber_id == subscriber_id, models.DomainUser.deleted == 0, models.DomainUser.record_status == 1)).order_by(models.User.id).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"This role is already assigned to this user.\", \"column_name\": [\"role_id\", \"domain_user_id\"], \"model_name\": \"models.DomainUserRoles\", \"combination_column\": [\"domain_user_id\", \"role_id\"]}]', NULL, NULL, 'models.DomainUserRoles', 1, NULL, '{\r    \"table_name\":\"domain_users\",\r    \"select_columns\":\"domain_users.id AS domain_user_id,users.firstname AS domain_user_name\",\r    \"on_condition\": \"domain_users.id\",\r    \"where_condition\":\"(domain_users.deleted = 0 OR domain_users.deleted IS NULL) AND (domain_users.record_status = 1 OR domain_users.record_status IS NULL) AND (domain_users.deleted = 0 OR domain_users.deleted IS NULL) AND (domain_users.record_status = 1 OR domain_users.record_status IS NULL)\",\r    \"sub_conditions\" :[\"LEFT JOIN users ON users.id = domain_users.user_id\"]\r    }', 0, 0, 1, 0, 0),
(1316, 2, 136, 'domain_users_roles', NULL, 'role_id', 'Role', NULL, 'dropdown', 'Provider', 'system_mandatory', 'visible', 'db.query(models.Role.id,models.Role.name).filter( and_(models.Role.subscriber_id == subscriber_id, models.Role.deleted == 0, models.Role.record_status == 1)).order_by(models.Role.id).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.DomainUserRoles', 1, NULL, '{\"table_name\": \"roles\",\r\n \"select_columns\":\"roles.id as role_id,roles.name as role_name\", \r\n \"on_condition\": \"roles.id\",\r\n \"where_condition\":\"(roles.deleted = 0 OR roles.deleted IS NULL) AND (roles.record_status = 1 OR roles.record_status IS NULL)\"\r\n }', 0, 0, 1, 0, 0),
(1317, 2, 137, 'economic_datas', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.EconomicData', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1318, 2, 137, 'economic_datas', NULL, 'start_month', 'Start month', NULL, 'dropdown', 'Start Month', 'system_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EconomicData', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1319, 2, 137, 'economic_datas', NULL, 'start_month_name', 'Start Month', NULL, 'dropdown', 'Start Month', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be valid month name\", \"pattern\": \"^(January|February|March|April|May|June|July|August|September|October|November|December)$\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"January\", \"name\": \"January\"}, {\"id\": \"February\", \"name\": \"February\"}, {\"id\": \"March\", \"name\": \"March\"}, {\"id\": \"April\", \"name\": \"April\"}, {\"id\": \"May\", \"name\": \"May\"}, {\"id\": \"June\", \"name\": \"June\"}, {\"id\": \"July\", \"name\": \"July\"}, {\"id\": \"August\", \"name\": \"August\"}, {\"id\": \"September\", \"name\": \"September\"}, {\"id\": \"October\", \"name\": \"October\"}, {\"id\": \"November\", \"name\": \"November\"}, {\"id\": \"December\", \"name\": \"December\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"date_range\", \"error_message\": \"must be less than End Month\", \"model_name\": \"null\", \"first_date\": \"start_year\", \"second_date\": \"end_year\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"start_month_name\"}]', NULL, NULL, 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(1320, 2, 137, 'economic_datas', NULL, 'start_year', 'Start Year', NULL, 'dropdown', 'Start Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \" must be less than End Year\", \"model_name\": \"null\", \"first_date\": \"start_year\", \"second_date\": \"end_year\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\":\"start_year\", \"translation_key\": \"INVALID_RANGE\"}, {\"type\": \"year\", \"start_year\": \"earliest_acceptable_year\", \"end_year\": \"earliest_acceptable_year\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1321, 2, 137, 'economic_datas', NULL, 'end_month', 'End month', NULL, 'dropdown', 'End Month', 'system_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EconomicData', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1322, 2, 137, 'economic_datas', NULL, 'end_month_name', 'End Month', NULL, 'dropdown', 'End Month', 'non_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be valid month name\", \"pattern\": \"^(January|February|March|April|May|June|July|August|September|October|November|December)$\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"January\", \"name\": \"January\"}, {\"id\": \"February\", \"name\": \"February\"}, {\"id\": \"March\", \"name\": \"March\"}, {\"id\": \"April\", \"name\": \"April\"}, {\"id\": \"May\", \"name\": \"May\"}, {\"id\": \"June\", \"name\": \"June\"}, {\"id\": \"July\", \"name\": \"July\"}, {\"id\": \"August\", \"name\": \"August\"}, {\"id\": \"September\", \"name\": \"September\"}, {\"id\": \"October\", \"name\": \"October\"}, {\"id\": \"November\", \"name\": \"November\"}, {\"id\": \"December\", \"name\": \"December\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1323, 2, 137, 'economic_datas', NULL, 'end_year', 'End Year', NULL, 'dropdown', 'End Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"earliest_acceptable_year\", \"end_year\": \"earliest_acceptable_year\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1324, 2, 137, 'economic_datas', NULL, 'nb_employee', 'No. of staff', NULL, 'numeric', 'No. of staff', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\"}]', NULL, '[{\"type\": \"default\",\"column\":\"nb_employee\",\"value\": null }]', 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1325, 2, 137, 'economic_datas', NULL, 'area', 'Area (Sq Meter)', NULL, 'numeric', 'Area (Sq Meter)', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\": \"default\",\"column\":\"area\",\"value\": null}]', 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1326, 2, 137, 'economic_datas', NULL, 'working_hours', 'Working hours', NULL, 'numeric', 'Working hours', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\"}]', NULL, '[{\"type\": \"default\",\"column\":\"working_hours\",\"value\": null}]', 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1327, 2, 137, 'economic_datas', NULL, 'turnover_amount', 'Turnover amount', NULL, 'numeric', 'Turnover amount', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\": \"default\",\"column\":\"turnover_amount\",\"value\": null}]', 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1328, 2, 137, 'economic_datas', NULL, 'production_level', 'Production level', NULL, 'numeric', 'Production level', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\": \"default\",\"column\":\"production_level\",\"value\": null}]', 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1329, 2, 137, 'economic_datas', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\"}]', NULL, NULL, 'models.EconomicData', 1, NULL, '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(1330, 2, 137, 'economic_datas', NULL, 'custom_1', 'custom_1', '{\"table_name\":\"economic_data_field_configs\",\"field_name\":\"title\"}', 'numeric', 'custom_1', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\": \"default\",\"column\":\"custom_1\",\"value\": null}]', 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1331, 2, 137, 'economic_datas', NULL, 'custom_2', 'custom_2', '{\"table_name\":\"economic_data_field_configs\",\"field_name\":\"title\"}', 'numeric', 'custom_2', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\": \"default\",\"column\":\"custom_2\",\"value\": null}]', 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1332, 2, 137, 'economic_datas', NULL, 'custom_3', 'custom_3', '{\"table_name\":\"economic_data_field_configs\",\"field_name\":\"title\"}', 'numeric', 'custom_3', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\": \"default\",\"column\":\"custom_3\",\"value\": null}]', 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1333, 2, 137, 'economic_datas', NULL, 'custom_4', 'custom_4', '{\"table_name\":\"economic_data_field_configs\",\"field_name\":\"title\"}', 'numeric', 'custom_4', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\": \"default\",\"column\":\"custom_4\",\"value\": null}]', 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1334, 2, 137, 'economic_datas', NULL, 'custom_5', 'custom_5', '{\"table_name\":\"economic_data_field_configs\",\"field_name\":\"title\"}', 'numeric', 'custom_5', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\": \"default\",\"column\":\"custom_5\",\"value\": null}]', 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1335, 2, 137, 'economic_datas', NULL, 'custom_6', 'custom_6', '{\"table_name\":\"economic_data_field_configs\",\"field_name\":\"title\"}', 'numeric', 'custom_6', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\": \"default\",\"column\":\"custom_6\",\"value\": null}]', 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1336, 2, 137, 'economic_datas', NULL, 'custom_7', 'custom_7', '{\"table_name\":\"economic_data_field_configs\",\"field_name\":\"title\"}', 'numeric', 'custom_7', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\": \"default\",\"column\":\"custom_7\",\"value\": null}]', 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1337, 2, 137, 'economic_datas', NULL, 'custom_8', 'custom_8', '{\"table_name\":\"economic_data_field_configs\",\"field_name\":\"title\"}', 'numeric', 'custom_8', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\": \"default\",\"column\":\"custom_8\",\"value\": null}]', 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1338, 2, 137, 'economic_datas', NULL, 'custom_9', 'custom_9', '{\"table_name\":\"economic_data_field_configs\",\"field_name\":\"title\"}', 'numeric', 'custom_9', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\": \"default\",\"column\":\"custom_9\",\"value\": null}]', 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1339, 2, 137, 'economic_datas', NULL, 'custom_10', 'custom_10', '{\"table_name\":\"economic_data_field_configs\",\"field_name\":\"title\"}', 'numeric', 'custom_10', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\"type\": \"default\",\"column\":\"custom_10\",\"value\": null}]', 'models.EconomicData', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1340, 2, 137, 'economic_datas', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EconomicData', 1, NULL, NULL, 0, 1, 1, 0, 0),
(1341, 2, 137, 'economic_datas', NULL, 'turnover_amount_conv', 'Turnover Amount Conv', NULL, 'numeric', 'Turnover Amount Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"currencies\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"currency_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"turnover_amount_conv\", \"variable1\": \"turnover_amount\", \"variable2\": \"result\", \"operation\": \"divide\",\"no_of_decimal_places\": \"2\"}]', 'models.EconomicData', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1344, 2, 138, 'waste_monitorings', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteMonitoring', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1345, 2, 138, 'waste_monitorings', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.WasteMonitoring', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1346, 2, 138, 'waste_monitorings', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.WasteMonitoring', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1347, 2, 138, 'waste_monitorings', NULL, 'disposed_by', 'Disposed By', NULL, 'text', 'Disposed By', 'non_mandatory', 'visible', NULL, '[{\"type\":\"regex\",\"error_message\":\"must be alphabets or alphanumeric\",\"pattern\":\"^[A-Za-z0-9 ()_./:%&+-]*$\"}]', NULL, NULL, 'models.WasteMonitoring', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1348, 2, 138, 'waste_monitorings', NULL, 'disposal_method_id', 'Disposal Method', NULL, 'dropdown', 'Disposal Method', 'non_mandatory', 'visible', 'db.query(models.DisposalMethod.id,models.DisposalMethod.name).filter(and_(models.DisposalMethod.subscriber_id == subscriber_id, models.DisposalMethod.deleted == 0, models.DisposalMethod.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteMonitoring', 1, NULL, '{\"table_name\": \"disposal_methods\", \"select_columns\":\"disposal_methods.id as disposal_method_id,disposal_methods.name as disposal_method_name\", \"on_condition\": \"disposal_methods.id\", \"where_condition\":\"(disposal_methods.deleted = 0 OR disposal_methods.deleted IS NULL)AND (disposal_methods.record_status = 1 OR disposal_methods.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1349, 2, 138, 'waste_monitorings', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WasteMonitoring', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1350, 2, 138, 'waste_items', 'waste_monitoring_id', 'waste_category_id', 'Waste Type', NULL, 'dropdown', 'Waste Category', 'system_mandatory', 'visible', 'db.query(models.WasteCategory.id, models.WasteCategory.name).filter(and_(models.WasteCategory.deleted == 0, models.WasteCategory.record_status == 1, or_(models.WasteCategory.subscriber_id == subscriber_id, models.WasteCategory.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, '{\"table_name\": \"waste_categories\", \"select_columns\":\"waste_categories.id as waste_category_id,waste_categories.name as waste_category_name\", \"on_condition\": \"waste_categories.id\", \"where_condition\":\"(waste_categories.deleted = 0 OR waste_categories.deleted IS NULL) AND (waste_categories.record_status = 1 OR waste_categories.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(1351, 2, 138, 'waste_items', 'waste_monitoring_id', 'waste_type_id', 'Waste Subtype', NULL, 'dropdown', 'Waste Type', 'system_mandatory', 'visible', 'db.query(models.WasteType.id, models.WasteType.name).filter(and_(models.WasteType.deleted == 0, models.WasteType.record_status == 1, or_(models.WasteType.subscriber_id == subscriber_id, models.WasteType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, '{\"table_name\": \"waste_types\", \"select_columns\":\"waste_types.id as waste_type_id,waste_types.name as waste_type_name\", \"on_condition\": \"waste_types.id\", \"where_condition\":\"(waste_types.deleted = 0 OR waste_types.deleted IS NULL)AND (waste_types.record_status = 1 OR waste_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1352, 2, 138, 'waste_items', 'waste_monitoring_id', 'waste_marpol_disposal_id', 'Waste Marpol Disposal', NULL, 'dropdown', 'Waste Marpol Disposal', 'non_mandatory', 'visible', 'db.query(models.WasteMarpolDisposal.id,models.WasteMarpolDisposal.name).filter(and_(models.WasteMarpolDisposal.subscriber_id == subscriber_id, models.WasteMarpolDisposal.deleted == 0, models.WasteMarpolDisposal.record_status == 1)).order_by(models.WasteMarpolDisposal.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, '{\"table_name\": \"waste_marpol_disposals\", \"select_columns\":\"waste_marpol_disposals.id as waste_marpol_disposal_id,waste_marpol_disposals.name as waste_marpol_disposal_name\", \"on_condition\": \"waste_marpol_disposals.id\", \"where_condition\":\"(waste_marpol_disposals.deleted = 0 OR waste_marpol_disposals.deleted IS NULL)AND (waste_marpol_disposals.record_status = 1 OR waste_marpol_disposals.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1353, 2, 138, 'waste_items', 'waste_monitoring_id', 'weight_per_piece', 'Volume per Piece', NULL, 'numeric', 'Volume per Piece', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1354, 2, 138, 'waste_items', 'waste_monitoring_id', 'nb_of_pieces', 'No. of Pieces', NULL, 'numeric', 'No. of Pieces', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1355, 2, 138, 'waste_items', 'waste_monitoring_id', 'consumption', 'Total Volume', NULL, 'numeric', 'Total Volume', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1356, 2, 138, 'waste_items', 'waste_monitoring_id', 'volume_unit_id', 'Waste Unit', NULL, 'dropdown', 'Waste Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_( models.Unit.type == \"Volume Units\", models.Unit.deleted == 0, models.Unit.record_status == 1,or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, '{\"table_name\": \"units\", \"select_columns\":\"units.id as volume_unit_id,units.name as volume_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Volume Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1357, 2, 138, 'waste_items', 'waste_monitoring_id', 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'non_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL)AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1358, 2, 138, 'waste_items', 'waste_monitoring_id', 'cost', 'Cost', NULL, 'numeric', 'Cost', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1359, 2, 138, 'waste_items', 'waste_monitoring_id', 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"volume_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1360, 2, 138, 'waste_items', 'waste_monitoring_id', 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1361, 2, 138, 'waste_monitorings', NULL, 'type', 'Type', NULL, 'text', 'Type', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"VolumetricWasteMonitoring\" \r\n}]', 'models.WasteMonitoring', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1362, 2, 138, 'waste_items', 'waste_monitoring_id', 'type', 'Type', NULL, 'text', 'Type', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"VolumetricWasteMonitoring\" \r\n}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1363, 2, 138, 'waste_monitorings', NULL, 'uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WasteMonitoring', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1364, 2, 138, 'waste_items', 'waste_monitoring_id', 'parent_uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1365, 2, 38, 'waste_monitorings', NULL, 'uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WasteMonitoring', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1366, 2, 38, 'waste_items', 'waste_monitoring_id', 'parent_uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1367, 2, 125, 'water_treatments', NULL, 'uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatment', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1368, 2, 125, 'water_treatment_items', 'water_treatment_id', 'parent_uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatmentItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1369, 2, 126, 'water_treatments', NULL, 'uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatment', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1370, 2, 126, 'water_treatment_items', 'water_treatment_id', 'parent_uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatmentItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1371, 2, 127, 'water_treatments', NULL, 'uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatment', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1372, 2, 127, 'water_treatment_items', 'water_treatment_id', 'parent_uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatmentItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1373, 2, 19, 'air_emissions', NULL, 'uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirEmission', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1374, 2, 19, 'air_emission_items', 'air_emission_id', 'parent_uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirEmissionItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1377, 2, 117, 'air_emissions', NULL, 'uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirEmission', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1378, 2, 117, 'air_emission_items', 'air_emission_id', 'parent_uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirEmissionItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1384, 2, 125, 'water_treatment_items', 'water_treatment_id', 'comments', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatmentItem', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1385, 2, 126, 'water_treatment_items', 'water_treatment_id', 'comments', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatmentItem', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1386, 2, 127, 'water_treatment_items', 'water_treatment_id', 'comments', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterTreatmentItem', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1387, 2, 139, 'roles', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be alphabets\", \"pattern\": \"^[a-zA-Z ]*$\", \"translation_key\": \"MUST_BE_ALPHABETS\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.Role\", \"combination_column\": [\"name\"]}]', NULL, NULL, 'models.Role', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1388, 2, 139, 'roles', NULL, 'domain_id', 'Domain', NULL, 'text', 'Domain', 'system_mandatory', 'template_invisible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be alphabets\", \"pattern\": \"^[a-zA-Zs]*$\", \"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, '[{\"type\":\"default\",\"value\":1}]', 'models.Role', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1389, 2, 139, 'roles', NULL, 'sys_name', 'System Name', NULL, 'dropdown', 'System Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"admin\", \"name\": \"admin\"}, {\"id\": \"customer\", \"name\": \"customer\"}, {\"id\": \"Report User\", \"name\": \"Report User\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.Role', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1390, 2, 139, 'roles', NULL, 'description', 'Description', NULL, 'text', 'Description', 'non_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be alphabets\", \"pattern\": \"^[a-zA-Zs]*$\", \"translation_key\": \"MUST_BE_ALPHABETS\"}]', NULL, NULL, 'models.Role', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1392, 2, 41, 'flight_consumptions', NULL, 'consumption', 'Distance', NULL, 'numeric', 'Distance', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"default_value\":\"consumption\",\"multimatch\":true,\"match_table\":\"airport_distances\",\"result_type\":\"numeric\",\"match_column\":\"distance\",\"result_value\":\"consumption\",\"match_condition\":[{\"value1\":\"origin_code\",\"column1\":\"origin\",\"value2\":\"destination_code\",\"column2\":\"destination\",\"identifier\":\"=\"}],\"join_condition\":[{\"join_value1\":\"origin_id\",\"join_column1\":\"iata\",\"join_table1\":\"airports\",\"join_where1\":\"id\",\"join_value2\":\"destination_id\",\"join_column2\":\"iata\",\"join_table2\":\"airports\",\"join_where2\":\"id\",\"identifier\":\"=\"}]}]', 'models.FlightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1393, 2, 41, 'flight_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"distance_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.FlightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1394, 2, 41, 'flight_consumptions', NULL, 'emission', 'Emission', NULL, 'numeric', 'Emission', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"co2e\",\"match_table\":\"emission_factors\",\"match_condition\":[{\"value\":\"provider_id\",\"column\":\"provider_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"}],\"where_condition\":\"type=\'FlightEmissionFactor\'\"},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"emission\",\"variable1\":\"consumption_conv\",\"variable2\":\"match_result\",\"variable4\":\"number_of_passengers\",\"operation\":\"multiply\",\"no_of_decimal_places\":\"2\"}]', 'models.FlightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1395, 2, 41, 'flight_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.FlightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1396, 2, 138, 'waste_items', 'waste_monitoring_id', 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"emission_factors\", \"result_type\": \"numeric\", \"match_column\": \"co2e\", \"match_result\": \"result\", \"match_condition\": [{\"value\": \"volume_unit_id\", \"column\": \"consumption_unit_id\", \"identifier\": \"=\"}, {\"value\": \"waste_type_id\", \"column\": \"waste_type_id\", \"identifier\": \"=\"}, {\"value\": \"year\", \"column\": \"year\", \"identifier\": \"=\"}], \"where_condition\": \"type=\\\"VolumetricWasteEmissionFactor\\\" \"}, {\"type\": \"math\", \"operation\": \"multiply\", \"variable1\": \"consumption_conv\", \"variable2\": \"match_result\", \"result_type\": \"numeric\", \"result_value\": \"emission\"}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1397, 2, 138, 'waste_items', 'waste_monitoring_id', 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1398, 2, 138, 'waste_items', 'waste_monitoring_id', 'ghg_protocol_scope', 'Ghg Protocol Scope', NULL, 'numeric', 'Ghg Protocol Scope', 'non_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"3\" \r\n}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1399, 2, 125, 'water_treatment_items', 'water_treatment_id', 'type', 'type', NULL, 'text', 'type', 'system_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"WaterTreatmentPh\" \r\n}]', 'models.WaterTreatmentItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1401, 2, 118, 'air_emissions', NULL, 'uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirEmission', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1402, 2, 118, 'air_emission_items', 'air_emission_id', 'parent_uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.AirEmissionItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1404, 2, 44, 'sea_freight_consumptions', NULL, 'distance', 'Distance', NULL, 'numeric', 'Distance', 'template_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SeaFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(1405, 2, 44, 'sea_freight_consumptions', NULL, 'distance_unit_id', 'Distance Unit', NULL, 'dropdown', 'Distance Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": 51\r\n}]', 'models.SeaFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as distance_unit_id,unit.name as distance_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Distance Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1406, 2, 44, 'sea_freight_consumptions', NULL, 'consumption', 'Distance', NULL, 'numeric', 'Consumption', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}]', NULL, '[{\"type\":\"match_condition\",\"multimatch\":true,\"default_value\":\"consumption\",\"match_table\":\"port_distances\",\"result_type\":\"numeric\",\"match_column\":\"distance\",\"result_value\":\"consumption\",\"match_condition\":[{\"value1\":\"origin_code\",\"column1\":\"origin\",\"value2\":\"destination_code\",\"column2\":\"destination\",\"identifier\":\"=\"}],\"join_condition\":[{\"join_value1\":\"origin_id\",\"join_column1\":\"code\",\"join_table1\":\"ports\",\"join_where1\":\"id\",\"join_value2\":\"destination_id\",\"join_column2\":\"code\",\"join_table2\":\"ports\",\"join_where2\":\"id\",\"identifier\":\"=\"}]}]', 'models.SeaFreightConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1407, 2, 44, 'sea_freight_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', NULL, 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"distance_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.SeaFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1408, 2, 44, 'sea_freight_consumptions', NULL, 'teu', 'TEU', NULL, 'numeric', NULL, 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"container_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"volume_decimal\", \"variable1\": \"volume_decimal\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.SeaFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1409, 2, 44, 'sea_freight_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', NULL, 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.SeaFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1410, 2, 44, 'sea_freight_consumptions', NULL, 'emission', 'Emission', NULL, 'numeric', NULL, 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"co2e\",\"match_table\":\"emission_factors\",\"match_condition\":[{\"value\":\"provider_id\",\"column\":\"provider_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"}],\"where_condition\":\"type=\'SeaFreightEmissionFactor\'\"},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"emission\",\"variable1\":\"consumption_conv\",\"variable2\":\"match_result\",\"variable4\":\"teu\",\"operation\":\"multiply\",\"no_of_decimal_places\":\"2\"}]', 'models.SeaFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1411, 2, 41, 'flight_consumptions', NULL, 'distance_unit_id', 'Distance Unit', NULL, 'dropdown', 'Distance', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FlightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as distance_unit_id,unit.name as distance_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Distance Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1412, 2, 35, 'air_freight_consumptions', NULL, 'distance_unit_id', 'Distance Unit', NULL, 'dropdown', 'Distance Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.AirFreightConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as distance_unit_id,unit.name as distance_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Distance Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1413, 2, 140, 'spend_based_emission_factors', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"gas_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"gas_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedGasEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1414, 2, 140, 'spend_based_emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"gas_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"gas_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedGasEmissionFactor\"}]}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1415, 2, 140, 'spend_based_emission_factors', NULL, 'gas_type_id', 'Gas Type', NULL, 'dropdown', 'Gas Type', 'system_mandatory', 'visible', 'db.query(models.GasType.id, models.GasType.name).filter(and_(models.GasType.deleted == 0, models.GasType.record_status == 1, or_(models.GasType.subscriber_id == subscriber_id, models.GasType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"gas_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"gas_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedGasEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"gas_types\", \"select_columns\":\"gas_types.id as gas_type_id,gas_types.name as gas_type_name\", \"on_condition\": \"gas_types.id\", \"where_condition\":\"(gas_types.deleted = 0 OR gas_types.deleted IS NULL) AND (gas_types.record_status = 1 OR gas_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1416, 2, 140, 'spend_based_emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1417, 2, 140, 'spend_based_emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1418, 2, 140, 'spend_based_emission_factors', NULL, 'emission_unit_id', 'Emission Unit', NULL, 'dropdown', 'Emission Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1419, 2, 140, 'spend_based_emission_factors', NULL, 'currency_id', 'Currency Unit', NULL, 'dropdown', 'Currency Unit', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1420, 2, 140, 'spend_based_emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(1421, 2, 140, 'spend_based_emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1422, 2, 140, 'spend_based_emission_factors', NULL, 'type', 'GasEmissionFactor', NULL, 'text', 'GasEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"SpendBasedGasEmissionFactor\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1423, 2, 140, 'spend_based_emission_factors', NULL, 'consumable_type', 'GasType', NULL, 'text', 'GasType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"GasType\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1424, 2, 140, 'spend_based_emission_factors', NULL, 'consumption_unit_type', 'GasUnit', NULL, 'text', 'GasUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"GasUnit\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1425, 2, 141, 'fuel_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1426, 2, 141, 'fuel_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.FuelConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1427, 2, 141, 'fuel_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.FuelConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1428, 2, 141, 'fuel_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.FuelConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1429, 2, 141, 'fuel_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, NULL, '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1430, 2, 141, 'fuel_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1431, 2, 141, 'fuel_consumptions', NULL, 'fuel_type_id', 'Fuel Type', NULL, 'dropdown', 'Fuel Type', 'system_mandatory', 'visible', 'db.query(models.FuelType.id, models.FuelType.name).filter(and_(models.FuelType.deleted == 0, models.FuelType.record_status == 1, models.FuelType.unit_type == \"Weight Units\", or_(models.FuelType.subscriber_id == subscriber_id, models.FuelType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, NULL, '{\"table_name\": \"fuel_types\", \"select_columns\":\"fuel_types.id as fuel_type_id,fuel_types.name as fuel_type_name\", \"on_condition\": \"fuel_types.id\", \"where_condition\":\"(fuel_types.deleted = 0 OR fuel_types.deleted IS NULL)AND (fuel_types.record_status = 1 OR fuel_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1432, 2, 141, 'fuel_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.FuelConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1433, 2, 141, 'fuel_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.FuelConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1434, 2, 141, 'fuel_consumptions', NULL, 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"match_table\":\"spend_based_emission_factors\",\"result_type\":\"numeric\",\"match_column\":\"co2e\",\"match_result\":\"result\",\"match_condition\":[{\"value\":\"consumer_id\",\"column\":\"consumer_id\",\"identifier\":\"=\"},{\"value\":\"fuel_type_id\",\"column\":\"fuel_type_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"}],\"where_condition\":\"type=\'SpendBasedWeightedFuelEmissionFactor\'\"},{\"type\":\"math\",\"operation\":\"multiply\",\"variable1\":\"cost_conv\",\"variable2\":\"match_result\",\"result_type\":\"numeric\",\"result_value\":\"emission\",\"no_of_decimal_places\":\"3\"}]', 'models.FuelConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1435, 2, 141, 'fuel_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.FuelConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1436, 2, 141, 'fuel_consumptions', NULL, 'type', 'Type', NULL, 'text', 'Type', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"column\":\"type\",\"value\":\"WeightedFuelConsumption\"}]', 'models.FuelConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1437, 2, 142, 'spend_based_emission_factors', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedSteamEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1438, 2, 142, 'spend_based_emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedSteamEmissionFactor\"}]}, {\"type\": \"required\", \"error_message\": \"required\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1439, 2, 142, 'spend_based_emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1440, 2, 142, 'spend_based_emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1441, 2, 142, 'spend_based_emission_factors', NULL, 'emission_unit_id', 'Emission Unit', NULL, 'dropdown', 'Emission Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1442, 2, 142, 'spend_based_emission_factors', NULL, 'currency_id', 'Currency Unit', NULL, 'dropdown', 'Currency Unit', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1443, 2, 142, 'spend_based_emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1444, 2, 142, 'spend_based_emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1445, 2, 142, 'spend_based_emission_factors', NULL, 'type', 'SteamEmissionFactor', NULL, 'text', 'SteamEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"SpendBasedSteamEmissionFactor\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1446, 2, 142, 'spend_based_emission_factors', NULL, 'consumable_type', 'SteamType', NULL, 'text', 'SteamType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"SteamType\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1447, 2, 142, 'spend_based_emission_factors', NULL, 'consumption_unit_type', 'SteamUnit', NULL, 'text', 'SteamUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"SteamUnit\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1448, 2, 143, 'spend_based_emission_factors', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"waste_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"waste_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedVolumetricWasteEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1449, 2, 143, 'spend_based_emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"waste_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"waste_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedVolumetricWasteEmissionFactor\"}]}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1450, 2, 143, 'spend_based_emission_factors', NULL, 'waste_type_id', 'Waste Type', NULL, 'dropdown', 'Waste Type', 'system_mandatory', 'visible', 'db.query(models.WasteType.id, models.WasteType.name).filter(and_(models.WasteType.deleted == 0, models.WasteType.record_status == 1, or_(models.WasteType.subscriber_id == subscriber_id, models.WasteType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"waste_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"waste_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedVolumetricWasteEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"waste_types\", \"select_columns\":\"waste_types.id as waste_type_id,waste_types.name as waste_type_name\", \"on_condition\": \"waste_types.id\", \"where_condition\":\"(waste_types.deleted = 0 OR waste_types.deleted IS NULL) AND (waste_types.record_status = 1 OR waste_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1451, 2, 143, 'spend_based_emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1452, 2, 143, 'spend_based_emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1453, 2, 143, 'spend_based_emission_factors', NULL, 'emission_unit_id', 'Emission Unit', NULL, 'dropdown', 'Emission Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1454, 2, 143, 'spend_based_emission_factors', NULL, 'currency_id', 'Currency Unit', NULL, 'dropdown', 'Currency Unit', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1455, 2, 143, 'spend_based_emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1456, 2, 143, 'spend_based_emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1457, 2, 143, 'spend_based_emission_factors', NULL, 'type', 'VolumetricEmissionFactor', NULL, 'text', 'VolumetricEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"SpendBasedVolumetricWasteEmissionFactor\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1458, 2, 143, 'spend_based_emission_factors', NULL, 'consumable_type', 'WasteType', NULL, 'text', 'WasteType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"WasteType\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1459, 2, 143, 'spend_based_emission_factors', NULL, 'consumption_unit_type', 'VolumeUnit', NULL, 'text', 'VolumeUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"VolumeUnit\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1460, 2, 144, 'spend_based_emission_factors', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"waste_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"waste_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedWeightedWasteEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1461, 2, 144, 'spend_based_emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"waste_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"waste_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedWeightedWasteEmissionFactor\"}]}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1462, 2, 144, 'spend_based_emission_factors', NULL, 'waste_type_id', 'Waste Type', NULL, 'dropdown', 'Waste Type', 'system_mandatory', 'visible', 'db.query(models.WasteType.id, models.WasteType.name).filter(and_(models.WasteType.deleted == 0, models.WasteType.record_status == 1, or_(models.WasteType.subscriber_id == subscriber_id, models.WasteType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"waste_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"waste_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedWeightedWasteEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"waste_types\", \"select_columns\":\"waste_types.id as waste_type_id,waste_types.name as waste_type_name\", \"on_condition\": \"waste_types.id\", \"where_condition\":\"(waste_types.deleted = 0 OR waste_types.deleted IS NULL) AND (waste_types.record_status = 1 OR waste_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1463, 2, 144, 'spend_based_emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1464, 2, 144, 'spend_based_emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1465, 2, 144, 'spend_based_emission_factors', NULL, 'emission_unit_id', 'Emission Unit', NULL, 'dropdown', 'Emission Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1466, 2, 144, 'spend_based_emission_factors', NULL, 'currency_id', 'Currency Unit', NULL, 'dropdown', 'Currency Unit', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1467, 2, 144, 'spend_based_emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1468, 2, 144, 'spend_based_emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1469, 2, 144, 'spend_based_emission_factors', NULL, 'type', 'WeightedEmissionFactor', NULL, 'text', 'WeightedEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"SpendBasedWeightedWasteEmissionFactor\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1470, 2, 144, 'spend_based_emission_factors', NULL, 'consumable_type', 'WasteType', NULL, 'text', 'WasteType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"WasteType\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1471, 2, 144, 'spend_based_emission_factors', NULL, 'consumption_unit_type', 'WeightUnit', NULL, 'text', 'WeightUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"WeightUnit\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1472, 2, 145, 'spend_based_emission_factors', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"fuel_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"fuel_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedWeightedFuelEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1473, 2, 145, 'spend_based_emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"fuel_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"fuel_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedWeightedFuelEmissionFactor\"}]}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1474, 2, 145, 'spend_based_emission_factors', NULL, 'fuel_type_id', 'Fuel Type', NULL, 'dropdown', 'Fuel Type', 'system_mandatory', 'visible', 'db.query(models.FuelType.id, models.FuelType.name).filter(and_(models.FuelType.deleted == 0, models.FuelType.record_status == 1, models.FuelType.unit_type == \"Weight Units\", or_(models.FuelType.subscriber_id == subscriber_id, models.FuelType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"fuel_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"fuel_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedWeightedFuelEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"fuel_types\", \"select_columns\":\"fuel_types.id as fuel_type_id,fuel_types.name as fuel_type_name\", \"on_condition\": \"fuel_types.id\", \"where_condition\":\"(fuel_types.deleted = 0 OR fuel_types.deleted IS NULL) AND (fuel_types.record_status = 1 OR fuel_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1475, 2, 145, 'spend_based_emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1476, 2, 145, 'spend_based_emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1477, 2, 145, 'spend_based_emission_factors', NULL, 'emission_unit_id', 'Emission Unit', NULL, 'dropdown', 'Emission Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1478, 2, 145, 'spend_based_emission_factors', NULL, 'currency_id', 'Currency Unit', NULL, 'dropdown', 'Currency Unit', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1479, 2, 145, 'spend_based_emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1480, 2, 145, 'spend_based_emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1481, 2, 145, 'spend_based_emission_factors', NULL, 'type', 'WeightedFuelEmissionFactor', NULL, 'text', 'WeightedFuelEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"SpendBasedWeightedFuelEmissionFactor\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1482, 2, 145, 'spend_based_emission_factors', NULL, 'consumable_type', 'FuelType', NULL, 'text', 'FuelType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"FuelType\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1483, 2, 145, 'spend_based_emission_factors', NULL, 'consumption_unit_type', 'WeightUnit', NULL, 'text', 'WeightUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"WeightUnit\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1484, 2, 146, 'spend_based_emission_factors', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"fuel_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"fuel_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedVolumetricFuelEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1485, 2, 146, 'spend_based_emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"fuel_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"fuel_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedVolumetricFuelEmissionFactor\"}]}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1486, 2, 146, 'spend_based_emission_factors', NULL, 'fuel_type_id', 'Fuel Type', NULL, 'dropdown', 'Fuel Type', 'system_mandatory', 'visible', 'db.query(models.FuelType.id, models.FuelType.name).filter(and_(models.FuelType.deleted == 0, models.FuelType.record_status == 1, models.FuelType.unit_type == \"Volume Units\", or_(models.FuelType.subscriber_id == subscriber_id, models.FuelType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"fuel_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"fuel_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedVolumetricFuelEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"fuel_types\", \"select_columns\":\"fuel_types.id as fuel_type_id,fuel_types.name as fuel_type_name\", \"on_condition\": \"fuel_types.id\", \"where_condition\":\"(fuel_types.deleted = 0 OR fuel_types.deleted IS NULL) AND (fuel_types.record_status = 1 OR fuel_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1487, 2, 146, 'spend_based_emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1488, 2, 146, 'spend_based_emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1489, 2, 146, 'spend_based_emission_factors', NULL, 'emission_unit_id', 'Emission Unit', NULL, 'dropdown', 'Emission Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1490, 2, 146, 'spend_based_emission_factors', NULL, 'currency_id', 'Currency Unit', NULL, 'dropdown', 'Currency Unit', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1491, 2, 146, 'spend_based_emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1492, 2, 146, 'spend_based_emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1493, 2, 146, 'spend_based_emission_factors', NULL, 'type', 'VolumetricEmissionFactor', NULL, 'text', 'VolumetricEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"SpendBasedVolumetricFuelEmissionFactor\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1494, 2, 146, 'spend_based_emission_factors', NULL, 'consumable_type', 'FuelType', NULL, 'text', 'FuelType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"FuelType\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(1495, 2, 146, 'spend_based_emission_factors', NULL, 'consumption_unit_type', 'VolumeUnit', NULL, 'text', 'VolumeUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"VolumeUnit\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1497, 2, 147, 'third_parties', NULL, 'type', 'Type', NULL, 'dropdown', 'Type', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"value\":\"provider\"}]', 'models.ThirdParty', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1498, 2, 147, 'third_parties', NULL, 'sub_type', 'Type', NULL, 'dropdown', 'Type', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"value\":\"Provider\"}]', 'models.ThirdParty', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1499, 2, 147, 'third_parties', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\", \"sub_type\"], \"model_name\": \"models.ThirdParty\", \"combination_column\": [\"name\", \"sub_type\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.ThirdParty', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1500, 2, 147, 'third_parties', NULL, 'country_id', 'Country and Region', NULL, 'dropdown', 'Country', 'non_mandatory', 'visible', 'db.query(models.Country.id, models.Country.name).filter(and_(models.Country.deleted == 0, models.Country.record_status == 1, or_(models.Country.subscriber_id == subscriber_id, models.Country.subscriber_id == 1))).order_by(models.Country.sort_order).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.ThirdParty', 1, 'docs#/data-entry', '{\"table_name\": \"countries\", \"select_columns\":\"countries.id as country_id,countries.name as country_name\", \"on_condition\": \"countries.id\", \"where_condition\":\"(countries.deleted = 0 OR countries.deleted IS NULL)AND (countries.record_status = 1 OR countries.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1501, 2, 147, 'third_parties', NULL, 'carbon_offset', 'Carbon Offset', NULL, 'dropdown', 'Carbon Offset', 'non_mandatory', 'visible', NULL, '[{\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"Yes\", \"name\": \"Yes\"}, {\"id\": \"No\", \"name\": \"No\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.ThirdParty', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(1502, 2, 148, 'steam_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SteamConsumption', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(1503, 2, 148, 'steam_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.SteamConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1504, 2, 148, 'steam_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.SteamConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1505, 2, 148, 'steam_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.SteamConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1506, 2, 148, 'steam_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SteamConsumption', 1, NULL, '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(1507, 2, 148, 'steam_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SteamConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1508, 2, 148, 'steam_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SteamConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(1509, 2, 148, 'steam_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.SteamConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1510, 2, 148, 'steam_consumptions', NULL, 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"match_table\":\"spend_based_emission_factors\",\"result_type\":\"numeric\",\"match_column\":\"co2e\",\"match_result\":\"result\",\"match_condition\":[{\"value\":\"consumer_id\",\"column\":\"consumer_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"}],\"where_condition\":\"type = \\\"SpendBasedSteamEmissionFactor\\\"\"},{\"type\":\"math\",\"operation\":\"multiply\",\"variable1\":\"cost_conv\",\"variable2\":\"match_result\",\"result_type\":\"numeric\",\"result_value\":\"emission\",\"no_of_decimal_places\":\"3\"}]', 'models.SteamConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(1511, 2, 148, 'steam_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.SteamConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2000, 2, 2, 'antioxidants_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 2}]', 'models.AntioxidantsConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2001, 2, 3, 'gas_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 3}]', 'models.GasConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2002, 2, 5, 'detergent_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 5}]', 'models.DetergentConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2003, 2, 6, 'commutes', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 6}]', 'models.Commute', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2004, 2, 7, 'customer_safety_records', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 7}]', 'models.CustomerSafetyRecord', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2005, 2, 8, 'improvements', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 8}]', 'models.Improvement', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2006, 2, 9, 'steam_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 9}]', 'models.SteamConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2007, 2, 10, 'lubricant_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 10}]', 'models.LubricantConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2008, 2, 11, 'refrigerant_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 11}]', 'models.RefrigerantConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2009, 2, 12, 'material_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 12}]', 'models.MaterialConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2010, 2, 13, 'water_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 13}]', 'models.WaterConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2011, 2, 14, 'operational_risks', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 14}]', 'models.OperationalRisk', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2012, 2, 15, 'fines', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 15}]', 'models.Fine', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2013, 2, 16, 'audits', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 16}]', 'models.Audit', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2014, 2, 20, 'log_bases', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 20}]', 'models.LogBase', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2015, 2, 21, 'supply_chain_risks', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 21}]', 'models.SupplyChainRisk', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2017, 2, 23, 'countries', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 23}]', 'models.Country', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2018, 2, 24, 'currencies', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 24}]', 'models.Currency', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2019, 2, 25, 'audits', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 25}]', 'models.Audit', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2020, 2, 26, 'fuel_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 26}]', 'models.FuelType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2021, 2, 28, 'material_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 28}]', 'models.MaterialType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2022, 2, 29, 'refrigerant_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 29}]', 'models.RefrigerantType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2023, 2, 30, 'units', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 30}]', 'models.Unit', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2024, 2, 33, 'electricity_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 33}]', 'models.ElectricityConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2025, 2, 34, 'rail_freight_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 34}]', 'models.RailFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2026, 2, 35, 'air_freight_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 35}]', 'models.AirFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2027, 2, 36, 'road_freight_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 36}]', 'models.RoadFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2028, 2, 38, 'waste_monitorings', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 38}]', 'models.WasteMonitoring', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2029, 2, 39, 'water_measurements', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 39}]', 'models.WaterMeasurement', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2030, 2, 41, 'flight_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 41}]', 'models.FlightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2031, 2, 44, 'sea_freight_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 44}]', 'models.SeaFreightConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2032, 2, 48, 'fuel_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 48}]', 'models.FuelConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2033, 2, 49, 'fuel_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 49}]', 'models.FuelConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2034, 2, 52, 'consumers', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 52}]', 'models.Consumer', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2035, 2, 53, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 53}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2036, 2, 55, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 55}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2037, 2, 56, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 56}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2038, 2, 57, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 57}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2039, 2, 60, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 60}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2040, 2, 61, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 61}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2041, 2, 62, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 62}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2042, 2, 63, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 63}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2043, 2, 64, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 64}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2044, 2, 66, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 66}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2045, 2, 67, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 67}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2046, 2, 68, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 68}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2047, 2, 69, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 69}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2048, 2, 70, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 70}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2049, 2, 71, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 71}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2050, 2, 73, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 73}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2051, 2, 75, 'pollutants', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 75}]', 'models.Pollutant', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2052, 2, 76, 'fine_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 76}]', 'models.FineType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2053, 2, 79, 'water_report_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 79}]', 'models.WaterReportType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2054, 2, 80, 'operational_risk_statuses', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 80}]', 'models.OperationalRiskStatus', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2055, 2, 81, 'supply_chain_risk_statuses', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 81}]', 'models.SupplyChainRiskStatus', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2056, 2, 82, 'report_categories', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 82}]', 'models.ReportCategory', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2057, 2, 83, 'issue_categories', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 83}]', 'models.IssueCategory', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2058, 2, 84, 'issue_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 84}]', 'models.IssueType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2059, 2, 85, 'report_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 85}]', 'models.ReportType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2060, 2, 86, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 86}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2061, 2, 87, 'pollutants', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 87}]', 'models.Pollutant', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2062, 2, 88, 'pollutants', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 88}]', 'models.Pollutant', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2063, 2, 89, 'water_providers', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 89}]', 'models.WaterProvider', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2064, 2, 90, 'improvement_categories', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 90}]', 'models.ImprovementCategory', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2065, 2, 91, 'gas_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 91}]', 'models.GasType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2066, 2, 93, 'staffs', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 93}]', 'models.Staff', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2067, 2, 94, 'languages', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 94}]', 'models.Language', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2068, 2, 96, 'organisational_sectors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 96}]', 'models.OrganisationalSector', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2069, 2, 97, 'waste_categories', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 97}]', 'models.WasteCategory', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2070, 2, 98, 'waste_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 98}]', 'models.WasteType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2071, 2, 99, 'engine_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 99}]', 'models.EngineType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2072, 2, 100, 'vehicle_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 100}]', 'models.VehicleType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2073, 2, 101, 'transportation_modes', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 101}]', 'models.TransportationMode', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2074, 2, 102, 'departments', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 102}]', 'models.Department', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2075, 2, 103, 'training_records', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 103}]', 'models.TrainingRecord', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2076, 2, 104, 'training_records', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 104}]', 'models.TrainingRecord', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2077, 2, 105, 'performance_reviews', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 105}]', 'models.PerformanceReview', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2078, 2, 106, 'customer_accident_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 106}]', 'models.CustomerAccidentType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2079, 2, 107, 'leaves', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 107}]', 'models.Leave', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2080, 2, 108, 'leaves', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 108}]', 'models.Leave', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2081, 2, 109, 'waste_marpol_disposals', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 109}]', 'models.WasteMarpolDisposal', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2082, 2, 110, 'staff_turnovers', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 110}]', 'models.StaffTurnover', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2083, 2, 111, 'staff_turnovers', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 111}]', 'models.StaffTurnover', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2084, 2, 112, 'tracking_categories', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 112}]', 'models.TrackingCategory', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2085, 2, 113, 'tracking_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 113}]', 'models.TrackingType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2086, 2, 115, 'access_controls', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 115}]', 'models.AccessControl', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2087, 2, 116, 'performance_reviews', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 116}]', 'models.PerformanceReview', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2088, 2, 117, 'air_emissions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 117}]', 'models.AirEmission', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2089, 2, 117, 'air_emission_items', 'air_emission_id', 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 117}]', 'models.AirEmissionItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2090, 2, 118, 'air_emissions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 118}]', 'models.AirEmission', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2091, 2, 118, 'air_emission_items', 'air_emission_id', 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 118}]', 'models.AirEmissionItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2092, 2, 119, 'salaries', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 119}]', 'models.Salary', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2093, 2, 120, 'committees', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 120}]', 'models.Committee', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2094, 2, 121, 'salaries', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 121}]', 'models.Salary', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2095, 2, 122, 'retirement_plans', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 122}]', 'models.RetirementPlan', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2096, 2, 123, 'retirement_plans', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 123}]', 'models.RetirementPlan', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2097, 2, 124, 'committees', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 124}]', 'models.Committee', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2098, 2, 125, 'water_treatments', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 125}]', 'models.WaterTreatment', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2099, 2, 125, 'water_treatment_items', 'water_treatment_id', 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 125}]', 'models.WaterTreatmentItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2100, 2, 126, 'water_treatments', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 126}]', 'models.WaterTreatment', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2101, 2, 126, 'water_treatment_items', 'water_treatment_id', 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 126}]', 'models.WaterTreatmentItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2102, 2, 127, 'water_treatments', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 127}]', 'models.WaterTreatment', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2103, 2, 127, 'water_treatment_items', 'water_treatment_id', 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 127}]', 'models.WaterTreatmentItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2104, 2, 128, 'consumer_users', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 128}]', 'models.ConsumerUser', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2105, 2, 133, 'users', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 133}]', 'models.User', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2106, 2, 134, 'users', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 134}]', 'models.User', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2109, 2, 136, 'domain_users_roles', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 136}]', 'models.DomainUserRoles', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2110, 2, 137, 'economic_datas', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 137}]', 'models.EconomicData', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2111, 2, 138, 'waste_monitorings', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 138}]', 'models.WasteMonitoring', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2112, 2, 138, 'waste_items', 'waste_monitoring_id', 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 138}]', 'models.WasteItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2113, 2, 139, 'roles', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 139}]', 'models.Role', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2136, 2, 135, 'work_safety_records', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WorkSafetyRecord', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(2137, 2, 135, 'work_safety_records', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"start_date\", \"compare_data\": \"staff_id\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.WorkSafetyRecord', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2138, 2, 135, 'work_safety_records', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"end_date\", \"compare_data\": \"staff_id\", \"validate_date_one\": \"start_date\", \"validate_date_two\": \"end_date\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.WorkSafetyRecord', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2139, 2, 135, 'work_safety_records', NULL, 'staff_id', 'Staff', NULL, 'dropdown', 'Staff ID', 'turnkey_mandatory', 'visible', 'db.query(models.Staff.id,models.Staff.staff_code.label(\"name\")).filter(and_(models.Staff.deleted == 0, models.Staff.record_status == 1, models.Staff.subscriber_id == subscriber_id, models.Staff.staff_code.isnot(None))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"staff_id\", \"start_date\", \"end_date\"], \"model_name\": \"models.WorkSafetyRecord\", \"combination_column\": [\"staff_id\", \"start_date\", \"end_date\"]}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"compare_dates\": 2, \"compare_date_one\": \"start_date\", \"compare_date_two\": \"end_date\"}, {\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"consumer_id\", \"start_date\", \"end_date\", \"staff_id\", \"group_by_1\", \"group_by_2\"], \"model_name\": \"models.WorkSafetyRecord\", \"combination_column\": [\"consumer_id\", \"start_date\", \"end_date\", \"staff_id\", \"group_by_1\", \"group_by_2\"]}]', NULL, NULL, 'models.WorkSafetyRecord', 1, 'docs#/data-entry', '{\"table_name\": \"staffs\", \"select_columns\":\"staffs.id as staff_id,staffs.staff_code as staff_name\", \"on_condition\": \"staffs.id\", \"where_condition\":\"(staffs.deleted = 0 OR staffs.deleted IS NULL)AND (staffs.record_status = 1 OR staffs.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2140, 2, 135, 'work_safety_records', NULL, 'group_by_1', 'Group by 1', NULL, 'dropdown', 'Group by 1', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"invalid\", \"list_items\": [{\"id\": \"Age Group\", \"name\": \"Age Group\"}, {\"id\": \"Nationality\", \"name\": \"Nationality\"}, {\"id\": \"Ethnicity\", \"name\": \"Ethnicity\"}, {\"id\": \"Gender\", \"name\": \"Gender\"}, {\"id\": \"Employee Type\", \"name\": \"Employee Type\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.WorkSafetyRecord', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2141, 2, 135, 'work_safety_records', NULL, 'group_by_2', 'Group by 2', NULL, 'dropdown', 'Group by 2', 'system_mandatory', 'visible', NULL, '[{\"type\": \"list\", \"error_message\": \"invalid\", \"list_items\": [{\"id\": \"Age Group\", \"name\": \"Age Group\"}, {\"id\": \"Nationality\", \"name\": \"Nationality\"}, {\"id\": \"Ethnicity\", \"name\": \"Ethnicity\"}, {\"id\": \"Gender\", \"name\": \"Gender\"}, {\"id\": \"Employee Type\", \"name\": \"Employee Type\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.WorkSafetyRecord', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2142, 2, 135, 'work_safety_records', NULL, 'uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WorkSafetyRecord', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2143, 2, 135, 'work_safety_records', NULL, 'form_id', 'Form ID', NULL, 'numeric', 'Form ID', 'turnkey_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 135, \"column\": \"form_id\"}]', 'models.WorkSafetyRecord', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2144, 2, 135, 'injuries', 'safety_records_id', 'gender_id', 'Gender', NULL, 'dropdown', 'Gender', 'template_mandatory', 'visible', 'db.query(models.Gender.id,models.Gender.name).filter(and_(models.Gender.deleted == 0, models.Gender.record_status == 1, models.Gender.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"conditional_columns\": [{\"request\": \"group_by_1\", \"identifier\": \"==\", \"value\": \"\'Gender\'\"}, {\"request\": \"group_by_2\", \"identifier\": \"==\", \"value\": \"\'Gender\'\"}], \"any_one_true\": \"yes\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, NULL, '{\"table_name\": \"gender\", \"select_columns\":\"gender.id as gender_id,gender.name as gender_name\", \"on_condition\": \"gender.id\", \"where_condition\":\"(gender.deleted = 0 OR gender.deleted IS NULL)AND (gender.record_status = 1 OR gender.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2145, 2, 135, 'injuries', 'safety_records_id', 'consequence', 'Consequence', NULL, 'dropdown', 'Consequence', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"invalid\", \"list_items\": [{\"id\": \"Low\", \"name\": \"Low\"}, {\"id\": \"High\", \"name\": \"High\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be alphabets\", \"pattern\": \"^[a-zA-Zs]*$\"}]', NULL, NULL, 'models.Injury', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2146, 2, 135, 'injuries', 'safety_records_id', 'nationality_id', 'Nationality', NULL, 'dropdown', 'Nationality', 'template_mandatory', 'visible', 'db.query(models.Nationality.id,models.Nationality.name).filter(and_(models.Nationality.deleted == 0, models.Nationality.record_status == 1, models.Nationality.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"conditional_columns\": [{\"request\": \"group_by_1\", \"identifier\": \"==\", \"value\": \"\'Nationality\'\"}, {\"request\": \"group_by_2\", \"identifier\": \"==\", \"value\": \"\'Nationality\'\"}], \"any_one_true\": \"yes\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, NULL, '{\"table_name\": \"nationalities\", \"select_columns\":\"nationalities.id as nationality_id,nationalities.name as nationality_name\", \"on_condition\": \"nationalities.id\", \"where_condition\":\"(nationalities.deleted = 0 OR nationalities.deleted IS NULL)AND (nationalities.record_status = 1 OR nationalities.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2147, 2, 135, 'injuries', 'safety_records_id', 'age_group_id', 'Age Group', NULL, 'dropdown', 'Age Group', 'template_mandatory', 'visible', 'db.query(models.AgeGroup.id,models.AgeGroup.name).filter(and_(models.AgeGroup.deleted == 0, models.AgeGroup.record_status == 1, models.AgeGroup.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"conditional_columns\": [{\"request\": \"group_by_1\", \"identifier\": \"==\", \"value\": \"\'Age Group\'\"}, {\"request\": \"group_by_2\", \"identifier\": \"==\", \"value\": \"\'Age Group\'\"}], \"any_one_true\": \"yes\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, NULL, '{\"table_name\": \"age_groups\", \"select_columns\":\"age_groups.id as age_group_id,age_groups.name as age_group_name\", \"on_condition\": \"age_groups.id\", \"where_condition\":\"(age_groups.deleted = 0 OR age_groups.deleted IS NULL)AND (age_groups.record_status = 1 OR age_groups.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2148, 2, 135, 'injuries', 'safety_records_id', 'ethnicity_id', 'Ethnicity', NULL, 'dropdown', 'Ethnicity', 'template_mandatory', 'visible', 'db.query(models.Ethnicity.id,models.Ethnicity.name).filter(and_(models.Ethnicity.deleted == 0, models.Ethnicity.record_status == 1, models.Ethnicity.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"conditional_columns\": [{\"request\": \"group_by_1\", \"identifier\": \"==\", \"value\": \"\'Ethnicity\'\"}, {\"request\": \"group_by_2\", \"identifier\": \"==\", \"value\": \"\'Ethnicity\'\"}], \"any_one_true\": \"yes\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, NULL, '{\"table_name\": \"ethnicities\", \"select_columns\":\"ethnicities.id as ethnicity_id,ethnicities.name as ethnicity_name\", \"on_condition\": \"ethnicities.id\", \"where_condition\":\"(ethnicities.deleted = 0 OR ethnicities.deleted IS NULL)AND (ethnicities.record_status = 1 OR ethnicities.record_status IS NULL)\"}', 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(2149, 2, 135, 'injuries', 'safety_records_id', 'employee_type_id', 'Employee Type', NULL, 'dropdown', 'Employee Type', 'template_mandatory', 'visible', 'db.query(models.EmployeeType.id,models.EmployeeType.name).filter(and_(models.EmployeeType.deleted == 0, models.EmployeeType.record_status == 1, models.EmployeeType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"conditional_columns\": [{\"request\": \"group_by_1\", \"identifier\": \"==\", \"value\": \"\'Employee Type\'\"}, {\"request\": \"group_by_2\", \"identifier\": \"==\", \"value\": \"\'Employee Type\'\"}], \"any_one_true\": \"yes\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, NULL, '{\"table_name\": \"employee_types\", \"select_columns\":\"employee_types.id as employee_type_id,employee_types.name as employee_type_name\", \"on_condition\": \"employee_types.id\", \"where_condition\":\"(employee_types.deleted = 0 OR employee_types.deleted IS NULL)AND (employee_types.record_status = 1 OR employee_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2150, 2, 135, 'injuries', 'safety_records_id', 'leave_category_id', 'Injury&Lost day Category', NULL, 'dropdown', 'Injury&Lost day Category', 'template_mandatory', 'visible', 'db.query(models.LeaveCategory.id,models.LeaveCategory.name).filter(and_(models.LeaveCategory.deleted == 0, models.LeaveCategory.record_status == 1, models.LeaveCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, NULL, '{\"table_name\": \"leave_categories\", \"select_columns\":\"leave_categories.id as leave_category_id,leave_categories.name as leave_category_name\", \"on_condition\": \"leave_categories.id\", \"where_condition\":\"(leave_categories.deleted = 0 OR leave_categories.deleted IS NULL)AND (leave_categories.record_status = 1 OR leave_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2151, 2, 135, 'injuries', 'safety_records_id', 'leave_type_id', 'Injury&Lost day Type', NULL, 'dropdown', 'Injury&Lost day Type', 'template_mandatory', 'visible', 'db.query(models.LeaveType.id,models.LeaveType.name).filter(and_(models.LeaveType.deleted == 0, models.LeaveType.record_status == 1, models.LeaveType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, NULL, '{\"table_name\": \"leave_types\", \"select_columns\":\"leave_types.id as leave_type_id,leave_types.name as leave_type_name\", \"on_condition\": \"leave_types.id\", \"where_condition\":\"(leave_types.deleted = 0 OR leave_types.deleted IS NULL)AND (leave_types.record_status = 1 OR leave_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2152, 2, 135, 'injuries', 'safety_records_id', 'nb_injuries', 'No of injuries', NULL, 'numeric', 'No of injuries', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2153, 2, 135, 'injuries', 'safety_records_id', 'nb_lost_days', 'No of lost days', NULL, 'numeric', 'No of lost days', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2154, 2, 135, 'injuries', 'safety_records_id', 'nb_incidents', 'No of incidents', NULL, 'numeric', 'No of incidents', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2155, 2, 135, 'injuries', 'safety_records_id', 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Injury', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2156, 2, 135, 'injuries', 'safety_records_id', 'parent_uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Injury', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2157, 2, 135, 'injuries', 'safety_records_id', 'form_id', 'Form ID', NULL, 'numeric', 'Form ID', 'turnkey_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 135, \"column\": \"form_id\"}]', 'models.Injury', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2158, 2, 149, 'spend_based_emission_factors', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedLubricantEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2159, 2, 149, 'spend_based_emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedLubricantEmissionFactor\"}]}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2160, 2, 149, 'spend_based_emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2161, 2, 149, 'spend_based_emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2162, 2, 149, 'spend_based_emission_factors', NULL, 'emission_unit_id', 'Emission Unit', NULL, 'dropdown', 'Emission Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2163, 2, 149, 'spend_based_emission_factors', NULL, 'currency_id', 'Currency Unit', NULL, 'dropdown', 'Currency Unit', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2164, 2, 149, 'spend_based_emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2165, 2, 149, 'spend_based_emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2166, 2, 149, 'spend_based_emission_factors', NULL, 'type', 'LubricantEmissionFactor', NULL, 'text', 'LubricantEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"SpendBasedLubricantEmissionFactor\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2167, 2, 149, 'spend_based_emission_factors', NULL, 'consumable_type', 'LubricantType', NULL, 'text', 'LubricantType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"LubricantType\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2168, 2, 149, 'spend_based_emission_factors', NULL, 'consumption_unit_type', 'VolumeUnit', NULL, 'text', 'VolumeUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"VolumeUnit\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2169, 2, 150, 'spend_based_emission_factors', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"material_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"material_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedMaterialEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2170, 2, 150, 'spend_based_emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"material_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"material_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedMaterialEmissionFactor\"}]}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2171, 2, 150, 'spend_based_emission_factors', NULL, 'material_type_id', 'Material Type', NULL, 'dropdown', 'Material Type', 'system_mandatory', 'visible', 'db.query(models.MaterialType.id, models.MaterialType.name).filter(and_(models.MaterialType.deleted == 0, models.MaterialType.record_status == 1, or_(models.MaterialType.subscriber_id == subscriber_id, models.MaterialType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"material_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"material_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedMaterialEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"material_types\", \"select_columns\":\"material_types.id as material_type_id,material_types.name as material_type_name\", \"on_condition\": \"material_types.id\", \"where_condition\":\"(material_types.deleted = 0 OR material_types.deleted IS NULL) AND (material_types.record_status = 1 OR material_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2172, 2, 150, 'spend_based_emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2173, 2, 150, 'spend_based_emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2174, 2, 150, 'spend_based_emission_factors', NULL, 'emission_unit_id', 'Emission Unit', NULL, 'dropdown', 'Emission Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2175, 2, 150, 'spend_based_emission_factors', NULL, 'currency_id', 'Currency Unit', NULL, 'dropdown', 'Currency Unit', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2176, 2, 150, 'spend_based_emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2177, 2, 150, 'spend_based_emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2178, 2, 150, 'spend_based_emission_factors', NULL, 'type', 'MaterialEmissionFactor', NULL, 'text', 'MaterialEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"SpendBasedMaterialEmissionFactor\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2179, 2, 150, 'spend_based_emission_factors', NULL, 'consumable_type', 'MaterialType', NULL, 'text', 'MaterialType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"MaterialType\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2180, 2, 150, 'spend_based_emission_factors', NULL, 'consumption_unit_type', 'WeightUnit', NULL, 'text', 'WeightUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"WeightUnit\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2181, 2, 151, 'spend_based_emission_factors', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"refrigerant_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"refrigerant_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedRefrigerantEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2182, 2, 151, 'spend_based_emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"refrigerant_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"refrigerant_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedRefrigerantEmissionFactor\"}]}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2183, 2, 151, 'spend_based_emission_factors', NULL, 'refrigerant_type_id', 'Refrigerant Type', NULL, 'dropdown', 'Refrigerant Type', 'system_mandatory', 'visible', 'db.query(models.RefrigerantType.id, models.RefrigerantType.name).filter(and_(models.RefrigerantType.deleted == 0, models.RefrigerantType.record_status == 1, or_(models.RefrigerantType.subscriber_id == subscriber_id, models.RefrigerantType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"refrigerant_type_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"refrigerant_type_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedRefrigerantEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"refrigerant_types\", \"select_columns\":\"refrigerant_types.id as refrigerant_type_id,refrigerant_types.name as refrigerant_type_name\", \"on_condition\": \"refrigerant_types.id\", \"where_condition\":\"(refrigerant_types.deleted = 0 OR refrigerant_types.deleted IS NULL) AND (refrigerant_types.record_status = 1 OR refrigerant_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2184, 2, 151, 'spend_based_emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2185, 2, 151, 'spend_based_emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2186, 2, 151, 'spend_based_emission_factors', NULL, 'emission_unit_id', 'Emission Unit', NULL, 'dropdown', 'Emission Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2187, 2, 151, 'spend_based_emission_factors', NULL, 'currency_id', 'Currency Unit', NULL, 'dropdown', 'Currency Unit', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2188, 2, 151, 'spend_based_emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2189, 2, 151, 'spend_based_emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2190, 2, 151, 'spend_based_emission_factors', NULL, 'type', 'RefrigerantEmissionFactor', NULL, 'text', 'RefrigerantEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"SpendBasedRefrigerantEmissionFactor\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2191, 2, 151, 'spend_based_emission_factors', NULL, 'consumable_type', 'RefrigerantType', NULL, 'text', 'RefrigerantType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"RefrigerantType\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2192, 2, 151, 'spend_based_emission_factors', NULL, 'consumption_unit_type', 'VolumeUnit', NULL, 'text', 'VolumeUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"VolumeUnit\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2204, 2, 153, 'material_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.MaterialConsumption', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(2205, 2, 153, 'material_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.MaterialConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2206, 2, 153, 'material_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.MaterialConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2207, 2, 153, 'material_consumptions', NULL, 'material_type_id', 'Material Type', NULL, 'dropdown', 'Material Type', 'system_mandatory', 'visible', 'db.query(models.MaterialType.id, models.MaterialType.name).filter(and_(models.MaterialType.deleted == 0, models.MaterialType.record_status == 1, or_(models.MaterialType.subscriber_id == subscriber_id, models.MaterialType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.MaterialConsumption', 1, NULL, '{\"table_name\": \"material_types\", \"select_columns\":\"material_types.id as material_type_id,material_types.name as material_type_name\", \"on_condition\": \"material_types.id\", \"where_condition\":\"(material_types.deleted = 0 OR material_types.deleted IS NULL)AND (material_types.record_status = 1 OR material_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2208, 2, 153, 'material_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, '[{\"type\": \"default\",\"value\":3}]', 'models.MaterialConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2209, 2, 153, 'material_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.MaterialConsumption', 1, NULL, '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2210, 2, 153, 'material_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.MaterialConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2211, 2, 153, 'material_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.MaterialConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2212, 2, 153, 'material_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.MaterialConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2213, 2, 153, 'material_consumptions', NULL, 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"match_table\":\"spend_based_emission_factors\",\"result_type\":\"numeric\",\"match_column\":\"co2e\",\"match_result\":\"result\",\"match_condition\":[{\"value\":\"consumer_id\",\"column\":\"consumer_id\",\"identifier\":\"=\"},{\"value\":\"material_type_id\",\"column\":\"material_type_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"}],\"where_condition\":\"type = \\\"SpendBasedMaterialEmissionFactor\\\"\"},{\"type\":\"math\",\"operation\":\"multiply\",\"variable1\":\"cost_conv\",\"variable2\":\"match_result\",\"result_type\":\"numeric\",\"result_value\":\"emission\",\"no_of_decimal_places\":\"3\"}]', 'models.MaterialConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2214, 2, 153, 'material_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.MaterialConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2215, 2, 92, 'improvement_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 92}]', 'models.ImprovementType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2216, 2, 77, 'disposal_methods', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 77}]', 'models.DisposalMethod', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2217, 2, 74, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 74}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2218, 2, 72, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 72}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2219, 2, 65, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 65}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2220, 2, 18, 'vehicle_trackings', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\", \"value\": 18}]', 'models.VehicleTracking', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2221, 2, 154, 'work_safety_records', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WorkSafetyRecord', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(2222, 2, 154, 'work_safety_records', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.WorkSafetyRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2223, 2, 154, 'work_safety_records', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.WorkSafetyRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2224, 2, 154, 'work_safety_records', NULL, 'group_by_1', 'Group by 1', NULL, 'dropdown', 'Group by 1', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"invalid\", \"list_items\": [{\"id\": \"Age Group\", \"name\": \"Age Group\"}, {\"id\": \"Nationality\", \"name\": \"Nationality\"}, {\"id\": \"Ethnicity\", \"name\": \"Ethnicity\"}, {\"id\": \"Gender\", \"name\": \"Gender\"}, {\"id\": \"Employee Type\", \"name\": \"Employee Type\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.WorkSafetyRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2225, 2, 154, 'work_safety_records', NULL, 'group_by_2', 'Group by 2', NULL, 'dropdown', 'Group by 2', 'system_mandatory', 'visible', NULL, '[{\"type\": \"list\", \"error_message\": \"invalid\", \"list_items\": [{\"id\": \"Age Group\", \"name\": \"Age Group\"}, {\"id\": \"Nationality\", \"name\": \"Nationality\"}, {\"id\": \"Ethnicity\", \"name\": \"Ethnicity\"}, {\"id\": \"Gender\", \"name\": \"Gender\"}, {\"id\": \"Employee Type\", \"name\": \"Employee Type\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.WorkSafetyRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2226, 2, 154, 'work_safety_records', NULL, 'uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WorkSafetyRecord', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2227, 2, 154, 'work_safety_records', NULL, 'department_id', 'Department', NULL, 'dropdown', 'Department ID', 'template_mandatory', 'visible', 'db.query(models.Department.id,models.Department.name).filter(and_(models.Department.deleted == 0,models.Department.record_status == 1, models.Department.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"department_id\", \"start_date\", \"end_date\"], \"model_name\": \"models.WorkSafetyRecord\", \"combination_column\": [\"department_id\", \"start_date\", \"end_date\"]}]', NULL, NULL, 'models.WorkSafetyRecord', 1, 'docs#/data-entry', '{\"table_name\": \"departments\", \"select_columns\":\"departments.id as department_id,departments.name as department_name\", \"on_condition\": \"departments.id\", \"where_condition\":\"(departments.deleted = 0 OR departments.deleted IS NULL)AND (departments.record_status = 1 OR departments.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2228, 2, 154, 'work_safety_records', NULL, 'nb_staffs', 'Nb of Staffs', NULL, 'numeric', 'Nb of Staffs', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WorkSafetyRecord', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2229, 2, 154, 'work_safety_records', NULL, 'form_id', 'Form ID', NULL, 'numeric', 'Form ID', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 154}]', 'models.WorkSafetyRecord', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2230, 2, 154, 'injuries', 'safety_records_id', 'gender_id', 'Gender', NULL, 'dropdown', 'Gender', 'template_mandatory', 'visible', 'db.query(models.Gender.id,models.Gender.name).filter(and_(models.Gender.deleted == 0, models.Gender.record_status == 1, models.Gender.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"conditional_columns\": [{\"request\": \"group_by_1\", \"identifier\": \"==\", \"value\": \"\'Gender\'\"}, {\"request\": \"group_by_2\", \"identifier\": \"==\", \"value\": \"\'Gender\'\"}], \"any_one_true\": \"yes\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, 'docs#/data-entry', '{\"table_name\": \"gender\", \"select_columns\":\"gender.id as gender_id,gender.name as gender_name\", \"on_condition\": \"gender.id\", \"where_condition\":\"(gender.deleted = 0 OR gender.deleted IS NULL)AND (gender.record_status = 1 OR gender.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2231, 2, 154, 'injuries', 'safety_records_id', 'consequence', 'Consequence', NULL, 'dropdown', 'Consequence', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"invalid\", \"list_items\": [{\"id\": \"Low\", \"name\": \"Low\"}, {\"id\": \"High\", \"name\": \"High\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be alphabets\", \"pattern\": \"^[a-zA-Zs]*$\"}]', NULL, NULL, 'models.Injury', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2232, 2, 154, 'injuries', 'safety_records_id', 'nationality_id', 'Nationality', NULL, 'dropdown', 'Nationality', 'template_mandatory', 'visible', 'db.query(models.Nationality.id,models.Nationality.name).filter(and_(models.Nationality.deleted == 0, models.Nationality.record_status == 1, models.Nationality.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"conditional_columns\": [{\"request\": \"group_by_1\", \"identifier\": \"==\", \"value\": \"\'Nationality\'\"}, {\"request\": \"group_by_2\", \"identifier\": \"==\", \"value\": \"\'Nationality\'\"}], \"any_one_true\": \"yes\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, 'docs#/data-entry', '{\"table_name\": \"nationalities\", \"select_columns\":\"nationalities.id as nationality_id,nationalities.name as nationality_name\", \"on_condition\": \"nationalities.id\", \"where_condition\":\"(nationalities.deleted = 0 OR nationalities.deleted IS NULL)AND (nationalities.record_status = 1 OR nationalities.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2233, 2, 154, 'injuries', 'safety_records_id', 'age_group_id', 'Age Group', NULL, 'dropdown', 'Age Group', 'template_mandatory', 'visible', 'db.query(models.AgeGroup.id,models.AgeGroup.name).filter(and_(models.AgeGroup.deleted == 0, models.AgeGroup.record_status == 1, models.AgeGroup.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"conditional_columns\": [{\"request\": \"group_by_1\", \"identifier\": \"==\", \"value\": \"\'Age Group\'\"}, {\"request\": \"group_by_2\", \"identifier\": \"==\", \"value\": \"\'Age Group\'\"}], \"any_one_true\": \"yes\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, 'docs#/data-entry', '{\"table_name\": \"age_groups\", \"select_columns\":\"age_groups.id as age_group_id,age_groups.name as age_group_name\", \"on_condition\": \"age_groups.id\", \"where_condition\":\"(age_groups.deleted = 0 OR age_groups.deleted IS NULL)AND (age_groups.record_status = 1 OR age_groups.record_status IS NULL)\"}', 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(2234, 2, 154, 'injuries', 'safety_records_id', 'ethnicity_id', 'Ethnicity', NULL, 'dropdown', 'Ethnicity', 'template_mandatory', 'visible', 'db.query(models.Ethnicity.id,models.Ethnicity.name).filter(and_(models.Ethnicity.deleted == 0, models.Ethnicity.record_status == 1, models.Ethnicity.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"conditional_columns\": [{\"request\": \"group_by_1\", \"identifier\": \"==\", \"value\": \"\'Ethnicity\'\"}, {\"request\": \"group_by_2\", \"identifier\": \"==\", \"value\": \"\'Ethnicity\'\"}], \"any_one_true\": \"yes\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, 'docs#/data-entry', '{\"table_name\": \"ethnicities\", \"select_columns\":\"ethnicities.id as ethnicity_id,ethnicities.name as ethnicity_name\", \"on_condition\": \"ethnicities.id\", \"where_condition\":\"(ethnicities.deleted = 0 OR ethnicities.deleted IS NULL)AND (ethnicities.record_status = 1 OR ethnicities.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2235, 2, 154, 'injuries', 'safety_records_id', 'employee_type_id', 'Employee Type', NULL, 'dropdown', 'Employee Type', 'template_mandatory', 'visible', 'db.query(models.EmployeeType.id,models.EmployeeType.name).filter(and_(models.EmployeeType.deleted == 0, models.EmployeeType.record_status == 1, models.EmployeeType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"conditional_columns\": [{\"request\": \"group_by_1\", \"identifier\": \"==\", \"value\": \"\'Employee Type\'\"}, {\"request\": \"group_by_2\", \"identifier\": \"==\", \"value\": \"\'Employee Type\'\"}], \"any_one_true\": \"yes\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, 'docs#/data-entry', '{\"table_name\": \"employee_types\", \"select_columns\":\"employee_types.id as employee_type_id,employee_types.name as employee_type_name\", \"on_condition\": \"employee_types.id\", \"where_condition\":\"(employee_types.deleted = 0 OR employee_types.deleted IS NULL)AND (employee_types.record_status = 1 OR employee_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2236, 2, 154, 'injuries', 'safety_records_id', 'leave_category_id', 'Injury&Lost day Category', NULL, 'dropdown', 'Injury&Lost day Category', 'template_mandatory', 'visible', 'db.query(models.LeaveCategory.id,models.LeaveCategory.name).filter(and_(models.LeaveCategory.deleted == 0, models.LeaveCategory.record_status == 1, models.LeaveCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, 'docs#/data-entry', '{\"table_name\": \"leave_categories\", \"select_columns\":\"leave_categories.id as leave_category_id,leave_categories.name as leave_category_name\", \"on_condition\": \"leave_categories.id\", \"where_condition\":\"(leave_categories.deleted = 0 OR leave_categories.deleted IS NULL)AND (leave_categories.record_status = 1 OR leave_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2237, 2, 154, 'injuries', 'safety_records_id', 'leave_type_id', 'Injury&Lost day Type', NULL, 'dropdown', 'Injury&Lost day Type', 'template_mandatory', 'visible', 'db.query(models.LeaveType.id,models.LeaveType.name).filter(and_(models.LeaveType.deleted == 0, models.LeaveType.record_status == 1, models.LeaveType.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, 'docs#/data-entry', '{\"table_name\": \"leave_types\", \"select_columns\":\"leave_types.id as leave_type_id,leave_types.name as leave_type_name\", \"on_condition\": \"leave_types.id\", \"where_condition\":\"(leave_types.deleted = 0 OR leave_types.deleted IS NULL)AND (leave_types.record_status = 1 OR leave_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2238, 2, 154, 'injuries', 'safety_records_id', 'nb_injuries', 'No of injuries', NULL, 'numeric', 'No of injuries', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2239, 2, 154, 'injuries', 'safety_records_id', 'nb_lost_days', 'No of lost days', NULL, 'numeric', 'No of lost days', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2240, 2, 154, 'injuries', 'safety_records_id', 'nb_incidents', 'No of incidents', NULL, 'numeric', 'No of incidents', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Injury', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2241, 2, 154, 'injuries', 'safety_records_id', 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Injury', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2242, 2, 154, 'injuries', 'safety_records_id', 'parent_uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Injury', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2243, 2, 154, 'injuries', 'safety_records_id', 'form_id', 'Form ID', NULL, 'numeric', 'Form ID', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 154}]', 'models.Injury', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2257, 2, 141, 'fuel_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 141}]', 'models.FuelConsumption', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2258, 2, 148, 'steam_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 148}]', 'models.SteamConsumption', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2259, 2, 153, 'material_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 153}]', 'models.MaterialConsumption', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2275, 2, 156, 'gas_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.GasConsumption', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(2276, 2, 156, 'gas_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.GasConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2277, 2, 156, 'gas_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.GasConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2278, 2, 156, 'gas_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.GasConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2279, 2, 156, 'gas_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.GasConsumption', 1, NULL, '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2280, 2, 156, 'gas_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.GasConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2281, 2, 156, 'gas_consumptions', NULL, 'gas_type_id', 'Gas Type', NULL, 'dropdown', 'Gas Type', 'system_mandatory', 'visible', 'db.query(models.GasType.id, models.GasType.name).filter(and_(models.GasType.deleted == 0, models.GasType.record_status == 1, or_(models.GasType.subscriber_id == subscriber_id, models.GasType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.GasConsumption', 1, NULL, '{\"table_name\": \"gas_types\", \"select_columns\":\"gas_types.id as gas_type_id,gas_types.name as gas_type_name\", \"on_condition\": \"gas_types.id\", \"where_condition\":\"(gas_types.deleted = 0 OR gas_types.deleted IS NULL) AND (gas_types.record_status = 1 OR gas_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2282, 2, 156, 'gas_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.GasConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2283, 2, 156, 'gas_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.GasConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2284, 2, 156, 'gas_consumptions', NULL, 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"match_table\":\"spend_based_emission_factors\",\"result_type\":\"numeric\",\"match_column\":\"co2e\",\"match_result\":\"result\",\"match_condition\":[{\"value\":\"consumer_id\",\"column\":\"consumer_id\",\"identifier\":\"=\"},{\"value\":\"gas_type_id\",\"column\":\"gas_type_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"}],\"where_condition\":\"type=\\\"SpendBasedGasEmissionFactor\\\"\"},{\"type\":\"math\",\"operation\":\"multiply\",\"variable1\":\"cost_conv\",\"variable2\":\"match_result\",\"result_type\":\"numeric\",\"result_value\":\"emission\",\"no_of_decimal_places\":\"3\"}]', 'models.GasConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2285, 2, 156, 'gas_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.GasConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2286, 2, 156, 'gas_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 156}]', 'models.GasConsumption', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2300, 2, 157, 'fuel_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(2301, 2, 157, 'fuel_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.FuelConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2302, 2, 157, 'fuel_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.FuelConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2303, 2, 157, 'fuel_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.FuelConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2304, 2, 157, 'fuel_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, NULL, '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2305, 2, 157, 'fuel_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2306, 2, 157, 'fuel_consumptions', NULL, 'fuel_type_id', 'Fuel Type', NULL, 'dropdown', 'Fuel Type', 'system_mandatory', 'visible', 'db.query(models.FuelType.id, models.FuelType.name).filter(and_(models.FuelType.deleted == 0, models.FuelType.record_status == 1, models.FuelType.unit_type == \"Volume Units\", or_(models.FuelType.subscriber_id == subscriber_id, models.FuelType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, NULL, '{\"table_name\": \"fuel_types\", \"select_columns\":\"fuel_types.id as fuel_type_id,fuel_types.name as fuel_type_name\", \"on_condition\": \"fuel_types.id\", \"where_condition\":\"(fuel_types.deleted = 0 OR fuel_types.deleted IS NULL)AND (fuel_types.record_status = 1 OR fuel_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2307, 2, 157, 'fuel_consumptions', NULL, 'vehicle_type_id', 'Vehicle Type', NULL, 'dropdown', 'Vehicle Type', 'non_mandatory', 'visible', 'db.query(models.VehicleType.id, models.VehicleType.name).filter(and_(models.VehicleType.deleted == 0, models.VehicleType.record_status == 1, or_(models.VehicleType.subscriber_id == subscriber_id, models.VehicleType.subscriber_id == 1))).order_by(models.VehicleType.sort_order).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.FuelConsumption', 1, NULL, '{\"table_name\": \"vehicle_types\", \"select_columns\":\"vehicle_types.id as vehicle_type_id,vehicle_types.name as vehicle_type_name\", \"on_condition\": \"vehicle_types.id\", \"where_condition\":\"(vehicle_types.deleted = 0 OR vehicle_types.deleted IS NULL)AND (vehicle_types.record_status = 1 OR vehicle_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2308, 2, 157, 'fuel_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.FuelConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2309, 2, 157, 'fuel_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.FuelConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2310, 2, 157, 'fuel_consumptions', NULL, 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"match_table\":\"spend_based_emission_factors\",\"result_type\":\"numeric\",\"match_column\":\"co2e\",\"match_result\":\"result\",\"match_condition\":[{\"value\":\"consumer_id\",\"column\":\"consumer_id\",\"identifier\":\"=\"},{\"value\":\"fuel_type_id\",\"column\":\"fuel_type_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"}],\"where_condition\":\"type=\\\"SpendBasedVolumetricFuelEmissionFactor\\\"\"},{\"type\":\"math\",\"operation\":\"multiply\",\"variable1\":\"cost_conv\",\"variable2\":\"match_result\",\"result_type\":\"numeric\",\"result_value\":\"emission\",\"no_of_decimal_places\":\"3\"}]', 'models.FuelConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2311, 2, 157, 'fuel_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.FuelConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2312, 2, 157, 'fuel_consumptions', NULL, 'type', 'Type', NULL, 'text', 'Type', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"column\":\"type\",\"value\":\"VolumetricFuelConsumption\"}]', 'models.FuelConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2313, 2, 157, 'fuel_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 157}]', 'models.FuelConsumption', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2322, 2, 161, 'commutes', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Commute', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(2323, 2, 161, 'commutes', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.Commute', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2324, 2, 161, 'commutes', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.Commute', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2325, 2, 161, 'commutes', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.Commute', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2326, 2, 161, 'commutes', NULL, 'nb_pax', 'No of Pax', NULL, 'numeric', 'No of Pax', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Commute', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2327, 2, 161, 'commutes', NULL, 'consumption', 'Total Distance', NULL, 'numeric', 'Total Distance', 'template_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.Commute', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2328, 2, 161, 'commutes', NULL, 'distance_unit_id', 'Distance Unit', NULL, 'dropdown', 'Distance Unit', 'template_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Commute', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as distance_unit_id,units.name as distance_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Distance Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2329, 2, 161, 'commutes', NULL, 'fuel_type_id', 'Fuel Type', NULL, 'dropdown', 'Fuel Type', 'template_mandatory', 'visible', 'db.query(models.FuelType.id, models.FuelType.name).filter(and_(models.FuelType.deleted == 0, models.FuelType.record_status == 1, or_(models.FuelType.subscriber_id == subscriber_id, models.FuelType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Commute', 1, 'docs#/data-entry', '{\"table_name\": \"fuel_types\", \"select_columns\":\"fuel_types.id as fuel_type_id,fuel_types.name as fuel_type_name\", \"on_condition\": \"fuel_types.id\", \"where_condition\":\" (fuel_types.deleted = 0 OR fuel_types.deleted IS NULL)AND (fuel_types.record_status = 1 OR fuel_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2330, 2, 161, 'commutes', NULL, 'transportation_mode_id', 'Mode of Transportation', NULL, 'dropdown', 'Mode of Transportation', 'template_mandatory', 'visible', 'db.query(models.TransportationMode.id, models.TransportationMode.name).filter(and_(models.TransportationMode.deleted == 0, models.TransportationMode.record_status == 1, or_(models.TransportationMode.subscriber_id == subscriber_id, models.TransportationMode.subscriber_id == 1))).order_by(models.TransportationMode.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Commute', 1, 'docs#/data-entry', '{\"table_name\": \"transportation_modes\", \"select_columns\":\"transportation_modes.id as transportation_mode_id,transportation_modes.name as transportation_mode_name\", \"on_condition\": \"transportation_modes.id\", \"where_condition\":\"(transportation_modes.deleted = 0 OR transportation_modes.deleted IS NULL)AND (transportation_modes.record_status = 1 OR transportation_modes.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2331, 2, 161, 'commutes', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Commute', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2332, 2, 161, 'commutes', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"distance_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\", \"no_of_decimal_places\": \"2\"}]', 'models.Commute', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2333, 2, 161, 'commutes', NULL, 'emission', 'Emission', NULL, 'numeric', 'Emission', 'template_mandatory', 'visible', NULL, '[{\"decimal_points\":\"3\"}]', NULL, '[{\"type\": \"match_condition\", \"result_type\": \"numeric\", \"result_value\": \"result\", \"match_column\": \"co2e\", \"match_table\": \"emission_factors\", \"match_condition\": [{\"value\": \"year\",\"column\": \"year\",\"identifier\": \"=\"}, {\"value\": \"fuel_type_id\",\"column\": \"fuel_type_id\",\"identifier\": \"=\"},{\"value\": \"transportation_mode_id\",\"column\": \"transportation_mode_id\",\"identifier\": \"=\"},{\"value\": \"subscriber_id\",\"column\": \"subscriber_id\",\"identifier\": \"=\"}], \"where_condition\": \"type=\'CommuteEmissionFactor\'\"},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"emission\", \"variable1\": \"consumption_conv\", \"variable2\": \"match_result\", \"operation\": \"multiply\", \"no_of_decimal_places\": \"2\"}]', 'models.Commute', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2334, 2, 161, 'commutes', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 161}]', 'models.Commute', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2335, 2, 162, 'refrigerant_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RefrigerantConsumption', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(2336, 2, 162, 'refrigerant_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.RefrigerantConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2337, 2, 162, 'refrigerant_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.RefrigerantConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2338, 2, 162, 'refrigerant_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, '[{\"type\": \"default\",\"value\":1}]', 'models.RefrigerantConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2339, 2, 162, 'refrigerant_consumptions', NULL, 'refrigerant_type_id', 'Refrigerant Type', NULL, 'dropdown', 'Refrigerant Type', 'system_mandatory', 'visible', 'db.query(models.RefrigerantType.id, models.RefrigerantType.name).filter(and_(models.RefrigerantType.deleted == 0, models.RefrigerantType.record_status == 1, or_(models.RefrigerantType.subscriber_id == subscriber_id, models.RefrigerantType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RefrigerantConsumption', 1, NULL, '{\"table_name\": \"refrigerant_types\", \"select_columns\":\"refrigerant_types.id as refrigerant_type_id,refrigerant_types.name as refrigerant_type_name\", \"on_condition\": \"refrigerant_types.id\", \"where_condition\":\"(refrigerant_types.deleted = 0 OR refrigerant_types.deleted IS NULL)AND (refrigerant_types.record_status = 1 OR refrigerant_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2340, 2, 162, 'refrigerant_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RefrigerantConsumption', 1, NULL, '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2341, 2, 162, 'refrigerant_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.RefrigerantConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2342, 2, 162, 'refrigerant_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.RefrigerantConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2343, 2, 162, 'refrigerant_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.RefrigerantConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2344, 2, 162, 'refrigerant_consumptions', NULL, 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"match_table\":\"spend_based_emission_factors\",\"result_type\":\"numeric\",\"match_column\":\"co2e\",\"match_result\":\"result\",\"match_condition\":[{\"value\":\"consumer_id\",\"column\":\"consumer_id\",\"identifier\":\"=\"},{\"value\":\"refrigerant_type_id\",\"column\":\"refrigerant_type_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"}],\"where_condition\":\"type=\\\"SpendBasedRefrigerantEmissionFactor\\\"\"},{\"type\":\"math\",\"operation\":\"multiply\",\"variable1\":\"cost_conv\",\"variable2\":\"match_result\",\"result_type\":\"numeric\",\"result_value\":\"emission\",\"no_of_decimal_places\":\"3\"}]', 'models.RefrigerantConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2345, 2, 162, 'refrigerant_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.RefrigerantConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2346, 2, 162, 'refrigerant_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\":162}]', 'models.RefrigerantConsumption', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2347, 2, 163, 'lubricant_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.LubricantConsumption', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(2348, 2, 163, 'lubricant_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.LubricantConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2349, 2, 163, 'lubricant_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.LubricantConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2350, 2, 163, 'lubricant_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.LubricantConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2351, 2, 163, 'lubricant_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.LubricantConsumption', 1, NULL, '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2352, 2, 163, 'lubricant_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.LubricantConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2353, 2, 163, 'lubricant_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.LubricantConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2354, 2, 163, 'lubricant_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.LubricantConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(2355, 2, 163, 'lubricant_consumptions', NULL, 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"match_table\":\"spend_based_emission_factors\",\"result_type\":\"numeric\",\"match_column\":\"co2e\",\"match_result\":\"result\",\"match_condition\":[{\"value\":\"consumer_id\",\"column\":\"consumer_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"}],\"where_condition\":\"type=\\\"SpendBasedLubricantEmissionFactor\\\"\"},{\"type\":\"math\",\"operation\":\"multiply\",\"variable1\":\"cost_conv\",\"variable2\":\"match_result\",\"result_type\":\"numeric\",\"result_value\":\"emission\",\"no_of_decimal_places\":\"3\"}]', 'models.LubricantConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2356, 2, 163, 'lubricant_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.LubricantConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2357, 2, 163, 'lubricant_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 163}]', 'models.LubricantConsumption', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2358, 2, 164, 'waste_monitorings', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteMonitoring', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND consumer_wise_user_access.user_id=userId\"}', 0, 0, 1, 0, 0),
(2359, 2, 164, 'waste_monitorings', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.WasteMonitoring', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2360, 2, 164, 'waste_monitorings', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.WasteMonitoring', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2361, 2, 164, 'waste_monitorings', NULL, 'disposed_by', 'Disposed By', NULL, 'text', 'Disposed By', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WasteMonitoring', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2362, 2, 164, 'waste_monitorings', NULL, 'disposal_method_id', 'Disposal Method', NULL, 'dropdown', 'Disposal Method', 'non_mandatory', 'visible', 'db.query(models.DisposalMethod.id,models.DisposalMethod.name).filter(and_(models.DisposalMethod.subscriber_id == subscriber_id, models.DisposalMethod.deleted == 0, models.DisposalMethod.record_status == 1)).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteMonitoring', 1, NULL, '{\"table_name\": \"disposal_methods\", \"select_columns\":\"disposal_methods.id as disposal_method_id,disposal_methods.name as disposal_method_name\", \"on_condition\": \"disposal_methods.id\", \"where_condition\":\"(disposal_methods.deleted = 0 OR disposal_methods.deleted IS NULL) AND (disposal_methods.record_status = 1 OR disposal_methods.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2363, 2, 164, 'waste_monitorings', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WasteMonitoring', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2364, 2, 164, 'waste_items', 'waste_monitoring_id', 'waste_category_id', 'Waste Type', NULL, 'dropdown', 'Waste Type', 'system_mandatory', 'visible', 'db.query(models.WasteCategory.id, models.WasteCategory.name).filter(and_(models.WasteCategory.deleted == 0, models.WasteCategory.record_status == 1, or_(models.WasteCategory.subscriber_id == subscriber_id, models.WasteCategory.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, '{\"table_name\":\"waste_categories\",\"select_columns\":\"waste_categories.id as waste_category_id,waste_categories.name as waste_category_name\",\"on_condition\":\"waste_categories.id\",\"where_condition\":\"(waste_categories.deleted=0 OR waste_categories.deleted IS NULL)AND(waste_categories.record_status = 1 OR waste_categories.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(2365, 2, 164, 'waste_items', 'waste_monitoring_id', 'waste_type_id', 'Waste Sub Type', NULL, 'dropdown', 'Waste Sub Type', 'system_mandatory', 'visible', 'db.query(models.WasteType.id, models.WasteType.name).filter(and_(models.WasteType.deleted == 0, models.WasteType.record_status == 1, or_(models.WasteType.subscriber_id == subscriber_id, models.WasteType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, '{\"table_name\": \"waste_types\", \"select_columns\":\"waste_types.id as waste_type_id,waste_types.name as waste_type_name\", \"on_condition\": \"waste_types.id\", \"where_condition\":\"(waste_types.deleted = 0 OR waste_types.deleted IS NULL)AND (waste_types.record_status = 1 OR waste_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2366, 2, 164, 'waste_items', 'waste_monitoring_id', 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, '[{\"type\":\"default\",\"column\":\"ghg_protocol_scope\",\"value\":3}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2367, 2, 164, 'waste_items', 'waste_monitoring_id', 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2368, 2, 164, 'waste_items', 'waste_monitoring_id', 'cost', 'Cost', NULL, 'numeric', 'Cost', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2369, 2, 164, 'waste_items', 'waste_monitoring_id', 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2370, 2, 164, 'waste_items', 'waste_monitoring_id', 'type', 'Type', NULL, 'text', 'Type', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\":\"type\",\"value\": \"WeightedWasteMonitoring\"}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2371, 2, 164, 'waste_items', 'waste_monitoring_id', 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"match_table\":\"spend_based_emission_factors\",\"result_type\":\"numeric\",\"match_column\":\"co2e\",\"match_result\":\"result\",\"match_condition\":[{\"value\":\"consumer_id\",\"column\":\"consumer_id\",\"identifier\":\"=\"},{\"value\":\"waste_type_id\",\"column\":\"waste_type_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"}],\"where_condition\":\"type=\\\"SpendBasedWeightedWasteEmissionFactor\\\"\"},{\"type\":\"math\",\"operation\":\"multiply\",\"variable1\":\"cost_conv\",\"variable2\":\"match_result\",\"result_type\":\"numeric\",\"result_value\":\"emission\"}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2372, 2, 164, 'waste_items', 'waste_monitoring_id', 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2373, 2, 164, 'waste_monitorings', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 164}]', 'models.WasteMonitoring', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2374, 2, 164, 'waste_items', 'waste_monitoring_id', 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 164}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2375, 2, 165, 'waste_monitorings', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteMonitoring', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND consumer_wise_user_access.user_id=userId\"}', 0, 0, 1, 0, 0),
(2376, 2, 165, 'waste_monitorings', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.WasteMonitoring', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2377, 2, 165, 'waste_monitorings', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.WasteMonitoring', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2378, 2, 165, 'waste_monitorings', NULL, 'disposed_by', 'Disposed By', NULL, 'text', 'Disposed By', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WasteMonitoring', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2379, 2, 165, 'waste_monitorings', NULL, 'disposal_method_id', 'Disposal Method', NULL, 'dropdown', 'Disposal Method', 'non_mandatory', 'visible', 'db.query(models.DisposalMethod.id,models.DisposalMethod.name).filter(and_(models.DisposalMethod.subscriber_id == subscriber_id, models.DisposalMethod.deleted == 0, models.DisposalMethod.record_status == 1)).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteMonitoring', 1, NULL, '{\"table_name\": \"disposal_methods\", \"select_columns\":\"disposal_methods.id as disposal_method_id,disposal_methods.name as disposal_method_name\", \"on_condition\": \"disposal_methods.id\", \"where_condition\":\"(disposal_methods.deleted = 0 OR disposal_methods.deleted IS NULL) AND (disposal_methods.record_status = 1 OR disposal_methods.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2380, 2, 165, 'waste_monitorings', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WasteMonitoring', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2381, 2, 165, 'waste_items', 'waste_monitoring_id', 'waste_category_id', 'Waste Type', NULL, 'dropdown', 'Waste Type', 'system_mandatory', 'visible', 'db.query(models.WasteCategory.id, models.WasteCategory.name).filter(and_(models.WasteCategory.deleted == 0, models.WasteCategory.record_status == 1, or_(models.WasteCategory.subscriber_id == subscriber_id, models.WasteCategory.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, '{\"table_name\":\"waste_categories\",\"select_columns\":\"waste_categories.id as waste_category_id,waste_categories.name as waste_category_name\",\"on_condition\":\"waste_categories.id\",\"where_condition\":\"(waste_categories.deleted=0 OR waste_categories.deleted IS NULL)AND(waste_categories.record_status = 1 OR waste_categories.record_status IS NULL)\"}', 0, 1, 1, 0, 0),
(2382, 2, 165, 'waste_items', 'waste_monitoring_id', 'waste_type_id', 'Waste Sub Type', NULL, 'dropdown', 'Waste Sub Type', 'system_mandatory', 'visible', 'db.query(models.WasteType.id, models.WasteType.name).filter(and_(models.WasteType.deleted == 0, models.WasteType.record_status == 1, or_(models.WasteType.subscriber_id == subscriber_id, models.WasteType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, '{\"table_name\": \"waste_types\", \"select_columns\":\"waste_types.id as waste_type_id,waste_types.name as waste_type_name\", \"on_condition\": \"waste_types.id\", \"where_condition\":\"(waste_types.deleted = 0 OR waste_types.deleted IS NULL)AND (waste_types.record_status = 1 OR waste_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2383, 2, 165, 'waste_items', 'waste_monitoring_id', 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, '[{\"type\":\"default\",\"column\":\"ghg_protocol_scope\",\"value\":3}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2384, 2, 165, 'waste_items', 'waste_monitoring_id', 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2385, 2, 165, 'waste_items', 'waste_monitoring_id', 'cost', 'Cost', NULL, 'numeric', 'Cost', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2386, 2, 165, 'waste_items', 'waste_monitoring_id', 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2387, 2, 165, 'waste_items', 'waste_monitoring_id', 'type', 'Type', NULL, 'text', 'Type', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\":\"type\",\"value\": \"VolumetricWasteMonitoring\"}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2388, 2, 165, 'waste_items', 'waste_monitoring_id', 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"match_table\":\"spend_based_emission_factors\",\"result_type\":\"numeric\",\"match_column\":\"co2e\",\"match_result\":\"result\",\"match_condition\":[{\"value\":\"consumer_id\",\"column\":\"consumer_id\",\"identifier\":\"=\"},{\"value\":\"waste_type_id\",\"column\":\"waste_type_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"}],\"where_condition\":\"type=\\\"SpendBasedVolumetricWasteEmissionFactor\\\"\"},{\"type\":\"math\",\"operation\":\"multiply\",\"variable1\":\"cost_conv\",\"variable2\":\"match_result\",\"result_type\":\"numeric\",\"result_value\":\"emission\"}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2389, 2, 165, 'waste_items', 'waste_monitoring_id', 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2390, 2, 165, 'waste_monitorings', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 165}]', 'models.WasteMonitoring', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2391, 2, 165, 'waste_items', 'waste_monitoring_id', 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 165}]', 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2392, 2, 165, 'waste_monitorings', NULL, 'uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WasteMonitoring', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2393, 2, 165, 'waste_items', 'waste_monitoring_id', 'parent_uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2394, 2, 155, 'staffs', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(2395, 2, 155, 'staffs', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"models.Staff\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"start_date\", \"compare_data\": \"staff_id\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[\r\n{\r\n\"type\":\"date_format\",\"date\":\"start_date\"\r\n}\r\n]', 'models.Staff', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2396, 2, 155, 'staffs', NULL, 'end_date', 'Contract End Date', NULL, 'date', 'Contract End Date', 'non_mandatory', 'visible', NULL, '[{\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"default\",\"column\":\"end_date\",\"value\":null},{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.Staff', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2397, 2, 155, 'staffs', NULL, 'department_id', 'Department', NULL, 'dropdown', 'Department', 'template_mandatory', 'visible', 'db.query(models.Department.id,models.Department.name).filter(and_(models.Department.deleted == 0,models.Department.record_status == 1, models.Department.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"department_id\", \"start_date\", \"end_date\"], \"model_name\": \"models.Staff\", \"combination_column\": [\"department_id\", \"start_date\", \"end_date\"]}]', NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', '{\"table_name\": \"departments\", \"select_columns\":\"departments.id as department_id,departments.name as department_name\", \"on_condition\": \"departments.id\", \"where_condition\":\"(departments.deleted = 0 OR departments.deleted IS NULL)AND (departments.record_status = 1 OR departments.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2398, 2, 155, 'staffs', NULL, 'gender_id', 'Gender', NULL, 'dropdown', 'Gender', 'system_mandatory', 'visible', 'db.query(models.Gender.id,models.Gender.name).filter( and_(models.Gender.record_status == 1,models.Gender.deleted == 0,models.Gender.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', '{\"table_name\": \"gender\", \"on_condition\": \"gender.id\", \"select_columns\": \"gender.id as gender_id,gender.name as gender_name\", \"where_condition\": \"(gender.deleted = 0 OR gender.deleted IS NULL) AND (gender.record_status = 1 OR gender.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2399, 2, 155, 'staffs', NULL, 'nationality_id', 'Nationality', NULL, 'dropdown', 'Nationality', 'non_mandatory', 'visible', 'db.query(models.Nationality.id,models.Nationality.name).filter( and_(models.Nationality.record_status == 1,models.Nationality.deleted == 0,models.Nationality.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', '{\"table_name\": \"nationalities\", \"on_condition\": \"nationalities.id\", \"select_columns\": \"nationalities.id as nationality_id,nationalities.name as nationality_name\", \"where_condition\": \"(nationalities.deleted = 0 OR nationalities.deleted IS NULL) AND (nationalities.record_status = 1 OR nationalities.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2400, 2, 155, 'staffs', NULL, 'ethnicity_id', 'Ethnicity', NULL, 'dropdown', 'Ethnicity', 'non_mandatory', 'visible', 'db.query(models.Ethnicity.id,models.Ethnicity.name).filter( and_(models.Ethnicity.record_status == 1,models.Ethnicity.deleted == 0,models.Ethnicity.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', '{\"table_name\": \"ethnicities\", \"on_condition\": \"ethnicities.id\", \"select_columns\": \"ethnicities.id as ethnicity_id,ethnicities.name as ethnicity_name\", \"where_condition\": \"(ethnicities.deleted = 0 OR ethnicities.deleted IS NULL) AND (ethnicities.record_status = 1 OR ethnicities.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2401, 2, 155, 'staffs', NULL, 'hired_locally', 'Hired Locally', NULL, 'dropdown', 'Hired Locally', 'non_mandatory', 'visible', NULL, '[{\"type\": \"list\", \"list_items\": [{\"id\": \"Yes\", \"name\": \"Yes\"}, {\"id\": \"No\", \"name\": \"No\"}], \"error_message\": \"is invalid\", \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2402, 2, 155, 'staffs', NULL, 'nationality_group_id', 'Nationality Group', NULL, 'numeric', 'Nationality Group', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"nationalities\", \"result_type\": \"numeric\", \"match_column\": \"nationality_group_id\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"nationality_id\",\"column\": \"id\",\"identifier\": \"=\"}]}]', 'models.Staff', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2403, 2, 155, 'staffs', NULL, 'contract_end_reason_id', 'Contract End Reason', NULL, 'dropdown', 'Contract End Reason', 'non_mandatory', 'visible', 'db.query(models.ContractEndReason.id,models.ContractEndReason.name).filter( and_(models.ContractEndReason.record_status == 1,models.ContractEndReason.deleted == 0,models.ContractEndReason.subscriber_id == subscriber_id)).all()', '[{\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', '{\"table_name\": \"contract_end_reasons\", \"on_condition\": \"contract_end_reasons.id\", \"select_columns\": \"contract_end_reasons.id as contract_end_reason_id,contract_end_reasons.name as contract_end_reason_name\", \"where_condition\": \"(contract_end_reasons.deleted = 0 OR contract_end_reasons.deleted IS NULL) AND (contract_end_reasons.record_status = 1 OR contract_end_reasons.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2404, 2, 155, 'staffs', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Staff', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2405, 2, 155, 'staffs', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 155}]', 'models.Staff', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2406, 2, 164, 'waste_monitorings', NULL, 'uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WasteMonitoring', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2407, 2, 164, 'waste_items', 'waste_monitoring_id', 'parent_uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WasteItem', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2408, 2, 22, 'water_measurements', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterMeasurement', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(2409, 2, 22, 'water_measurements', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.WaterMeasurement', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2410, 2, 22, 'water_measurements', NULL, 'end_date', 'End Date', NULL, 'date', 'End  Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.WaterMeasurement', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2411, 2, 22, 'water_measurements', NULL, 'consumption', 'Volume of Discharge', NULL, 'numeric', 'Volume', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterMeasurement', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2412, 2, 22, 'water_measurements', NULL, 'volume_unit_id', 'Volume Unit', NULL, 'dropdown', 'Volume Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Volume Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterMeasurement', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as volume_unit_id,units.name as volume_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Volume Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2413, 2, 22, 'water_measurements', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterMeasurement', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2414, 2, 22, 'water_measurements', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"volume_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\"}]', 'models.WaterMeasurement', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2415, 2, 22, 'water_measurements', NULL, 'type', 'Type', NULL, 'text', 'Type', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\r\n \"type\": \"default\",\r\n \"value\": \"WaterDischarged\" \r\n}]', 'models.WaterMeasurement', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2416, 2, 22, 'water_measurements', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 22}]', 'models.WaterMeasurement', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2417, 2, 166, 'gj_conversion_rates', NULL, 'gj_conversion_rate', 'GJ Conversion Rate', NULL, 'numeric', 'GJ Conversion Rate', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"},{\"type\": \"unique\", \"error_message\": \"form\'s duplicate record\", \"column_name\": [\"gj_conversion_rate\",\"energy_consumption_type\",\"corresponding_energy_unit_id\",\"total_consumption_of_energy_unit\"], \"model_name\": \"models.GjConversionRate\", \"combination_column\": [\"gj_conversion_rate\",\"energy_consumption_type\",\"corresponding_energy_unit_id\",\"total_consumption_of_energy_unit\"], \"translation_key\": \"MUST_BE_UNIQUE\"},{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\"}]', NULL, NULL, 'models.GjConversionRate', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2418, 2, 166, 'gj_conversion_rates', NULL, 'energy_consumption_type', 'Energy Consumption Type', NULL, 'dropdown', 'Energy Consumption Type', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [\n{\"id\": \"Electricity\", \"name\": \"Electricity\"},{\"id\": \"Fuel\", \"name\": \"Fuel\"},{\"id\": \"Gas\", \"name\": \"Gas\"},{\"id\": \"Steam\", \"name\": \"Steam\"}], \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.GjConversionRate', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2419, 2, 166, 'gj_conversion_rates', NULL, 'corresponding_energy_unit_id', 'Corresponding Energy Consumption Type', NULL, 'dropdown', 'Corresponding Energy Consumption Type', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type.in_([\"Electricity Units\", \"Fuel Units\", \"Gas Units\",\"Temp Units\"]), models.Unit.deleted == 0, models.Unit.record_status == 1, or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.GjConversionRate', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as corresponding_energy_unit_id,unit.name as corresponding_energy_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"(unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2420, 2, 166, 'gj_conversion_rates', NULL, 'total_consumption_of_energy_unit', 'Total Consumption Of Energy Unit', NULL, 'text', 'Total Consumption Of Energy Unit', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be alphabets\", \"pattern\": \"^[A-Za-z]*$\", \"translation_key\": \"MUST_BE_ALPHABETS\"},{\"type\": \"default\", \"value\": \"GJ\"},{\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"gj_conversion_rate\",\"energy_consumption_type\",\"corresponding_energy_unit_id\",\"total_consumption_of_energy_unit\"], \"model_name\": \"models.GjConversionRate\", \"combination_column\": [\"gj_conversion_rate\",\"energy_consumption_type\",\"corresponding_energy_unit_id\",\"total_consumption_of_energy_unit\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.GjConversionRate', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2421, 2, 38, 'waste_items', 'waste_monitoring_id', 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 38}]', 'models.WasteItem', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, NULL),
(2422, 2, 165, 'waste_items', 'waste_monitoring_id', 'waste_marpol_disposal_id', 'Waste Marpol Disposal', NULL, 'dropdown', 'Waste Marpol Disposal', 'non_mandatory', 'visible', 'db.query(models.WasteMarpolDisposal.id,models.WasteMarpolDisposal.name).filter(and_(models.WasteMarpolDisposal.subscriber_id == subscriber_id, models.WasteMarpolDisposal.deleted == 0, models.WasteMarpolDisposal.record_status == 1)).order_by(models.WasteMarpolDisposal.sort_order).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WasteItem', 1, NULL, '{\"table_name\": \"waste_marpol_disposals\", \"select_columns\":\"waste_marpol_disposals.id as waste_marpol_disposal_id,waste_marpol_disposals.name as waste_marpol_disposal_name\", \"on_condition\": \"waste_marpol_disposals.id\", \"where_condition\":\"(waste_marpol_disposals.deleted = 0 OR waste_marpol_disposals.deleted IS NULL)AND (waste_marpol_disposals.record_status = 1 OR waste_marpol_disposals.record_status IS NULL)\"}', 0, 0, 1, 0, 1),
(2423, 2, 159, 'currencies_exchange_rates', NULL, 'month_year', 'Month Year', NULL, 'date', 'Month Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"month_year\", \"base_currency_id\", \"comparative_currency_id\"], \"model_name\": \"models.CurrenciesExchangeRate\", \"combination_column\": [\"month_year\", \"base_currency_id\", \"comparative_currency_id\"], \"translation_key\": \"MUST_BE_UNIQUE\"}, {\"format\": \"MMM YYYY\"}]', NULL, NULL, 'models.CurrenciesExchangeRate', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2424, 2, 159, 'currencies_exchange_rates', NULL, 'month', 'Month Year', NULL, 'text', 'Month Year', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"column\":\"month\"}]', 'models.CurrenciesExchangeRate', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2425, 2, 159, 'currencies_exchange_rates', NULL, 'year', 'Month Year', NULL, 'text', 'Month Year', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"column\":\"year\"}]', 'models.CurrenciesExchangeRate', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2426, 2, 159, 'currencies_exchange_rates', NULL, 'base_currency_id', 'Base Currency', NULL, 'dropdown', 'Base Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.CurrenciesExchangeRate', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as base_currency_id,currencies.name as base_currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2427, 2, 159, 'currencies_exchange_rates', NULL, 'comparative_currency_id', 'Comparative Currency', NULL, 'dropdown', 'Comparative Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"date_range\", \"error_message\": \"should not be same as base currency\", \"model_name\": \"null\", \"first_date\": \"base_currency_id\", \"second_date\": \"comparative_currency_id\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"not_equal\", \"translation_key\": \"INVALID_RANGE\"}, {\"type\": \"required\", \"error_message\": \"required\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.CurrenciesExchangeRate', 1, 'docs#/data-entry', '{\"table_name\": \"currencies as currency\", \"select_columns\":\"currency.id as comparative_currency_id,currency.name as comparative_currency_name\", \"on_condition\": \"currency.id\", \"where_condition\":\"(currency.deleted = 0 OR currency.deleted IS NULL) AND (currency.record_status = 1 OR currency.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2428, 2, 159, 'currencies_exchange_rates', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.CurrenciesExchangeRate', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2429, 2, 159, 'currencies_exchange_rates', NULL, 'link', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, NULL, '^((http|https)://)?[a-z0-9]+([-.]{1}[a-z0-9]+).[a-z]{2,5}(:[0-9]{1,5})?(/[^?#])?(?[^#])?(#.)?$', NULL, 'models.CurrenciesExchangeRate', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2430, 2, 159, 'currencies_exchange_rates', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.CurrenciesExchangeRate', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2431, 2, 159, 'currencies_exchange_rates', NULL, 'update_disabled', 'update_disabled', NULL, 'text', 'update_disabled', 'template_mandatory', 'system_invisible', NULL, NULL, NULL, NULL, 'models.CurrenciesExchangeRate', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2432, 2, 159, 'currencies_exchange_rates', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'template_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 159}]', 'models.CurrenciesExchangeRate', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2434, 2, 166, 'gj_conversion_rates', NULL, 'form_id', 'Form', NULL, 'text', 'Form', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\", \"value\": 166}]', 'models.GjConversionRate', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(2435, 2, 171, 'ethnicities', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\"],\"model_name\":\"models.Ethnicity\",\"combination_column\":[\"name\"]}]', NULL, NULL, 'models.Ethnicity', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2436, 2, 171, 'ethnicities', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 171}]', 'models.Ethnicity', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2447, 2, 172, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\",\"error_message\": \"is required\",\"translation_key\": \"IS_REQUIRED\"},{\"type\": \"year\",\"start_year\":\"-3\",\"end_year\": \"+4\",\"error_message\": \"should be in the range\",\"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2448, 2, 172, 'emission_factors', NULL, 'vehicle_type_id', 'Vehicle Type', NULL, 'dropdown', 'Vehicle Type', 'system_mandatory', 'visible', 'db.query(models.VehicleType.id, models.VehicleType.name).filter(and_(models.VehicleType.deleted == 0, models.VehicleType.record_status == 1, or_(models.VehicleType.subscriber_id == subscriber_id, models.VehicleType.subscriber_id == 1))).order_by(models.VehicleType.sort_order).all()', '[{\"type\": \"required\",\"error_message\": \"is required\",\"translation_key\": \"IS_REQUIRED\"},{\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\",\"vehicle_type_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\",\"vehicle_type_id\"], \"default_filters\": [{\"type\": \"RoadFreightSOxEmissionFactor\"}]}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"vehicle_types\", \"select_columns\":\"vehicle_types.id as vehicle_type_id,vehicle_types.name as vehicle_type_name\", \"on_condition\": \"vehicle_types.id\", \"where_condition\":\"(vehicle_types.deleted = 0 OR vehicle_types.deleted IS NULL)AND (vehicle_types.record_status = 1 OR vehicle_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2449, 2, 172, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2450, 2, 172, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2451, 2, 172, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\":\"required\",\"error_message\":\"required\",\"translation_key\": \"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2452, 2, 172, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_( models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\":\"required\",\"error_message\":\"required\",\"translation_key\": \"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Distance Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2453, 2, 172, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2454, 2, 172, 'emission_factors', NULL, 'sox', 'SOx', NULL, 'text', 'SOx', 'non_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2455, 2, 172, 'emission_factors', NULL, 'type', 'RoadFreightSOxEmissionFactor', NULL, 'text', 'RoadFreightSOxEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\":\"type\",\"value\": \"RoadFreightSOxEmissionFactor\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2456, 2, 172, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 172}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2457, 2, 173, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\",\"error_message\": \"is required\",\"translation_key\": \"IS_REQUIRED\"},{\"type\": \"year\",\"start_year\":\"-3\",\"end_year\": \"+4\",\"error_message\": \"should be in the range\",\"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2458, 2, 173, 'emission_factors', NULL, 'fuel_type_id', 'Fuel Type', NULL, 'dropdown', 'Fuel Type', 'system_mandatory', 'visible', 'db.query(models.FuelType.id, models.FuelType.name).filter(and_(models.FuelType.deleted == 0, models.FuelType.record_status == 1, models.FuelType.unit_type == \"Volume Units\", or_(models.FuelType.subscriber_id == subscriber_id, models.FuelType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"is required\",\"translation_key\": \"IS_REQUIRED\"},{\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\",\"fuel_type_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\",\"fuel_type_id\"], \"default_filters\": [{\"type\": \"VolumetricFuelSOxEmissionFactor\"}]}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"fuel_types\", \"select_columns\":\"fuel_types.id as fuel_type_id,fuel_types.name as fuel_type_name\", \"on_condition\": \"fuel_types.id\", \"where_condition\":\"(fuel_types.deleted = 0 OR fuel_types.deleted IS NULL)AND (fuel_types.record_status = 1 OR fuel_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2459, 2, 173, 'emission_factors', NULL, 'vehicle_type_id', 'Vehicle Type', NULL, 'dropdown', 'Vehicle Type', 'system_mandatory', 'visible', 'db.query(models.VehicleType.id, models.VehicleType.name).filter(and_(models.VehicleType.deleted == 0, models.VehicleType.record_status == 1, or_(models.VehicleType.subscriber_id == subscriber_id, models.VehicleType.subscriber_id == 1))).order_by(models.VehicleType.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\",\"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"vehicle_types\", \"select_columns\":\"vehicle_types.id as vehicle_type_id,vehicle_types.name as vehicle_type_name\", \"on_condition\": \"vehicle_types.id\", \"where_condition\":\"(vehicle_types.deleted = 0 OR vehicle_types.deleted IS NULL)AND (vehicle_types.record_status = 1 OR vehicle_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2460, 2, 173, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2461, 2, 173, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2462, 2, 173, 'emission_factors', NULL, 'emission_unit_id', 'Emission Unit', NULL, 'dropdown', 'Emission Unit', 'non_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2463, 2, 173, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption Unit', NULL, 'dropdown', 'Consumption Unit', 'non_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Volume Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Volume Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2464, 2, 173, 'emission_factors', NULL, 'sox', 'SOx', NULL, 'text', 'SOx', 'non_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2465, 2, 173, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2466, 2, 173, 'emission_factors', NULL, 'type', 'VolumetricFuelSOxEmissionFactor', NULL, 'text', 'VolumetricFuelSOxEmissionFactor', 'template_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\":\"type\",\"value\": \"VolumetricFuelSOxEmissionFactor\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2467, 2, 173, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 173}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2468, 2, 174, 'coverage_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\",\"coverage_category_id\"], \"model_name\": \"models.CoverageType\", \"combination_column\": [\"name\",\"coverage_category_id\"]}]', NULL, NULL, 'models.CoverageType', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2469, 2, 174, 'coverage_types', NULL, 'coverage_category_id', 'Coverage Type', NULL, 'dropdown', 'Coverage Type', 'system_mandatory', 'visible', 'db.query(models.CoverageCategory.id,models.CoverageCategory.name).filter( and_(models.CoverageCategory.record_status == 1,models.CoverageCategory.deleted == 0,models.CoverageCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^[0-9]+$\"}]', NULL, NULL, 'models.CoverageType', 1, NULL, '{\"table_name\": \"coverage_categories\", \"select_columns\":\"coverage_categories.id as coverage_category_id,coverage_categories.name as coverage_category_name\", \"on_condition\": \"coverage_categories.id\", \"where_condition\":\"(coverage_categories.deleted = 0 OR coverage_categories.deleted IS NULL) AND (coverage_categories.record_status = 1 OR coverage_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2470, 2, 174, 'coverage_types', NULL, 'domain_id', 'domain_id', NULL, 'numeric', 'domain_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 1}]', 'models.CoverageType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2471, 2, 174, 'coverage_types', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 174}]', 'models.CoverageType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2472, 2, 175, 'training_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\",\"training_category_id\"], \"model_name\": \"models.TrainingType\", \"combination_column\": [\"name\",\"training_category_id\"]}]', NULL, NULL, 'models.TrainingType', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2473, 2, 175, 'training_types', NULL, 'training_category_id', 'Training Type', NULL, 'dropdown', 'Training Type', 'system_mandatory', 'visible', 'db.query(models.TrainingCategory.id,models.TrainingCategory.name).filter( and_(models.TrainingCategory.record_status == 1,models.TrainingCategory.deleted == 0,models.TrainingCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^[0-9]+$\"}]', NULL, NULL, 'models.TrainingType', 1, NULL, '{\"table_name\": \"training_categories\", \"select_columns\":\"training_categories.id as training_category_id,training_categories.name as training_category_name\", \"on_condition\": \"training_categories.id\", \"where_condition\":\"(training_categories.deleted = 0 OR training_categories.deleted IS NULL) AND (training_categories.record_status = 1 OR training_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2474, 2, 175, 'training_types', NULL, 'domain_id', 'domain_id', NULL, 'numeric', 'domain_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 1}]', 'models.TrainingType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2475, 2, 175, 'training_types', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 175}]', 'models.TrainingType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2476, 2, 176, 'leave_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\",\"leave_category_id\"], \"model_name\": \"models.LeaveType\", \"combination_column\": [\"name\",\"leave_category_id\"]}]', NULL, NULL, 'models.LeaveType', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2477, 2, 176, 'leave_types', NULL, 'leave_category_id', 'Injury & Lost Day Type', NULL, 'dropdown', 'Injury & Lost Day Type', 'system_mandatory', 'visible', 'db.query(models.LeaveCategory.id,models.LeaveCategory.name).filter( and_(models.LeaveCategory.record_status == 1,models.LeaveCategory.deleted == 0,models.LeaveCategory.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^[0-9]+$\"}]', NULL, NULL, 'models.LeaveType', 1, NULL, '{\"table_name\": \"leave_categories\", \"select_columns\":\"leave_categories.id as leave_category_id,leave_categories.name as leave_category_name\", \"on_condition\": \"leave_categories.id\", \"where_condition\":\"(leave_categories.deleted = 0 OR leave_categories.deleted IS NULL) AND (leave_categories.record_status = 1 OR leave_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2478, 2, 176, 'leave_types', NULL, 'default_nb_lost_days', 'Default no. of lost days', NULL, 'numeric', 'Default no. of lost days', 'non_mandatory', 'visible', NULL, '[{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^[0-9]+$\"}]', NULL, '[{\"type\": \"default\",\"value\": 0}]', 'models.LeaveType', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2479, 2, 176, 'leave_types', NULL, 'domain_id', 'domain_id', NULL, 'numeric', 'domain_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 1}]', 'models.LeaveType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2480, 2, 176, 'leave_types', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 176}]', 'models.LeaveType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2481, 2, 177, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\",\"error_message\": \"is required\",\"translation_key\": \"IS_REQUIRED\"},{\"type\": \"year\",\"start_year\":\"-3\",\"end_year\": \"+4\",\"error_message\": \"should be in the range\",\"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2482, 2, 177, 'emission_factors', NULL, 'vehicle_type_id', 'Vehicle Type', NULL, 'dropdown', 'Vehicle Type', 'system_mandatory', 'visible', 'db.query(models.VehicleType.id, models.VehicleType.name).filter(and_(models.VehicleType.deleted == 0, models.VehicleType.record_status == 1, or_(models.VehicleType.subscriber_id == subscriber_id, models.VehicleType.subscriber_id == 1))).order_by(models.VehicleType.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\",\"translation_key\": \"IS_REQUIRED\"},{\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\",\"vehicle_type_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\",\"vehicle_type_id\"], \"default_filters\": [{\"type\": \"RoadFreightPMEmissionFactor\"}]}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"vehicle_types\", \"select_columns\":\"vehicle_types.id as vehicle_type_id,vehicle_types.name as vehicle_type_name\", \"on_condition\": \"vehicle_types.id\", \"where_condition\":\"(vehicle_types.deleted = 0 OR vehicle_types.deleted IS NULL)AND (vehicle_types.record_status = 1 OR vehicle_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2483, 2, 177, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2484, 2, 177, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2485, 2, 177, 'emission_factors', NULL, 'emission_unit_id', 'Emission Unit', NULL, 'dropdown', 'Emission Unit', 'non_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2486, 2, 177, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption Unit', NULL, 'dropdown', 'Consumption Unit', 'non_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Distance Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2487, 2, 177, 'emission_factors', NULL, 'pm', 'PM', NULL, 'numeric', 'PM', 'non_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2488, 2, 177, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2489, 2, 177, 'emission_factors', NULL, 'type', 'RoadFreightPMEmissionFactor', NULL, 'text', 'RoadFreightPMEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\":\"type\",\"value\": \"RoadFreightPMEmissionFactor\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2490, 2, 177, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 177}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2491, 2, 178, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\",\"error_message\": \"is required\",\"translation_key\": \"IS_REQUIRED\"},{\"type\": \"year\",\"start_year\":\"-3\",\"end_year\": \"+4\",\"error_message\": \"should be in the range\",\"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2492, 2, 178, 'emission_factors', NULL, 'fuel_type_id', 'Fuel Type', NULL, 'dropdown', 'Fuel Type', 'system_mandatory', 'visible', 'db.query(models.FuelType.id, models.FuelType.name).filter(and_(models.FuelType.deleted == 0, models.FuelType.record_status == 1, models.FuelType.unit_type == \"Volume Units\", or_(models.FuelType.subscriber_id == subscriber_id, models.FuelType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"is required\",\"translation_key\": \"IS_REQUIRED\"},{\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\", \"fuel_type_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\", \"fuel_type_id\"], \"default_filters\": [{\"type\": \"VolumetricFuelPMEmissionFactor\"}]}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"fuel_types\", \"select_columns\":\"fuel_types.id as fuel_type_id,fuel_types.name as fuel_type_name\", \"on_condition\": \"fuel_types.id\", \"where_condition\":\"(fuel_types.deleted = 0 OR fuel_types.deleted IS NULL)AND (fuel_types.record_status = 1 OR fuel_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2493, 2, 178, 'emission_factors', NULL, 'vehicle_type_id', 'Vehicle Type', NULL, 'dropdown', 'Vehicle Type', 'system_mandatory', 'visible', 'db.query(models.VehicleType.id, models.VehicleType.name).filter(and_(models.VehicleType.deleted == 0, models.VehicleType.record_status == 1, or_(models.VehicleType.subscriber_id == subscriber_id, models.VehicleType.subscriber_id == 1))).order_by(models.VehicleType.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\",\"translation_key\": \"IS_REQUIRED\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"vehicle_types\", \"select_columns\":\"vehicle_types.id as vehicle_type_id,vehicle_types.name as vehicle_type_name\", \"on_condition\": \"vehicle_types.id\", \"where_condition\":\"(vehicle_types.deleted = 0 OR vehicle_types.deleted IS NULL)AND (vehicle_types.record_status = 1 OR vehicle_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2494, 2, 178, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2495, 2, 178, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2496, 2, 178, 'emission_factors', NULL, 'emission_unit_id', 'Emission Unit', NULL, 'dropdown', 'Emission Unit', 'non_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2497, 2, 178, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption Unit', NULL, 'dropdown', 'Consumption Unit', 'non_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Volume Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Volume Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2498, 2, 178, 'emission_factors', NULL, 'pm', 'PM', NULL, 'numeric', 'PM', 'non_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2499, 2, 178, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2500, 2, 178, 'emission_factors', NULL, 'type', 'VolumetricFuelPMEmissionFactor', NULL, 'text', 'VolumetricFuelPMEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\":\"type\",\"value\": \"VolumetricFuelPMEmissionFactor\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2501, 2, 178, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 178}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2502, 2, 179, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\",\"error_message\": \"is required\",\"translation_key\": \"IS_REQUIRED\"},{\"type\": \"year\",\"start_year\":\"-3\",\"end_year\": \"+4\",\"error_message\": \"should be in the range\",\"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2503, 2, 179, 'emission_factors', NULL, 'vehicle_type_id', 'Vehicle Type', NULL, 'dropdown', 'Vehicle Type', 'system_mandatory', 'visible', 'db.query(models.VehicleType.id, models.VehicleType.name).filter(and_(models.VehicleType.deleted == 0, models.VehicleType.record_status == 1, or_(models.VehicleType.subscriber_id == subscriber_id, models.VehicleType.subscriber_id == 1))).order_by(models.VehicleType.sort_order).all()', '[{\"type\": \"required\",\"error_message\": \"is required\",\"translation_key\": \"IS_REQUIRED\"},{\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"year\",\"vehicle_type_id\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"year\",\"vehicle_type_id\"], \"default_filters\": [{\"type\": \"RoadFreightNOxEmissionFactor\"}]}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"vehicle_types\", \"select_columns\":\"vehicle_types.id as vehicle_type_id,vehicle_types.name as vehicle_type_name\", \"on_condition\": \"vehicle_types.id\", \"where_condition\":\"(vehicle_types.deleted = 0 OR vehicle_types.deleted IS NULL)AND (vehicle_types.record_status = 1 OR vehicle_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2504, 2, 179, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2505, 2, 179, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2506, 2, 179, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\":\"required\",\"error_message\":\"required\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2507, 2, 179, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_( models.Unit.type == \"Distance Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\":\"required\",\"error_message\":\"required\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Distance Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2508, 2, 179, 'emission_factors', NULL, 'nox', 'NOx', NULL, 'text', 'NOx', 'non_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"decimal_points\": \"2\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2509, 2, 179, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2510, 2, 179, 'emission_factors', NULL, 'type', 'RoadFreightNOxEmissionFactor', NULL, 'text', 'RoadFreightNOxEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\":\"type\",\"value\": \"RoadFreightNOxEmissionFactor\"}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2511, 2, 179, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 179}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2512, 2, 180, 'third_parties', NULL, 'type', 'Type', NULL, 'dropdown', 'Type', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"value\":\"provider\"}]', 'models.ThirdParty', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2513, 2, 180, 'third_parties', NULL, 'sub_type', 'Type', NULL, 'dropdown', 'Type', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"value\":\"TrainCarrier\"}]', 'models.ThirdParty', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2514, 2, 180, 'third_parties', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.ThirdParty\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.ThirdParty', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2516, 2, 180, 'third_parties', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'system_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 180}]', 'models.ThirdParty', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2517, 2, 181, 'third_parties', NULL, 'type', 'Type', NULL, 'dropdown', 'Type', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"value\":\"provider\"}]', 'models.ThirdParty', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2518, 2, 181, 'third_parties', NULL, 'sub_type', 'Type', NULL, 'dropdown', 'Type', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"value\":\"RoadCarrier\"}]', 'models.ThirdParty', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2519, 2, 181, 'third_parties', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\", \"sub_type\"], \"model_name\": \"models.ThirdParty\", \"combination_column\": [\"name\", \"sub_type\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.ThirdParty', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2520, 2, 181, 'third_parties', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.ThirdParty', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2521, 2, 181, 'third_parties', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'system_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 181}]', 'models.ThirdParty', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2522, 2, 182, 'third_parties', NULL, 'type', 'Type', NULL, 'dropdown', 'Type', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"value\":\"provider\"}]', 'models.ThirdParty', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2523, 2, 182, 'third_parties', NULL, 'sub_type', 'Type', NULL, 'dropdown', 'Type', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"value\":\"Carrier\"}]', 'models.ThirdParty', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2524, 2, 182, 'third_parties', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\", \"sub_type\"], \"model_name\": \"models.ThirdParty\", \"combination_column\": [\"name\", \"sub_type\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.ThirdParty', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2525, 2, 182, 'third_parties', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.ThirdParty', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2526, 2, 182, 'third_parties', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'system_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 182}]', 'models.ThirdParty', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2531, 2, 183, 'salary_ranges', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\"],\"model_name\":\"models.SalaryRange\",\"combination_column\":[\"name\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.SalaryRange', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2532, 2, 183, 'salary_ranges', NULL, 'domain_id', 'Domain', NULL, 'numeric', 'Domain', 'system_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\":\"default\",\"column\":\"domain_id\",\"value\":1}]', 'models.SalaryRange', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2533, 2, 183, 'salary_ranges', NULL, 'upper_bound', 'Upper Bound', NULL, 'numeric', 'Upper Bound', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SalaryRange', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2534, 2, 183, 'salary_ranges', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 183}]', 'models.SalaryRange', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2535, 2, 184, 'train_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.TrainType\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.TrainType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2536, 2, 184, 'train_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'system_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 184}]', 'models.TrainType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2537, 2, 185, 'load_factors', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.LoadFactor\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.LoadFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2538, 2, 185, 'load_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'system_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 185}]', 'models.LoadFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2539, 2, 186, 'vehicle_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.vehicle_types\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.VehicleType', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2540, 2, 186, 'vehicle_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'system_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 186}]', 'models.VehicleType', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2541, 2, 187, 'tradelanes', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.Tradelane\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Tradelane', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2542, 2, 187, 'tradelanes', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.Tradelane', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2543, 2, 187, 'tradelanes', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'system_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 187}]', 'models.Tradelane', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2546, 2, 189, 'ports', NULL, 'name', 'Ocean Port Name', NULL, 'text', 'Ocean Port Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.Port\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Port', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2547, 2, 189, 'ports', NULL, 'code', 'Ocean Port Code', NULL, 'text', 'Ocean Port Code', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"code\"], \"model_name\": \"models.Port\", \"combination_column\": [\"code\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Port', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2548, 2, 189, 'ports', NULL, 'country_id', 'Country', NULL, 'dropdown', 'Country', 'system_mandatory', 'visible', 'db.query(models.Country.id, models.Country.name).filter(and_(models.Country.deleted == 0, models.Country.record_status == 1, or_(models.Country.subscriber_id == subscriber_id, models.Country.subscriber_id == 1))).order_by(models.Country.sort_order).all()', '[{\"type\":\"required\",\"error_message\":\"required\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^\\\\d+(\\\\.\\\\d+)?$\"}]', NULL, NULL, 'models.Port', 1, 'docs#/data-entry', '{\"table_name\": \"countries\", \"select_columns\":\"countries.id as country_id,countries.name as country_name\", \"on_condition\": \"countries.id\", \"where_condition\":\"(countries.deleted = 0 OR countries.deleted IS NULL)AND (countries.record_status = 1 OR countries.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2549, 2, 189, 'ports', NULL, 'trade_region_id', 'Trade Region', NULL, 'dropdown', 'Trade Region', 'system_mandatory', 'visible', 'db.query(models.TradeRegion.id,models.TradeRegion.name).filter(and_(models.TradeRegion.subscriber_id == subscriber_id, models.TradeRegion.deleted == 0, models.TradeRegion.record_status == 1)).order_by(models.TradeRegion.sort_order).all()', '[{\"type\":\"required\",\"error_message\":\"required\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^\\\\d+(\\\\.\\\\d+)?$\"}]', NULL, NULL, 'models.Port', 1, 'docs#/data-entry', '{\"table_name\": \"trade_regions\", \"select_columns\":\"trade_regions.id as trade_region_id,trade_regions.name as trade_region_name\", \"on_condition\": \"trade_regions.id\", \"where_condition\":\"(trade_regions.deleted = 0 OR trade_regions.deleted IS NULL)AND (trade_regions.record_status = 1 OR trade_regions.record_status IS NULL)\"}', 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(2550, 2, 189, 'ports', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'system_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 189}]', 'models.Port', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2551, 2, 190, 'airlines', NULL, 'name', 'AirLine Carrier Name', NULL, 'text', 'AirLine Carrier Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\"],\"model_name\":\"models.Airline\",\"combination_column\":[\"name\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Airline', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2552, 2, 190, 'airlines', NULL, 'iata', 'IATA', NULL, 'text', 'IATA', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"iata\"],\"model_name\":\"models.Airline\",\"combination_column\":[\"iata\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Airline', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2553, 2, 190, 'airlines', NULL, 'country_id', 'Country', NULL, 'dropdown', 'Country', 'system_mandatory', 'visible', 'db.query(models.Country.id, models.Country.name).filter(and_(models.Country.deleted == 0, models.Country.record_status == 1, or_(models.Country.subscriber_id == subscriber_id, models.Country.subscriber_id == 1))).order_by(models.Country.sort_order).all()', '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Airline', 1, NULL, '{\"table_name\": \"countries\", \"select_columns\":\"countries.id as country_id,countries.name as country_name\", \"on_condition\": \"countries.id\", \"where_condition\":\"(countries.deleted = 0 OR countries.deleted IS NULL)AND (countries.record_status = 1 OR countries.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2554, 2, 190, 'airlines', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 190}]', 'models.Airline', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2555, 2, 191, 'airports', NULL, 'name', 'Airport Name', NULL, 'text', 'Airport Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\"],\"model_name\":\"models.Airport\",\"combination_column\":[\"name\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Airport', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2556, 2, 191, 'airports', NULL, 'iata', 'IATA', NULL, 'text', 'IATA', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"iata\"],\"model_name\":\"models.Airport\",\"combination_column\":[\"iata\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Airport', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2557, 2, 191, 'airports', NULL, 'city', 'City', NULL, 'text', 'City', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Airport', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2558, 2, 191, 'airports', NULL, 'country_id', 'Country', NULL, 'dropdown', 'Country', 'system_mandatory', 'visible', 'db.query(models.Country.id, models.Country.name).filter(and_(models.Country.deleted == 0, models.Country.record_status == 1, or_(models.Country.subscriber_id == subscriber_id, models.Country.subscriber_id == 1))).order_by(models.Country.sort_order).all()', '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Airport', 1, NULL, '{\"table_name\": \"countries\", \"select_columns\":\"countries.id as country_id,countries.name as country_name\", \"on_condition\": \"countries.id\", \"where_condition\":\"(countries.deleted = 0 OR countries.deleted IS NULL)AND (countries.record_status = 1 OR countries.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2559, 2, 191, 'airports', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 191}]', 'models.Airport', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2560, 2, 192, 'product_categories', NULL, 'name', 'Product Category', NULL, 'text', 'Product Category', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\"],\"model_name\":\"models.ProductCategory\",\"combination_column\":[\"name\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.ProductCategory', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2561, 2, 192, 'product_categories', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.ProductCategory', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2562, 2, 192, 'product_categories', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 192}]', 'models.ProductCategory', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2566, 2, 194, 'nationalities', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\",\"nationality_group_id\"],\"model_name\":\"models.Nationality\",\"combination_column\":[\"name\",\"nationality_group_id\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Nationality', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2567, 2, 194, 'nationalities', NULL, 'nationality_group_id', 'Nationality Group', NULL, 'dropdown', 'Nationality Group', 'system_mandatory', 'visible', 'db.query(models.NationalityGroup.id,models.NationalityGroup.name).filter( and_(models.NationalityGroup.record_status == 1,models.NationalityGroup.deleted == 0,models.NationalityGroup.subscriber_id == subscriber_id)).all()', '[{\"type\":\"required\",\"error_message\":\"required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.Nationality', 1, NULL, '{\"table_name\": \"nationality_groups\", \"select_columns\":\"nationality_groups.id as nationality_group_id,nationality_groups.name as nationality_group_name\", \"on_condition\": \"nationality_groups.id\", \"where_condition\":\"(nationality_groups.deleted = 0 OR nationality_groups.deleted IS NULL)AND (nationality_groups.record_status = 1 OR nationality_groups.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2568, 2, 194, 'nationalities', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\":\"form_id\",\"value\": 194}]', 'models.Nationality', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2571, 2, 196, 'nationality_groups', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\"],\"model_name\":\"models.NationalityGroup\",\"combination_column\":[\"name\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.NationalityGroup', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2572, 2, 196, 'nationality_groups', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\":\"form_id\",\"value\": 196}]', 'models.NationalityGroup', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2573, 2, 197, 'contract_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\"],\"model_name\":\"models.ContractType\",\"combination_column\":[\"name\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.ContractType', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2574, 2, 197, 'contract_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\":\"form_id\",\"value\": 197}]', 'models.ContractType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2575, 2, 198, 'committee_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\",\"committee_category_id\"],\"model_name\":\"models.CommitteeType\",\"combination_column\":[\"name\",\"committee_category_id\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.CommitteeType', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2576, 2, 198, 'committee_types', NULL, 'committee_category_id', 'Committee Type', NULL, 'dropdown', 'Committee Type', 'system_mandatory', 'visible', 'db.query(models.CommitteeCategory.id,models.CommitteeCategory.name).filter(and_(models.CommitteeCategory.deleted == 0, models.CommitteeCategory.record_status == 1, models.CommitteeCategory.subscriber_id == subscriber_id)).all()', '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.CommitteeType', 1, NULL, '{\"table_name\": \"committee_categories\", \"select_columns\":\"committee_categories.id as committee_category_id,committee_categories.name as committee_category_name\", \"on_condition\": \"committee_categories.id\", \"where_condition\":\"(committee_categories.deleted = 0 OR committee_categories.deleted IS NULL)AND (committee_categories.record_status = 1 OR committee_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2577, 2, 198, 'committee_types', NULL, 'domain_id', 'Domain', NULL, 'numeric', 'Domain', 'system_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\":\"default\",\"column\":\"domain_id\",\"value\":1}]', 'models.CommitteeType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2578, 2, 198, 'committee_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 198}]', 'models.CommitteeType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2579, 2, 199, 'list_of_values', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\",\"type\"],\"model_name\":\"models.ListOfValues\",\"combination_column\":[\"name\",\"type\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.ListOfValues', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2580, 2, 199, 'list_of_values', NULL, 'type', 'Type', NULL, 'dropdown', 'Type', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\": \"list\",\"error_message\": \"is invalid\",\"list_items\": [{\"id\":\"MetricType\",\"name\":\"MetricType\"},{\"id\":\"HaulType\",\"name\":\"HaulType\"}]}]', NULL, NULL, 'models.ListOfValues', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2581, 2, 199, 'list_of_values', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 199}]', 'models.ListOfValues', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2582, 2, 200, 'licenses', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[\r\n  {\r\n    \"type\": \"required\",\r\n    \"error_message\": \"is required\"\r\n  },\r\n  {\r\n    \"type\": \"regex\",\r\n    \"error_message\": \"can contain any characters except for repeated single special characters and should not exceed 100 characters\",\r\n    \"pattern\": \"^(?!^[!@#$%^&*()=_+\\\\[\\\\]{}|;\':\\\",./<>?`~]+$)(?!^.*([!@#$%^&*()=_+\\\\[\\\\]{}|;\':\\\",./<>?`~])\\\\1{4}).{1,100}$\"\r\n  },\r\n  {\r\n    \"type\": \"unique\",\r\n    \"error_message\": \"must be unique\",\r\n    \"column_name\": [\"name\"],\r\n    \"model_name\": \"models.License\",\r\n    \"combination_column\": [\"name\"]\r\n  }\r\n]\r\n', NULL, NULL, 'models.License', 1, NULL, NULL, 0, 0, 1, 0, NULL),
(2583, 2, 200, 'licenses', NULL, 'form_id', 'Form Id', NULL, 'text', 'Form Id', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 200}]', 'models.License', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2584, 2, 201, 'subscribers', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[\r\n  {\r\n    \"type\": \"required\",\r\n    \"error_message\": \"is required\"\r\n  },\r\n  {\r\n    \"type\": \"regex\",\r\n    \"error_message\": \"can contain any characters except for repeated single special characters and should not exceed 100 characters\",\r\n    \"pattern\": \"^(?!^[!@#$%^&*()=_+\\\\[\\\\]{}|;\':\\\",./<>?`~]+$)(?!^.*([!@#$%^&*()=_+\\\\[\\\\]{}|;\':\\\",./<>?`~])\\\\1{4}).{1,100}$\"\r\n  },\r\n  {\r\n    \"type\": \"unique\",\r\n    \"error_message\": \"must be unique\",\r\n    \"column_name\": [\"name\"],\r\n    \"model_name\": \"models.Subscriber\",\r\n    \"combination_column\": [\"name\"]\r\n  }\r\n]\r\n', NULL, NULL, 'models.Subscriber', 1, NULL, NULL, 0, 0, 1, 0, NULL),
(2585, 2, 201, 'subscribers', NULL, 'first_name', 'First Name', NULL, 'text', 'First Name', 'system_mandatory', 'visible', NULL, '[\r\n  {\r\n    \"type\": \"required\",\r\n    \"error_message\": \"is required\"\r\n  },\r\n  {\r\n    \"type\": \"regex\",\r\n    \"error_message\": \"can contain any characters except for repeated single special characters and should not exceed 100 characters\",\r\n    \"pattern\": \"^(?!^[!@#$%^&*()=_+\\\\[\\\\]{}|;\':\\\",./<>?`~]+$)(?!^.*([!@#$%^&*()=_+\\\\[\\\\]{}|;\':\\\",./<>?`~])\\\\1{4}).{1,100}$\"\r\n  }\r\n]\r\n', NULL, NULL, 'models.Subscriber', 1, NULL, NULL, 0, 0, 1, 0, NULL),
(2586, 2, 201, 'subscribers', NULL, 'last_name', 'Last Name', NULL, 'text', 'Last Name', 'system_mandatory', 'visible', NULL, '[\r\n  {\r\n    \"type\": \"required\",\r\n    \"error_message\": \"is required\"\r\n  },\r\n  {\r\n    \"type\": \"regex\",\r\n    \"error_message\": \"can contain any characters except for repeated single special characters and should not exceed 100 characters\",\r\n    \"pattern\": \"^(?!^[!@#$%^&*()=_+\\\\[\\\\]{}|;\':\\\",./<>?`~]+$)(?!^.*([!@#$%^&*()=_+\\\\[\\\\]{}|;\':\\\",./<>?`~])\\\\1{4}).{1,100}$\"\r\n  }\r\n]\r\n', NULL, NULL, 'models.Subscriber', 1, NULL, NULL, 0, 0, 1, 0, NULL),
(2587, 2, 201, 'subscribers', NULL, 'admin_email_address', 'Admin Email Address', NULL, 'text', 'Admin Email Address', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be valid\", \"pattern\": \"^[\\\\w\\\\.-]+@[\\\\w\\\\.-]+\\\\.\\\\w+$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"admin_email_address\"], \"model_name\": \"models.Subscriber\", \"combination_column\": [\"admin_email_address\"]}]', NULL, NULL, 'models.Subscriber', 1, NULL, NULL, 0, 0, 1, 0, NULL),
(2588, 2, 201, 'subscribers', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[\r\n{\r\n\"type\":\"date_format\",\"date\":\"start_date\"\r\n}\r\n]', 'models.Subscriber', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2589, 2, 201, 'subscribers', NULL, 'end_date', 'end_date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[\r\n{\r\n\"type\":\"date_format\",\"date\":\"end_date\"\r\n}\r\n]', 'models.Subscriber', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2590, 2, 201, 'subscribers', NULL, 'parent_subscriber', 'Parent Subscriber', NULL, 'numeric', 'Parent Subscriber', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Subscriber', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2591, 2, 201, 'subscribers', NULL, 'server_status', 'Server Status', NULL, 'text', 'Server Status', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"server_status\", \"value\": \"pending\"}]', 'models.Subscriber', 1, NULL, NULL, 1, 0, 1, 0, 0),
(2592, 2, 201, 'subscribers', NULL, 'form_id', 'Form Id', NULL, 'text', 'Form Id', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 201}]', 'models.Subscriber', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2593, 2, 201, 'subscribers', NULL, 'database_credential', 'Database Credential', NULL, 'text', 'Database Credential', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Subscriber', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2594, 2, 201, 'subscribers', NULL, 'license_id', 'License', NULL, 'dropdown', 'License', 'system_mandatory', 'visible', 'db.query(models.License.id,models.License.name).filter( and_(models.License.record_status == 1,models.License.deleted == 0,models.License.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\"}]', NULL, NULL, 'models.Subscriber', 1, NULL, '{\r\n    \"table_name\": \"licenses\",\r\n    \"select_columns\":\"licenses.id as license_id,licenses.name as license_name\",\r\n    \"on_condition\": \"licenses.id\",\r\n    \"where_condition\": \"(licenses.deleted = 0 OR licenses.deleted IS NULL) AND (licenses.record_status = 1 OR licenses.record_status IS NULL)\"\r\n}', 0, 0, 1, 0, 0),
(2595, 2, 201, 'subscribers', NULL, 'type', 'Type', NULL, 'text', 'Type', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Subscriber', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2596, 2, 202, 'modules', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[\r\n  {\r\n    \"type\": \"required\",\r\n    \"error_message\": \"is required\"\r\n  },\r\n  {\r\n    \"type\": \"regex\",\r\n    \"error_message\": \"can contain any characters except for repeated single special characters and should not exceed 100 characters\",\r\n    \"pattern\": \"^(?!^[!@#$%^&*()=_+\\\\[\\\\]{}|;\':\\\",./<>?`~]+$)(?!^.*([!@#$%^&*()=_+\\\\[\\\\]{}|;\':\\\",./<>?`~])\\\\1{4}).{1,100}$\"\r\n  },\r\n  {\r\n    \"type\": \"unique\",\r\n    \"error_message\": \"must be unique\",\r\n    \"column_name\": [\"name\"],\r\n    \"model_name\": \"models.License\",\r\n    \"combination_column\": [\"name\"]\r\n  }\r\n]\r\n', NULL, NULL, 'models.Module', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2597, 2, 202, 'modules', NULL, 'form_id', 'Form Id', NULL, 'text', 'Form Id', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 202}]', 'models.Module', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2598, 2, 203, 'license_modules', NULL, 'license_id', 'License', NULL, 'dropdown', 'License', 'system_mandatory', 'visible', 'db.query(models.License.id,models.License.name).filter( and_(models.License.record_status == 1,models.License.deleted == 0,models.License.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\"},{\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"license_id\", \"module_id\"], \"model_name\": \"models.LicenseModule\", \"combination_column\": [\"license_id\", \"module_id\"]}]', NULL, NULL, 'models.LicenseModule', 1, NULL, '{\r\n    \"table_name\": \"licenses\",\r\n    \"select_columns\":\"licenses.id as license_id,licenses.name as license_name\",\r\n    \"on_condition\": \"licenses.id\",\r\n    \"where_condition\": \"(licenses.deleted = 0 OR licenses.deleted IS NULL) AND (licenses.record_status = 1 OR licenses.record_status IS NULL)\"\r\n}', 0, 0, 1, 0, 0),
(2599, 2, 203, 'license_modules', NULL, 'module_id', 'Module', NULL, 'dropdown', 'Module', 'system_mandatory', 'visible', 'db.query(models.Module.id,models.Module.name).filter( and_(models.Module.record_status == 1,models.Module.deleted == 0,models.Module.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\"}]', NULL, NULL, 'models.LicenseModule', 1, NULL, '{\r\n    \"table_name\": \"modules\",\r\n    \"select_columns\":\"modules.id as module_id,modules.name as module_name\",\r\n    \"on_condition\": \"modules.id\",\r\n    \"where_condition\": \"(modules.deleted = 0 OR modules.deleted IS NULL) AND (modules.record_status = 1 OR modules.record_status IS NULL)\"\r\n}', 0, 0, 1, 0, 0),
(2600, 2, 203, 'license_modules', NULL, 'form_id', 'Form Id', NULL, 'text', 'Form Id', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 203}]', 'models.LicenseModule', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2601, 2, 204, 'pages', NULL, 'form_id', 'Form Id', NULL, 'text', 'Form Id', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 204}]', 'models.Page', 0, NULL, NULL, 0, 0, 1, 0, NULL),
(2602, 2, 204, 'pages', NULL, 'module_id', 'Module', NULL, 'dropdown', 'Module', 'system_mandatory', 'visible', 'db.query(models.Module.id,models.Module.name).filter( and_(models.Module.record_status == 1,models.Module.deleted == 0,models.Module.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^(0|[1-9][0-9]*)$\", \"error_message\": \"must be numeric\"}]', NULL, NULL, 'models.Page', 1, NULL, '{\r\n    \"table_name\": \"modules\",\r\n    \"select_columns\":\"modules.id as module_id,modules.name as module_name\",\r\n    \"on_condition\": \"modules.id\",\r\n    \"where_condition\": \"(modules.deleted = 0 OR modules.deleted IS NULL) AND (modules.record_status = 1 OR modules.record_status IS NULL)\"\r\n}', 0, 0, 1, 0, 0),
(2603, 2, 204, 'pages', NULL, 'type', 'Type', NULL, 'text', 'Type', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[\r\n{\r\n\"type\" : \"default\",\r\n\"value\" : \"system_pages\"\r\n}\r\n]', 'models.Page', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2604, 2, 204, 'pages', NULL, 'slug_url', 'Slug Url', NULL, 'text', 'Slug URL', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.Page', 1, NULL, NULL, 1, 0, 1, 0, 0),
(2605, 2, 204, 'pages', NULL, 'name', 'Page Name', NULL, 'text', 'Page Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"},{\r\n    \"type\": \"regex\",\r\n    \"error_message\": \"can contain any characters except for repeated single special characters\",\r\n    \"pattern\": \"^(?!^[!@#$%^&*()=_+\\\\[\\\\]{}|;\':\\\",./<>?`~]+$)(?!^.*([!@#$%^&*()=_+\\\\[\\\\]{}|;\':\\\",./<>?`~])\\\\1{4}).{1,500}$\"\r\n  },{\"type\": \"unique\", \"record_exists\": \"Record already Exists\", \"column_name\": [\"name\", \"module_id\"], \"model_name\": \"models.Page\", \"combination_column\": [\"name\", \"module_id\"]}]', NULL, NULL, 'models.Page', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2606, 1, 205, 'users', NULL, 'firstname', 'First Name', NULL, 'text', 'First Name', 'non_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"can only contain valid characters or characters with numbers combined and It should not exceed more than 20 characters\", \"pattern\": \"^(?=.*[a-zA-Z])[a-zA-Z0-9\\\\-@_. ]{1,20}$\"}]', NULL, NULL, 'models.User', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2607, 1, 205, 'users', NULL, 'lastname', 'Last Name', NULL, 'text', 'Last Name', 'non_mandatory', 'visible', NULL, '[\r\n{\"type\":\"regex\",\"error_message\":\"can only contain valid characters or characters with numbers combined and It should not exceed more than 20 characters\", \"pattern\":\"^(?=.*[a-zA-Z])[a-zA-Z0-9\\\\-@_. ]{1,20}$\"}\r\n]\r\n', NULL, NULL, 'models.User', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2608, 1, 205, 'users', NULL, 'login', 'Username', NULL, 'text', 'Username', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"can only contain valid characters or characters with numbers combined and It should not exceed more than 25 characters\", \"pattern\": \"^(?=.*[a-zA-Z])[a-zA-Z0-9\\\\-@_. ]{2,25}$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"login\"], \"model_name\": \"models.User\", \"combination_column\": [\"login\"]}]', NULL, NULL, 'models.User', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2609, 1, 205, 'users', NULL, 'email', 'Email', NULL, 'text', 'Email', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be valid\", \"pattern\": \"^[\\\\w\\\\.-]+@[\\\\w\\\\.-]+\\\\.\\\\w+$\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"email\"], \"model_name\": \"models.User\", \"combination_column\": [\"email\"]}]', NULL, NULL, 'models.User', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2610, 1, 205, 'users', NULL, 'verified', 'Enabled', NULL, 'dropdown', 'Enabled', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"},{\"type\": \"default\", \"value\": \"Yes\"},{\"type\": \"list\", \"list_items\": [{\"id\": \"Yes\", \"name\": \"Yes\"}, {\"id\": \"No\", \"name\": \"No\"}], \"error_message\": \"is invalid\", \"translation_key\": \"IS_INVALID\"}]', NULL, NULL, 'models.User', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2611, 1, 205, 'users', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 205}]', 'models.User', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2612, 2, 206, 'review_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.ReviewType\", \"combination_column\": [\"name\"]}]', NULL, NULL, 'models.ReviewType', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2613, 2, 206, 'review_types', NULL, 'domain_id', 'domain_id', NULL, 'numeric', 'domain_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 1}]', 'models.ReviewType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2614, 2, 206, 'review_types', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 206}]', 'models.ReviewType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2615, 2, 207, 'contract_end_reasons', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.ContractEndReason\", \"combination_column\": [\"name\"]}]', NULL, NULL, 'models.ContractEndReason', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2616, 2, 207, 'contract_end_reasons', NULL, 'domain_id', 'domain_id', NULL, 'numeric', 'domain_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 1}]', 'models.ContractEndReason', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2617, 2, 207, 'contract_end_reasons', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 207}]', 'models.ContractEndReason', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2618, 2, 208, 'coverage_categories', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.CoverageCategory\", \"combination_column\": [\"name\"]}]', NULL, NULL, 'models.CoverageCategory', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2619, 2, 208, 'coverage_categories', NULL, 'domain_id', 'domain_id', NULL, 'numeric', 'domain_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 1}]', 'models.CoverageCategory', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2620, 2, 208, 'coverage_categories', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 208}]', 'models.CoverageCategory', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2621, 2, 209, 'salary_grades', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.SalaryGrade\", \"combination_column\": [\"name\"]}]', NULL, NULL, 'models.SalaryGrade', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2622, 2, 209, 'salary_grades', NULL, 'domain_id', 'domain_id', NULL, 'numeric', 'domain_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 1}]', 'models.SalaryGrade', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2623, 2, 209, 'salary_grades', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 209}]', 'models.SalaryGrade', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2624, 2, 210, 'committee_categories', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.CommitteeCategory\", \"combination_column\": [\"name\"]}]', NULL, NULL, 'models.CommitteeCategory', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2625, 2, 210, 'committee_categories', NULL, 'domain_id', 'domain_id', NULL, 'numeric', 'domain_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 1}]', 'models.CommitteeCategory', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2626, 2, 210, 'committee_categories', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 210}]', 'models.CommitteeCategory', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2627, 2, 147, 'third_parties', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'system_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 147}]', 'models.ThirdParty', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2628, 2, 211, 'employee_categories', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\"],\"model_name\":\"models.EmployeeCategory\",\"combination_column\":[\"name\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.EmployeeCategory', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2629, 2, 211, 'employee_categories', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 211}]', 'models.EmployeeCategory', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2630, 2, 212, 'employee_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\",\"employee_category_id\"],\"model_name\":\"models.EmployeeType\",\"combination_column\":[\"name\",\"employee_category_id\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.EmployeeType', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2631, 2, 212, 'employee_types', NULL, 'employee_category_id', 'Employee Type', NULL, 'dropdown', 'Employee Type', 'system_mandatory', 'visible', 'db.query(models.EmployeeCategory.id,models.EmployeeCategory.name).filter( and_(models.EmployeeCategory.record_status == 1,models.EmployeeCategory.deleted == 0,models.EmployeeCategory.subscriber_id == subscriber_id)).all()', '[{\"type\":\"required\",\"error_message\":\"required\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.EmployeeType', 1, NULL, '{\"table_name\": \"employee_categories\", \"select_columns\":\"employee_categories.id as employee_category_id,employee_categories.name as employee_category_name\", \"on_condition\": \"employee_categories.id\", \"where_condition\":\"(employee_categories.deleted = 0 OR employee_categories.deleted IS NULL)AND (employee_categories.record_status = 1 OR employee_categories.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2632, 2, 212, 'employee_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\":\"form_id\",\"value\": 212}]', 'models.EmployeeType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2633, 2, 213, 'gender', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\"],\"model_name\":\"models.Gender\",\"combination_column\":[\"name\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.Gender', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2634, 2, 213, 'gender', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\":\"form_id\",\"value\": 213}]', 'models.Gender', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2635, 2, 180, 'third_parties', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\", \"sub_type\"], \"model_name\": \"models.ThirdParty\", \"combination_column\": [\"name\", \"sub_type\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.ThirdParty', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2636, 2, 214, 'document_labels', NULL, 'name', 'Label', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.DocumentLabel\", \"combination_column\": [\"name\"], \"translation_key\": \"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.DocumentLabel', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2637, 2, 214, 'document_labels', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'system_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 214}]', 'models.DocumentLabel', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2638, 2, 215, 'trip_classes', NULL, 'name', 'Trip Class', NULL, 'text', 'Trip Class', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\"],\"model_name\":\"models.TripClass\",\"combination_column\":[\"name\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.TripClass', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2639, 2, 215, 'trip_classes', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.TripClass', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2640, 2, 215, 'trip_classes', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 215}]', 'models.TripClass', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2641, 2, 216, 'trip_types', NULL, 'name', 'Trip Type', NULL, 'text', 'Trip Type', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\"],\"model_name\":\"models.TripType\",\"combination_column\":[\"name\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.TripType', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2642, 2, 216, 'trip_types', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.TripType', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2643, 2, 216, 'trip_types', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 216}]', 'models.TripType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2644, 2, 217, 'trade_regions', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\"],\"model_name\":\"models.TradeRegion\",\"combination_column\":[\"name\"]}]', NULL, NULL, 'models.TradeRegion', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2645, 2, 217, 'trade_regions', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"sort_order\"],\"model_name\":\"models.TradeRegion\",\"combination_column\":[\"sort_order\"]}]', NULL, NULL, 'models.TradeRegion', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2646, 2, 217, 'trade_regions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 217}]', 'models.TradeRegion', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2647, 2, 218, 'training_categories', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\"],\"model_name\":\"models.TrainingCategory\",\"combination_column\":[\"name\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.TrainingCategory', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2648, 2, 218, 'training_categories', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 218}]', 'models.TrainingCategory', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2649, 2, 219, 'education_levels', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\"],\"model_name\":\"models.EducationLevel\",\"combination_column\":[\"name\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.EducationLevel', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2650, 2, 219, 'education_levels', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 219}]', 'models.EducationLevel', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2651, 2, 220, 'water_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.WaterConsumption', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND consumer_wise_user_access.user_id=userId\"}', 0, 0, 1, 0, 0),
(2652, 2, 220, 'water_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.WaterConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2653, 2, 220, 'water_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.WaterConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2654, 2, 220, 'water_consumptions', NULL, 'provider_id', 'Water Provider', NULL, 'dropdown', 'Water Provider', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id,models.ThirdParty.name).filter( and_(models.ThirdParty.type == \"provider\", models.ThirdParty.sub_type == \"WaterProvider\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).order_by(models.ThirdParty.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.WaterConsumption', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.type=\'provider\' AND third_parties.sub_type=\'WaterProvider\' AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2655, 2, 220, 'water_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.WaterConsumption', 1, NULL, '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2656, 2, 220, 'water_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\"}]', NULL, NULL, 'models.WaterConsumption', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2657, 2, 220, 'water_consumptions', NULL, 'volume_unit_id', 'Water Unit Code', NULL, 'dropdown', 'Water Unit Code', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Volume Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.WaterConsumption', 1, NULL, '{\"table_name\": \"units\", \"select_columns\":\"units.id as volume_unit_id,units.name as volume_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Volume Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2658, 2, 220, 'water_consumptions', NULL, 'consumption', 'Consumption', NULL, 'numeric', 'Water Consumption', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\"}, {\"decimal_points\": \"2\"}]', NULL, NULL, 'models.WaterConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2659, 2, 220, 'water_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterConsumption', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2660, 2, 220, 'water_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 220}]', 'models.WaterConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2661, 2, 220, 'water_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, '[{\"decimal_points\":\"4\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.WaterConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(2662, 2, 220, 'water_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.WaterConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2663, 2, 220, 'water_consumptions', NULL, 'consumption_conv', 'Consumption Conv', NULL, 'numeric', 'Consumption Conv', 'system_mandatory', 'visible', NULL, '[{\"decimal_points\":\"2\"}]', NULL, '[{\"type\": \"match_condition\", \"match_table\": \"units\", \"result_type\": \"numeric\", \"match_column\": \"exchange_rate\", \"result_value\": \"result\", \"match_condition\": [{\"value\": \"volume_unit_id\",\"column\": \"id\",\"identifier\": \"=\"}]},{\"type\": \"math\", \"result_type\": \"numeric\", \"result_value\": \"consumption_conv\", \"variable1\": \"consumption\", \"variable2\": \"result\", \"operation\": \"divide\", \"no_of_decimal_places\": \"2\"}]', 'models.WaterConsumption', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2664, 2, 220, 'water_consumptions', NULL, 'emission', 'Emission', NULL, 'numeric', 'Emission', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"match_table\":\"spend_based_emission_factors\",\"result_type\":\"numeric\",\"match_column\":\"co2e\",\"match_result\":\"result\",\"match_condition\":[{\"value\":\"consumer_id\",\"column\":\"consumer_id\",\"identifier\":\"=\"},{\"value\":\"provider_id\",\"column\":\"provider_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"}],\"where_condition\":\"type=\\\"SpendBasedWaterEmissionFactor\\\"\"},{\"type\":\"math\",\"operation\":\"multiply\",\"variable1\":\"cost_conv\",\"variable2\":\"match_result\",\"result_type\":\"numeric\",\"result_value\":\"emission\"}]', 'models.WaterConsumption', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2665, 2, 221, 'spend_based_emission_factors', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"provider_id\", \"year\", \"consumer_id\"], \"model_name\": \"models.SpendBasedEmissionFactor\", \"combination_column\": [\"provider_id\", \"year\", \"consumer_id\"], \"default_filters\": [{\"type\": \"SpendBasedElectricityEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2666, 2, 221, 'spend_based_emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2667, 2, 221, 'spend_based_emission_factors', NULL, 'provider_id', 'Provider', NULL, 'dropdown', 'Provider', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id, models.ThirdParty.name).filter( and_( models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1), or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1)).order_by(models.ThirdParty.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"(third_parties.deleted = 0 OR third_parties.deleted IS NULL) AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2668, 2, 221, 'spend_based_emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2669, 2, 221, 'spend_based_emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2670, 2, 221, 'spend_based_emission_factors', NULL, 'emission_unit_id', 'Emission Unit', NULL, 'dropdown', 'Emission Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2671, 2, 221, 'spend_based_emission_factors', NULL, 'currency_id', 'Currency Unit', NULL, 'dropdown', 'Currency Unit', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^[0-9]+$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2672, 2, 221, 'spend_based_emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2673, 2, 221, 'spend_based_emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2674, 2, 221, 'spend_based_emission_factors', NULL, 'type', 'ElectricityEmissionFactor', NULL, 'text', 'ElectricityEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"SpendBasedElectricityEmissionFactor\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2675, 2, 221, 'spend_based_emission_factors', NULL, 'form_id', 'ElectricityEmissionFactor', NULL, 'numeric', 'ElectricityEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 221}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2676, 2, 222, 'leave_categories', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"error_message\": \"must be unique\", \"column_name\": [\"name\"], \"model_name\": \"models.LeaveCategory\", \"combination_column\": [\"name\"]}]', NULL, NULL, 'models.LeaveCategory', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2677, 2, 222, 'leave_categories', NULL, 'default_nb_lost_days', 'Default no. of lost days', NULL, 'numeric', 'Default no. of lost days', 'non_mandatory', 'visible', NULL, '[{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^[0-9]+$\"}]', NULL, '[{\"type\": \"default\",\"value\": 0}]', 'models.LeaveCategory', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2678, 2, 222, 'leave_categories', NULL, 'domain_id', 'domain_id', NULL, 'numeric', 'domain_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 1}]', 'models.LeaveCategory', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2679, 2, 222, 'leave_categories', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 222}]', 'models.LeaveCategory', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2680, 2, 223, 'spend_based_emission_factors', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\":\"required\",\"error_message\":\"required\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^[0-9]+$\"},{\"type\":\"unique\",\"record_exists\":\"Record already exists\", \"column_name\":[\"provider_id\",\"year\",\"consumer_id\"],\"model_name\":\"models.SpendBasedEmissionFactor\",\"combination_column\":[\"provider_id\",\"year\",\"consumer_id\"],\"default_filters\":[{\"type\":\"SpendBasedWaterEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2681, 2, 223, 'spend_based_emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\",\"error_message\": \"is required\"},{\"type\":\"unique\",\"record_exists\":\"Record already exists\", \"column_name\":[\"provider_id\",\"year\",\"consumer_id\"],\"model_name\":\"models.SpendBasedEmissionFactor\",\"combination_column\":[\"provider_id\",\"year\",\"consumer_id\"],\"default_filters\":[{\"type\":\"SpendBasedEmissionFactor\"}]},{\"type\": \"year\",\"start_year\":\"-3\",\"end_year\": \"+4\",\"error_message\": \"should be in the range\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2682, 2, 223, 'spend_based_emission_factors', NULL, 'provider_id', 'Water Provider', NULL, 'dropdown', 'Water Provider', 'system_mandatory', 'visible', 'db.query(models.ThirdParty.id, models.ThirdParty.name).filter(and_(models.ThirdParty.type == \"provider\",models.ThirdParty.sub_type== \"WaterProvider\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).all()', '[{\"type\":\"required\",\"error_message\":\"required\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\"},{\"type\":\"unique\",\"record_exists\":\"Record already exists\", \"column_name\":[\"provider_id\",\"year\",\"consumer_id\"],\"model_name\":\"models.SpendBasedEmissionFactor\",\"combination_column\":[\"provider_id\",\"year\",\"consumer_id\"],\"default_filters\":[{\"type\":\"SpendBasedWaterEmissionFactor\"}]}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"third_parties.type=\\\"provider\\\" AND third_parties.sub_type=\\\"WaterProvider\\\" AND (third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2683, 2, 223, 'spend_based_emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2684, 2, 223, 'spend_based_emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^((http|https):\\\\/\\\\/)?([a-z0-9]+([\\\\-\\\\.]{1})?[a-z0-9]+)\\\\.[a-z]{2,5}(:[0-9]{1,5})?(\\\\/[a-z0-9]+)*\", \"error_message\": \"must be web address\"}]', '^((http|https):\\\\/\\\\/)?([a-z0-9]+([\\\\-\\\\.]{1})?[a-z0-9]+)\\\\.[a-z]{2,5}(:[0-9]{1,5})?(\\\\/[a-z0-9]+)*', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2685, 2, 223, 'spend_based_emission_factors', NULL, 'emission_unit_id', 'Emission Unit', NULL, 'dropdown', 'Emission Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\":\"required\",\"error_message\":\"required\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2686, 2, 223, 'spend_based_emission_factors', NULL, 'currency_id', 'Currency Unit', NULL, 'dropdown', 'Currency Unit', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter( and_(models.Currency.record_status == 1,models.Currency.deleted == 0,models.Currency.subscriber_id == subscriber_id)).all()', '[{\"type\":\"required\",\"error_message\":\"required\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^[0-9]+$\"}]', NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2687, 2, 223, 'spend_based_emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2688, 2, 223, 'spend_based_emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\",\"error_message\": \"is required\"},{\"type\": \"regex\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\", \"error_message\": \"must be numeric\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.SpendBasedEmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2689, 2, 223, 'spend_based_emission_factors', NULL, 'type', 'WaterEmissionFactor', NULL, 'text', 'WaterEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": \"SpendBasedWaterEmissionFactor\"}]', 'models.SpendBasedEmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2690, 2, 224, 'unit_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\"],\"model_name\":\"models.UnitType\",\"combination_column\":[\"name\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.UnitType', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2691, 2, 224, 'unit_types', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^[1-9]d*$\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"field\":\"sort_order\",\"table\":\"unit_types\"}]', NULL, NULL, 'models.UnitType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2692, 2, 224, 'unit_types', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 224}]', 'models.UnitType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2693, 2, 223, 'spend_based_emission_factors', NULL, 'form_id', 'WaterEmissionFactor', NULL, 'numeric', 'WaterEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 223}]', 'models.SpendBasedEmissionFactor ', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2706, 2, 233, 'port_distances', NULL, 'origin', 'Origin Port', NULL, 'dropdown', 'Origin Port', 'system_mandatory', 'visible', 'db.query(models.Port.code.label(\"id\"), models.Port.name.label(\"name\")) \\\n    .filter(\n        and_(\n            models.Port.subscriber_id == subscriber_id,\n            models.Port.deleted == 0,\n            models.Port.record_status == 1\n        )\n    ) \\\n    .order_by(models.Port.sort_order) \\\n    .all()', '[{\"type\":\"required\",\"error_message\":\"required\"}]', NULL, NULL, 'models.PortDistance', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(2707, 2, 233, 'port_distances', NULL, 'destination', 'Destination Port', NULL, 'dropdown', 'Destination Port', 'system_mandatory', 'visible', 'db.query(models.Port.code.label(\"id\"), models.Port.name.label(\"name\")) \\\r\n    .filter(\r\n        and_(\r\n            models.Port.subscriber_id == subscriber_id,\r\n            models.Port.deleted == 0,\r\n            models.Port.record_status == 1\r\n        )\r\n    ) \\\r\n    .order_by(models.Port.sort_order) \\\r\n    .all()', '[{\"type\":\"required\",\"error_message\":\"required\"}]', NULL, NULL, 'models.PortDistance', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(2708, 2, 233, 'port_distances', NULL, 'distance', 'Distance', NULL, 'numeric', 'Distance', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"required\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^\\\\d+(\\\\.\\\\d+)?$\"}]', NULL, NULL, 'models.PortDistance', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(2709, 2, 233, 'port_distances', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 233}]', 'models.PortDistance', 0, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(2710, 2, 140, 'spend_based_emission_factors', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 140}]', 'models.SpendBasedEmissionFactor', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2711, 2, 142, 'spend_based_emission_factors', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 142}]', 'models.SpendBasedEmissionFactor', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2712, 2, 143, 'spend_based_emission_factors', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 143}]', 'models.SpendBasedEmissionFactor', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2713, 2, 144, 'spend_based_emission_factors', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 144}]', 'models.SpendBasedEmissionFactor', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2714, 2, 145, 'spend_based_emission_factors', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 145}]', 'models.SpendBasedEmissionFactor', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2715, 2, 146, 'spend_based_emission_factors', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 146}]', 'models.SpendBasedEmissionFactor', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2716, 2, 149, 'spend_based_emission_factors', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 149}]', 'models.SpendBasedEmissionFactor', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2717, 2, 150, 'spend_based_emission_factors', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 150}]', 'models.SpendBasedEmissionFactor', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2718, 2, 151, 'spend_based_emission_factors', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 151}]', 'models.SpendBasedEmissionFactor', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2727, 2, 234, 'airport_distances', NULL, 'origin', 'Origin Port', NULL, 'dropdown', 'Origin Port', 'system_mandatory', 'visible', 'db.query(models.Airport.iata.label(\"id\"), models.Airport.iata.label(\"name\")) \\\n    .filter(\n        and_(\n            models.Airport.subscriber_id == subscriber_id,\n            models.Airport.deleted == 0,\n            models.Airport.record_status == 1\n        )\n    ) \\\n    .order_by(models.Airport.sort_order) \\\n    .all()', '[{\"type\":\"required\",\"error_message\":\"required\"}]', NULL, NULL, 'models.AirportDistance', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(2728, 2, 234, 'airport_distances', NULL, 'destination', 'Destination Port', NULL, 'dropdown', 'Destination Port', 'system_mandatory', 'visible', 'db.query(models.Airport.iata.label(\"id\"), models.Airport.iata.label(\"name\")) \\\n    .filter(\n        and_(\n            models.Airport.subscriber_id == subscriber_id,\n            models.Airport.deleted == 0,\n            models.Airport.record_status == 1\n        )\n    ) \\\n    .order_by(models.Airport.sort_order) \\\n    .all()', '[{\"type\":\"required\",\"error_message\":\"required\"}]', NULL, NULL, 'models.AirportDistance', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(2729, 2, 234, 'airport_distances', NULL, 'distance', 'Distance', NULL, 'numeric', 'Distance', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"required\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^\\\\d+(\\\\.\\\\d+)?$\"}]', NULL, NULL, 'models.AirportDistance', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(2730, 2, 233, 'airport_distances', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 234}]', 'models.AirportDistance', 0, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(2731, 2, 235, 'electricity_consumptions', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter(and_(models.ConsumerWiseUserAccess.user_id == user_id, models.ConsumerWiseUserAccess.deleted == 0, models.ConsumerWiseUserAccess.record_status == 1, models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.ElectricityConsumption', 1, 'specification_api', '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL) AND user_id=userId\"}', 0, 0, 1, 0, 0),
(2732, 2, 235, 'electricity_consumptions', NULL, 'start_date', 'Start Date', NULL, 'date', 'Start Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"start_date\"}]', 'models.ElectricityConsumption', 1, 'specification_api', NULL, 0, 0, 1, 0, 0),
(2733, 2, 235, 'electricity_consumptions', NULL, 'end_date', 'End Date', NULL, 'date', 'End Date', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"date_range\", \"error_message\": \"Invalid Date Range\", \"model_name\": \"null\", \"first_date\": \"start_date\", \"second_date\": \"end_date\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"<=\", \"translation_key\": \"INVALID_RANGE\"}, {\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"end_date\"}]', 'models.ElectricityConsumption', 1, 'specification_api', NULL, 0, 0, 1, 0, 0),
(2734, 2, 235, 'electricity_consumptions', NULL, 'ghg_protocol_scope', 'GHG Protocol Scope', NULL, 'dropdown', 'GHG Protocol Scope', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"list\", \"error_message\": \"is invalid\", \"list_items\": [{\"id\": \"1\", \"name\": \"1\"}, {\"id\": \"2\", \"name\": \"2\"}, {\"id\": \"3\", \"name\": \"3\"}], \"translation_key\": \"IS_INVALID\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\"}]', NULL, NULL, 'models.ElectricityConsumption', 1, 'specification_api', NULL, 0, 0, 1, 0, 0),
(2735, 2, 235, 'electricity_consumptions', NULL, 'currency_id', 'Currency', NULL, 'dropdown', 'Currency', 'system_mandatory', 'visible', 'db.query(models.Currency.id,models.Currency.name).filter(and_(models.Currency.subscriber_id == subscriber_id, models.Currency.deleted == 0, models.Currency.record_status == 1)).order_by(models.Currency.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.ElectricityConsumption', 1, 'specification_api', '{\"table_name\": \"currencies\", \"select_columns\":\"currencies.id as currency_id,currencies.name as currency_name\", \"on_condition\": \"currencies.id\", \"where_condition\":\"(currencies.deleted = 0 OR currencies.deleted IS NULL) AND (currencies.record_status = 1 OR currencies.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2736, 2, 235, 'electricity_consumptions', NULL, 'cost', 'Cost', NULL, 'numeric', 'Cost', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.ElectricityConsumption', 1, 'specification_api', NULL, 0, 0, 1, 0, 0),
(2737, 2, 235, 'electricity_consumptions', NULL, 'provider_id', 'Provider', NULL, 'dropdown', 'Provider', 'template_mandatory', 'visible', 'db.query(models.ThirdParty.id, models.ThirdParty.name).filter( and_(models.ThirdParty.sub_type == \"provider\", or_(models.ThirdParty.subscriber_id == subscriber_id, models.ThirdParty.subscriber_id == 1), models.ThirdParty.deleted == 0, models.ThirdParty.record_status == 1)).order_by(models.ThirdParty.sort_order).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.ElectricityConsumption', 1, 'specification_api', '{\"table_name\": \"third_parties\", \"select_columns\":\"third_parties.id as provider_id,third_parties.name as provider_name\", \"on_condition\": \"third_parties.id\", \"where_condition\":\"(third_parties.deleted = 0 OR third_parties.deleted IS NULL)AND (third_parties.record_status = 1 OR third_parties.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2738, 2, 235, 'electricity_consumptions', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.ElectricityConsumption', 1, 'specification_api', NULL, 0, 0, 1, 0, 0),
(2739, 2, 235, 'electricity_consumptions', NULL, 'cost_conv', 'Cost Conv', NULL, 'numeric', 'Cost Conv', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]},{\"type\":\"math\",\"result_type\":\"numeric\",\"result_value\":\"cost_conv\",\"variable1\":\"cost\",\"variable2\":\"result\",\"operation\":\"divide\",\"no_of_decimal_places\":\"2\"}]', 'models.ElectricityConsumption', 0, 'specification_api', NULL, 0, 0, 1, 0, 0),
(2740, 2, 235, 'electricity_consumptions', NULL, 'emission', 'GHG Emission', NULL, 'numeric', 'GHG Emission', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"match_table\":\"spend_based_emission_factors\",\"result_type\":\"numeric\",\"match_column\":\"co2e\",\"match_result\":\"result\",\"match_condition\":[{\"value\":\"consumer_id\",\"column\":\"consumer_id\",\"identifier\":\"=\"},{\"value\":\"provider_id\",\"column\":\"provider_id\",\"identifier\":\"=\"},{\"value\":\"year\",\"column\":\"year\",\"identifier\":\"=\"}],\"where_condition\":\"type=\\\"SpendBasedElectricityEmissionFactor\\\"\"},{\"type\":\"math\",\"operation\":\"multiply\",\"variable1\":\"cost_conv\",\"variable2\":\"match_result\",\"result_type\":\"numeric\",\"result_value\":\"emission\",\"no_of_decimal_places\":\"3\"}]', 'models.ElectricityConsumption', 0, 'specification_api', NULL, 0, 0, 1, 0, 0),
(2741, 2, 235, 'electricity_consumptions', NULL, 'exchange_rate', 'Exchange Rate', NULL, 'numeric', 'Exchange Rate', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"match_condition\",\"cost_conv\":true,\"compare_column\":\"comparative_currency_id\",\"result_type\":\"numeric\",\"result_value\":\"result\",\"match_column\":\"exchange_rate\",\"match_table\":\"currencies_exchange_rates\",\"match_condition\":[{\"value\":\"currency_id\",\"column\":\"base_currency_id\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%m\",\"column\":\"month\",\"identifier\":\"=\"},{\"request_key\":\"start_date\",\"request_value\":\"%Y\",\"column\":\"year\",\"identifier\":\"=\"}]}]', 'models.ElectricityConsumption', 0, 'specification_api', NULL, 0, 0, 1, 0, 0),
(2742, 2, 235, 'electricity_consumptions', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"column\": \"form_id\", \"value\": 235}]', 'models.ElectricityConsumption', 0, 'specification_api', NULL, 0, 0, 1, 0, NULL),
(2743, 2, 235, 'electricity_consumptions', NULL, 'uploaded_files', 'File Upload', NULL, 'file_upload', NULL, 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.ElectricityConsumption', 1, 'specification_api', NULL, 0, 0, 1, 0, NULL),
(2744, 2, 236, 'unit_types', NULL, 'name', 'Name', NULL, 'text', 'Name', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"name\"],\"model_name\":\"models.UnitType\",\"combination_column\":[\"name\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.UnitType', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2745, 2, 236, 'unit_types', NULL, 'sort_order', 'Sort Order', NULL, 'numeric', 'Sort Order', 'template_mandatory', 'visible', NULL, '[{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^[1-9]d*$\"},{\"type\":\"unique\",\"error_message\":\"must be unique\",\"field\":\"sort_order\",\"table\":\"unit_types\"}]', NULL, NULL, 'models.UnitType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2746, 2, 236, 'unit_types', NULL, 'form_id', 'form_id', NULL, 'numeric', 'form_id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 236}]', 'models.UnitType', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2747, 1, 237, 'emission_factors', NULL, 'year', 'Year', NULL, 'dropdown', 'Year', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"is required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"gas_type_id\", \"year\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"gas_type_id\", \"year\"], \"default_filters\": [{\"type\": \"GasEmissionFactor\"}]}, {\"type\": \"year\", \"start_year\": \"-3\", \"end_year\": \"+4\", \"error_message\": \"should be in the range\", \"translation_key\": \"SHOULD_BE_IN_RANGE\"}]', NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2748, 1, 237, 'emission_factors', NULL, 'gas_type_id', 'Gas Type', NULL, 'dropdown', 'Gas Type', 'system_mandatory', 'visible', 'db.query(models.GasType.id, models.GasType.name).filter(and_(models.GasType.deleted == 0, models.GasType.record_status == 1, or_(models.GasType.subscriber_id == subscriber_id, models.GasType.subscriber_id == 1))).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}, {\"type\": \"unique\", \"record_exists\": \"Record already exists\", \"column_name\": [\"gas_type_id\", \"year\"], \"model_name\": \"models.EmissionFactor\", \"combination_column\": [\"gas_type_id\", \"year\"], \"default_filters\": [{\"type\": \"GasEmissionFactor\"}]}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"gas_types\", \"select_columns\":\"gas_types.id as gas_type_id,gas_types.name as gas_type_name\", \"on_condition\": \"gas_types.id\", \"where_condition\":\"(gas_types.deleted = 0 OR gas_types.deleted IS NULL) AND (gas_types.record_status = 1 OR gas_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2749, 1, 237, 'emission_factors', NULL, 'source', 'Source', NULL, 'text', 'Source', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2750, 1, 237, 'emission_factors', NULL, 'web', 'Link', NULL, 'text', 'Link', 'non_mandatory', 'visible', NULL, '[{\"type\": \"regex\", \"pattern\": \"^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*\", \"error_message\": \"must be web address\",\"translation_key\": \"MUST_BE_WEB_ADDRESS\"}]', '^(?:(?:https?|http):\\\\/\\\\/)?(?:[^\\\\s\\\\/]+\\\\.[^\\\\s\\\\/]+)(:[0-9]{1,5})?(\\\\/[^\\\\s]+)*', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2751, 1, 237, 'emission_factors', NULL, 'emission_unit_id', 'Emission unit', NULL, 'dropdown', 'Emission unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Weight Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units\", \"select_columns\":\"units.id as emission_unit_id,units.name as emission_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Weight Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2752, 1, 237, 'emission_factors', NULL, 'consumption_unit_id', 'Consumption unit', NULL, 'dropdown', 'Consumption unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Gas Units\", or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0, models.Unit.record_status == 1)).all()', '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^(0|[1-9][0-9]*)$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^(0|[1-9][0-9]*)$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', '{\"table_name\": \"units as unit\", \"select_columns\":\"unit.id as consumption_unit_id,unit.name as consumption_unit_name\", \"on_condition\": \"unit.id\", \"where_condition\":\"unit.type =\\\"Gas Units\\\" AND (unit.deleted = 0 OR unit.deleted IS NULL)AND (unit.record_status = 1 OR unit.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2753, 1, 237, 'emission_factors', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2754, 1, 237, 'emission_factors', NULL, 'co2e', 'CO2-E', NULL, 'numeric', 'CO2-E', 'system_mandatory', 'visible', NULL, '[{\"type\": \"required\", \"error_message\": \"required\", \"translation_key\": \"IS_REQUIRED\"}, {\"type\": \"regex\", \"error_message\": \"must be numeric\", \"pattern\": \"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\": \"MUST_BE_NUMERIC\"}]', '^\\\\d+(\\\\.\\\\d+)?$', NULL, 'models.EmissionFactor', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2755, 1, 237, 'emission_factors', NULL, 'type', 'GasEmissionFactor', NULL, 'text', 'GasEmissionFactor', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"type\",\n\"value\": \"GasEmissionFactor\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2756, 1, 237, 'emission_factors', NULL, 'consumable_type', 'GasType', NULL, 'text', 'GasType', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumable_type\",\n\"value\": \"GasType\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2757, 1, 237, 'emission_factors', NULL, 'consumption_unit_type', 'GasUnit', NULL, 'text', 'GasUnit', 'non_mandatory', 'template_invisible', NULL, NULL, NULL, '[{\n\"type\": \"default\",\n\"column\":\"consumption_unit_type\",\n\"value\": \"GasUnit\"\n}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2758, 1, 237, 'emission_factors', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'system_invisible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 237}]', 'models.EmissionFactor', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2759, 2, 233, 'port_distances', NULL, 'origin', 'Origin Port', NULL, 'dropdown', 'Origin Port', 'system_mandatory', 'visible', 'db.query(models.Port.code.label(\"id\"), models.Port.name.label(\"name\")) \\\n    .filter(\n        and_(\n            models.Port.subscriber_id == subscriber_id,\n            models.Port.deleted == 0,\n            models.Port.record_status == 1\n        )\n    ) \\\n    .order_by(models.Port.sort_order) \\\n    .all()', '[{\"type\":\"required\",\"error_message\":\"required\"}]', NULL, NULL, 'models.PortDistance', 1, 'docs#/data-entry', '{\n    \"table_name\": \"ports\",\n    \"select_columns\": \"ports.name as origin\",\n    \"on_condition\": \"ports.code\",\n    \"where_condition\": \"(ports.deleted = 0 OR ports.deleted IS NULL)AND (ports.record_status = 1 OR ports.record_status IS NULL) \"\n}', 0, 1, 1, 0, 0),
(2760, 2, 233, 'port_distances', NULL, 'destination', 'Destination Port', NULL, 'dropdown', 'Destination Port', 'system_mandatory', 'visible', 'db.query(models.Port.code.label(\"id\"), models.Port.name.label(\"name\")) \\\r\n    .filter(\r\n        and_(\r\n            models.Port.subscriber_id == subscriber_id,\r\n            models.Port.deleted == 0,\r\n            models.Port.record_status == 1\r\n        )\r\n    ) \\\r\n    .order_by(models.Port.sort_order) \\\r\n    .all()', '[{\"type\": \"date_range\", \"error_message\": \"should not be same as origin\", \"model_name\": \"null\", \"first_date\": \"origin\", \"second_date\": \"destination\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"not_equal\", \"translation_key\": \"INVALID_RANGE\"}, {\"type\": \"required\", \"error_message\": \"required\"}]', NULL, NULL, 'models.PortDistance', 1, 'docs#/data-entry', '{\n    \"table_name\": \"ports as port\",\n    \"select_columns\": \"port.name as destination\",\n    \"on_condition\": \"port.code\",\n    \"where_condition\": \"(port.deleted = 0 OR port.deleted IS NULL)AND (port.record_status = 1 OR port.record_status IS NULL) \"\n}', 0, 1, 1, 0, 0),
(2761, 2, 233, 'port_distances', NULL, 'distance', 'Distance', NULL, 'numeric', 'Distance', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"required\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^\\\\d+(\\\\.\\\\d+)?$\"}]', NULL, NULL, 'models.PortDistance', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(2762, 2, 233, 'port_distances', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 233}]', 'models.PortDistance', 0, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(2763, 2, 234, 'airport_distances', NULL, 'origin', 'Origin Port', NULL, 'dropdown', 'Origin Port', 'system_mandatory', 'visible', 'db.query(models.Airport.iata.label(\"id\"), models.Airport.name.label(\"name\")) \\\n    .filter(\n        and_(\n            models.Airport.subscriber_id == subscriber_id,\n            models.Airport.deleted == 0,\n            models.Airport.record_status == 1\n        )\n    ) \\\n    .order_by(models.Airport.sort_order) \\\n    .all()', '[{\"type\":\"required\",\"error_message\":\"required\"}]', NULL, NULL, 'models.AirportDistance', 1, 'docs#/data-entry', '{\n    \"table_name\": \"airports as port\",\n    \"select_columns\": \"port.name as origin\",\n    \"on_condition\": \"port.iata\",\n    \"where_condition\": \"(port.deleted = 0 OR port.deleted IS NULL)AND (port.record_status = 1 OR port.record_status IS NULL) \"\n}', 0, 1, 1, 0, 0),
(2764, 2, 234, 'airport_distances', NULL, 'destination', 'Destination Port', NULL, 'dropdown', 'Destination Port', 'system_mandatory', 'visible', 'db.query(models.Airport.iata.label(\"id\"), models.Airport.name.label(\"name\")) \\\n    .filter(\n        and_(\n            models.Airport.subscriber_id == subscriber_id,\n            models.Airport.deleted == 0,\n            models.Airport.record_status == 1\n        )\n    ) \\\n    .order_by(models.Airport.sort_order) \\\n    .all()', '[{\"type\": \"date_range\", \"error_message\": \"should not be same as origin\", \"model_name\": \"null\", \"first_date\": \"origin\", \"second_date\": \"destination\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"not_equal\", \"translation_key\": \"INVALID_RANGE\"}, {\"type\": \"required\", \"error_message\": \"required\"}]', NULL, NULL, 'models.AirportDistance', 1, 'docs#/data-entry', '{\n    \"table_name\": \"airports\",\n    \"select_columns\": \"airports.name as destination\",\n    \"on_condition\": \"airports.iata\",\n    \"where_condition\": \"(airports.deleted = 0 OR airports.deleted IS NULL)AND (airports.record_status = 1 OR airports.record_status IS NULL) \"\n}', 0, 1, 1, 0, 0),
(2765, 2, 234, 'airport_distances', NULL, 'distance', 'Distance', NULL, 'numeric', 'Distance', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"required\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^\\\\d+(\\\\.\\\\d+)?$\"}]', NULL, NULL, 'models.AirportDistance', 1, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(2766, 2, 234, 'airport_distances', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 234}]', 'models.AirportDistance', 0, 'docs#/data-entry', NULL, 0, 1, 1, 0, 0),
(2767, 2, 257, 'water_qualities', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterQuality', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL)\"}', 0, 0, 1, 0, 0);
INSERT INTO `fields` (`id`, `subscriber_id`, `form_id`, `table_name`, `parent_column_fk_name`, `name`, `label`, `dynamic_label`, `control_type`, `tooltip`, `mandatory`, `visibility`, `foreign_key_query`, `constraint_json`, `regex`, `construct_json`, `model_name`, `is_input`, `specification_api`, `related_table_conditions`, `readOnly`, `deleted`, `record_status`, `created_by_id`, `updated_by_id`) VALUES
(2768, 2, 257, 'water_qualities', NULL, 'report_date', 'Report Date', NULL, 'date', 'Report Date', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"report_date\"}]', 'models.WaterQuality', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2769, 2, 257, 'water_qualities', NULL, 'report_no', 'Report No', NULL, 'text', 'Report No', 'system_mandatory', 'visible', NULL, '[{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"report_no\"],\"model_name\":\"models.WaterQuality\",\"combination_column\":[\"report_no\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.WaterQuality', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2770, 2, 257, 'water_qualities', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQuality', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2771, 2, 257, 'water_quality_items', 'water_quality_id', 'type', 'Type', NULL, 'text', 'Type', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"value\":\"WaterQualityPh\"}]', 'models.WaterQualityItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2772, 2, 257, 'water_quality_items', 'water_quality_id', 'water_report_type_id', 'Water Report Type', NULL, 'dropdown', 'Water Report Type', 'system_mandatory', 'visible', 'db.query(models.WaterReportType.id,models.WaterReportType.name).filter( and_(models.WaterReportType.subscriber_id == subscriber_id, models.WaterReportType.deleted == 0, models.WaterReportType.record_status == 1)).all()', '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterQualityItem', 1, NULL, '{\"table_name\": \"water_report_types\", \"select_columns\":\"water_report_types.id as water_report_type_id,water_report_types.name as water_report_type_name\", \"on_condition\": \"water_report_types.id\", \"where_condition\":\"(water_report_types.deleted = 0 OR water_report_types.deleted IS NULL)AND (water_report_types.record_status = 1 OR water_report_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2773, 2, 257, 'water_quality_items', 'water_quality_id', 'water_pollutant_id', 'Water Pollutant', NULL, 'dropdown', 'Water Pollutant', 'system_mandatory', 'visible', 'db.query(models.Pollutant.id,models.Pollutant.name).filter( and_(models.Pollutant.type == \"WaterPollutant\", models.Pollutant.subscriber_id == subscriber_id, models.Pollutant.deleted == 0, models.Pollutant.record_status == 1)).all()', '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterQualityItem', 1, NULL, '{\"table_name\": \"pollutants\", \"select_columns\":\"pollutants.id as water_pollutant_id,pollutants.name as water_pollutant_name\", \"on_condition\": \"pollutants.id\", \"where_condition\":\"pollutants.type = \\\"WaterPollutant\\\" AND (pollutants.deleted = 0 OR pollutants.deleted IS NULL)AND (pollutants.record_status = 1 OR pollutants.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2774, 2, 257, 'water_quality_items', 'water_quality_id', 'min', 'Min', NULL, 'numeric', 'Min', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric or check the ph value\",\"pattern\":\"^([0-9]|1[0-5]|0.d+|1[0-5].d+)$\"},{\"type\": \"date_range\", \"error_message\": \" must be less than Max\", \"model_name\": \"null\", \"first_date\": \"min\", \"second_date\": \"max\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"start_year\", \"translation_key\": \"INVALID_RANGE\"}]', NULL, NULL, 'models.WaterQualityItem', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2775, 2, 257, 'water_quality_items', 'water_quality_id', 'max', 'Max', NULL, 'numeric', 'Min', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric or check the ph value\",\"pattern\":\"^([0-9]|1[0-5]|0.d+|1[0-5].d+)$\"}]', NULL, NULL, 'models.WaterQualityItem', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2776, 2, 257, 'water_quality_items', 'water_quality_id', 'comments', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQualityItem', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2777, 2, 257, 'water_qualities', NULL, 'uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQuality', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2778, 2, 257, 'water_quality_items', 'water_quality_id', 'parent_uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQualityItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2779, 2, 257, 'water_quality_items', 'water_quality_id', 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\", \"column\": \"form_id\", \"value\": 257}]', 'models.WaterQualityItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2780, 2, 257, 'water_qualities', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\", \"column\": \"form_id\", \"value\": 257}]', 'models.WaterQuality', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2781, 2, 258, 'water_qualities', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterQuality', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2782, 2, 258, 'water_qualities', NULL, 'report_date', 'Report Date', NULL, 'date', 'Report Date', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"report_date\"}]', 'models.WaterQuality', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2783, 2, 258, 'water_qualities', NULL, 'report_no', 'Report No', NULL, 'text', 'Report No', 'system_mandatory', 'visible', NULL, '[{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"report_no\"],\"model_name\":\"models.WaterQuality\",\"combination_column\":[\"report_no\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.WaterQuality', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2784, 2, 258, 'water_qualities', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQuality', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2785, 2, 258, 'water_quality_items', 'water_quality_id', 'type', 'Type', NULL, 'text', 'Type', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"value\":\"WaterQualityIndicator\"}]', 'models.WaterQualityItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2786, 2, 258, 'water_quality_items', 'water_quality_id', 'water_report_type_id', 'Water Report Type', NULL, 'dropdown', 'Water Report Type', 'system_mandatory', 'visible', 'db.query(models.WaterReportType.id,models.WaterReportType.name).filter( and_(models.WaterReportType.subscriber_id == subscriber_id, models.WaterReportType.deleted == 0, models.WaterReportType.record_status == 1)).all()', '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterQualityItem', 1, NULL, '{\"table_name\": \"water_report_types\", \"select_columns\":\"water_report_types.id as water_report_type_id,water_report_types.name as water_report_type_name\", \"on_condition\": \"water_report_types.id\", \"where_condition\":\"(water_report_types.deleted = 0 OR water_report_types.deleted IS NULL)AND (water_report_types.record_status = 1 OR water_report_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2787, 2, 258, 'water_quality_items', 'water_quality_id', 'water_pollutant_id', 'Water Pollutant', NULL, 'dropdown', 'Water Pollutant', 'system_mandatory', 'visible', 'db.query(models.Pollutant.id,models.Pollutant.name).filter( and_(models.Pollutant.type == \"WaterPollutant\", models.Pollutant.subscriber_id == subscriber_id, models.Pollutant.deleted == 0, models.Pollutant.record_status == 1)).all()', '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterQualityItem', 1, NULL, '{\"table_name\": \"pollutants\", \"select_columns\":\"pollutants.id as water_pollutant_id,pollutants.name as water_pollutant_name\", \"on_condition\": \"pollutants.id\", \"where_condition\":\"pollutants.type = \\\"WaterPollutant\\\" AND (pollutants.deleted = 0 OR pollutants.deleted IS NULL)AND (pollutants.record_status = 1 OR pollutants.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2788, 2, 258, 'water_quality_items', 'water_quality_id', 'concentration_unit_id', 'Concentration Unit', NULL, 'dropdown', 'Concentration Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Concentration Units\",or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0,models.Unit.record_status == 1)).all()', '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterQualityItem', 1, NULL, '{\"table_name\": \"units\", \"select_columns\":\"units.id as concentration_unit_id,units.name as concentration_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Concentration Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2789, 2, 258, 'water_quality_items', 'water_quality_id', 'avg', 'Reading', NULL, 'numeric', 'Reading', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\":\"MUST_BE_NUMERIC\"},{\"decimal_points\":2}]', NULL, NULL, 'models.WaterQualityItem', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2790, 2, 258, 'water_quality_items', 'water_quality_id', 'comments', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQualityItem', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2791, 2, 258, 'water_qualities', NULL, 'uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQuality', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2792, 2, 258, 'water_quality_items', 'water_quality_id', 'parent_uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQualityItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2793, 2, 258, 'water_quality_items', 'water_quality_id', 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\", \"column\": \"form_id\", \"value\": 258}]', 'models.WaterQualityItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2794, 2, 258, 'water_qualities', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\", \"column\": \"form_id\", \"value\": 258}]', 'models.WaterQuality', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2795, 2, 259, 'water_qualities', NULL, 'consumer_id', 'Location', NULL, 'dropdown', 'Location', 'system_mandatory', 'visible', 'db.query(models.ConsumerWiseUserAccess.consumer_id.label(\"id\"),models.ConsumerWiseUserAccess.consumer_name.label(\"name\")).filter( and_(models.ConsumerWiseUserAccess.user_id == user_id,models.ConsumerWiseUserAccess.record_status == 1,models.ConsumerWiseUserAccess.deleted == 0,models.ConsumerWiseUserAccess.subscriber_id == subscriber_id)).all()', '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterQuality', 1, NULL, '{\"table_name\": \"consumer_wise_user_access\", \"select_columns\":\"consumer_wise_user_access.consumer_id as consumer_id,consumer_wise_user_access.consumer_name as consumer_name\", \"on_condition\": \"consumer_wise_user_access.consumer_id\", \"where_condition\":\"(consumer_wise_user_access.deleted = 0 OR consumer_wise_user_access.deleted IS NULL)AND (consumer_wise_user_access.record_status = 1 OR consumer_wise_user_access.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2796, 2, 259, 'water_qualities', NULL, 'report_date', 'Report Date', NULL, 'date', 'Report Date', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"date_format\": \"True\"}]', NULL, '[{\"type\":\"date_format\",\"date\":\"report_date\"}]', 'models.WaterQuality', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2797, 2, 259, 'water_qualities', NULL, 'report_no', 'Report No', NULL, 'text', 'Report No', 'system_mandatory', 'visible', NULL, '[{\"type\":\"unique\",\"error_message\":\"must be unique\",\"column_name\":[\"report_no\"],\"model_name\":\"models.WaterQuality\",\"combination_column\":[\"report_no\"],\"translation_key\":\"MUST_BE_UNIQUE\"}]', NULL, NULL, 'models.WaterQuality', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2798, 2, 259, 'water_qualities', NULL, 'remarks', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQuality', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2799, 2, 259, 'water_quality_items', 'water_quality_id', 'type', 'Type', NULL, 'text', 'Type', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\":\"default\",\"value\":\"WaterQualityTemp\"}]', 'models.WaterQualityItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2800, 2, 259, 'water_quality_items', 'water_quality_id', 'water_report_type_id', 'Water Report Type', NULL, 'dropdown', 'Water Report Type', 'system_mandatory', 'visible', 'db.query(models.WaterReportType.id,models.WaterReportType.name).filter( and_(models.WaterReportType.subscriber_id == subscriber_id, models.WaterReportType.deleted == 0, models.WaterReportType.record_status == 1)).all()', '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterQualityItem', 1, NULL, '{\"table_name\": \"water_report_types\", \"select_columns\":\"water_report_types.id as water_report_type_id,water_report_types.name as water_report_type_name\", \"on_condition\": \"water_report_types.id\", \"where_condition\":\"(water_report_types.deleted = 0 OR water_report_types.deleted IS NULL)AND (water_report_types.record_status = 1 OR water_report_types.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2801, 2, 259, 'water_quality_items', 'water_quality_id', 'water_pollutant_id', 'Water Pollutant', NULL, 'dropdown', 'Water Pollutant', 'system_mandatory', 'visible', 'db.query(models.Pollutant.id,models.Pollutant.name).filter( and_(models.Pollutant.type == \"WaterPollutant\", models.Pollutant.subscriber_id == subscriber_id, models.Pollutant.deleted == 0, models.Pollutant.record_status == 1)).all()', '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterQualityItem', 1, NULL, '{\"table_name\": \"pollutants\", \"select_columns\":\"pollutants.id as water_pollutant_id,pollutants.name as water_pollutant_name\", \"on_condition\": \"pollutants.id\", \"where_condition\":\"pollutants.type = \\\"WaterPollutant\\\" AND (pollutants.deleted = 0 OR pollutants.deleted IS NULL)AND (pollutants.record_status = 1 OR pollutants.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2802, 2, 259, 'water_quality_items', 'water_quality_id', 'temp_unit_id', 'Temperature Unit', NULL, 'dropdown', 'Temperature Unit', 'system_mandatory', 'visible', 'db.query(models.Unit.id,models.Unit.name).filter(and_(models.Unit.type == \"Temp Units\",or_(models.Unit.subscriber_id == subscriber_id, models.Unit.subscriber_id == 1), models.Unit.deleted == 0,models.Unit.record_status == 1)).all()', '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^(0|[1-9][0-9]*)$\",\"translation_key\":\"MUST_BE_NUMERIC\"}]', NULL, NULL, 'models.WaterQualityItem', 1, NULL, '{\"table_name\": \"units\", \"select_columns\":\"units.id as temp_unit_id,units.name as temp_unit_name\", \"on_condition\": \"units.id\", \"where_condition\":\"units.type =\\\"Temp Units\\\" AND (units.deleted = 0 OR units.deleted IS NULL)AND (units.record_status = 1 OR units.record_status IS NULL)\"}', 0, 0, 1, 0, 0),
(2803, 2, 259, 'water_quality_items', 'water_quality_id', 'avg', 'Reading', NULL, 'numeric', 'Reading', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"is required\",\"translation_key\":\"IS_REQUIRED\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^\\\\d+(\\\\.\\\\d+)?$\",\"translation_key\":\"MUST_BE_NUMERIC\"},{\"decimal_points\":2}]', NULL, NULL, 'models.WaterQualityItem', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2804, 2, 259, 'water_quality_items', 'water_quality_id', 'comments', 'Remarks', NULL, 'text', 'Remarks', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQualityItem', 1, NULL, NULL, 0, 0, 1, 0, 0),
(2805, 2, 259, 'water_qualities', NULL, 'uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQuality', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2806, 2, 259, 'water_quality_items', 'water_quality_id', 'parent_uuid', 'UUID', NULL, 'text', 'UUID', 'non_mandatory', 'visible', NULL, NULL, NULL, NULL, 'models.WaterQualityItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2807, 2, 259, 'water_quality_items', 'water_quality_id', 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\", \"column\": \"form_id\", \"value\": 259}]', 'models.WaterQualityItem', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2808, 2, 259, 'water_qualities', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'non_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\", \"column\": \"form_id\", \"value\": 259}]', 'models.WaterQuality', 0, NULL, NULL, 0, 0, 1, 0, 0),
(2809, 2, 233, 'port_distances', NULL, 'origin', 'Origin Port', NULL, 'dropdown', 'Origin Port', 'system_mandatory', 'visible', 'db.query(models.Port.code.label(\"id\"), models.Port.name.label(\"name\")) \\\n    .filter(\n        and_(\n            models.Port.subscriber_id == subscriber_id,\n            models.Port.deleted == 0,\n            models.Port.record_status == 1\n        )\n    ) \\\n    .order_by(models.Port.sort_order) \\\n    .all()', '[{\"type\":\"required\",\"error_message\":\"required\"}]', NULL, NULL, 'models.PortDistance', 1, 'docs#/data-entry', '{\n    \"table_name\": \"ports\",\n    \"select_columns\": \"ports.name as origin\",\n    \"on_condition\": \"ports.code\",\n    \"where_condition\": \"(ports.deleted = 0 OR ports.deleted IS NULL)AND (ports.record_status = 1 OR ports.record_status IS NULL) \"\n}', 0, 0, 1, 0, 0),
(2810, 2, 233, 'port_distances', NULL, 'destination', 'Destination Port', NULL, 'dropdown', 'Destination Port', 'system_mandatory', 'visible', 'db.query(models.Port.code.label(\"id\"), models.Port.name.label(\"name\")) \\\r\n    .filter(\r\n        and_(\r\n            models.Port.subscriber_id == subscriber_id,\r\n            models.Port.deleted == 0,\r\n            models.Port.record_status == 1\r\n        )\r\n    ) \\\r\n    .order_by(models.Port.sort_order) \\\r\n    .all()', '[{\"type\": \"date_range\", \"error_message\": \"should not be same as origin\", \"model_name\": \"null\", \"first_date\": \"origin\", \"second_date\": \"destination\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"not_equal\", \"translation_key\": \"INVALID_RANGE\"}, {\"type\": \"required\", \"error_message\": \"required\"}]', NULL, NULL, 'models.PortDistance', 1, 'docs#/data-entry', '{\n    \"table_name\": \"ports as port\",\n    \"select_columns\": \"port.name as destination\",\n    \"on_condition\": \"port.code\",\n    \"where_condition\": \"(port.deleted = 0 OR port.deleted IS NULL)AND (port.record_status = 1 OR port.record_status IS NULL) \"\n}', 0, 0, 1, 0, 0),
(2811, 2, 233, 'port_distances', NULL, 'distance', 'Distance', NULL, 'numeric', 'Distance', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"required\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^\\\\d+(\\\\.\\\\d+)?$\"}]', NULL, NULL, 'models.PortDistance', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2812, 2, 233, 'port_distances', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 233}]', 'models.PortDistance', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2813, 2, 234, 'airport_distances', NULL, 'origin', 'Origin Port', NULL, 'dropdown', 'Origin Port', 'system_mandatory', 'visible', 'db.query(models.Airport.iata.label(\"id\"), models.Airport.name.label(\"name\")) \\\n    .filter(\n        and_(\n            models.Airport.subscriber_id == subscriber_id,\n            models.Airport.deleted == 0,\n            models.Airport.record_status == 1\n        )\n    ) \\\n    .order_by(models.Airport.sort_order) \\\n    .all()', '[{\"type\":\"required\",\"error_message\":\"required\"}]', NULL, NULL, 'models.AirportDistance', 1, 'docs#/data-entry', '{\n    \"table_name\": \"airports as port\",\n    \"select_columns\": \"port.name as origin\",\n    \"on_condition\": \"port.iata\",\n    \"where_condition\": \"(port.deleted = 0 OR port.deleted IS NULL)AND (port.record_status = 1 OR port.record_status IS NULL) \"\n}', 0, 0, 1, 0, 0),
(2814, 2, 234, 'airport_distances', NULL, 'destination', 'Destination Port', NULL, 'dropdown', 'Destination Port', 'system_mandatory', 'visible', 'db.query(models.Airport.iata.label(\"id\"), models.Airport.name.label(\"name\")) \\\n    .filter(\n        and_(\n            models.Airport.subscriber_id == subscriber_id,\n            models.Airport.deleted == 0,\n            models.Airport.record_status == 1\n        )\n    ) \\\n    .order_by(models.Airport.sort_order) \\\n    .all()', '[{\"type\": \"date_range\", \"error_message\": \"should not be same as origin\", \"model_name\": \"null\", \"first_date\": \"origin\", \"second_date\": \"destination\", \"compare_date\": \"null\", \"compare_data\": \"null\", \"validate_date_one\": \"null\", \"validate_date_two\": \"null\", \"identifier\": \"not_equal\", \"translation_key\": \"INVALID_RANGE\"}, {\"type\": \"required\", \"error_message\": \"required\"}]', NULL, NULL, 'models.AirportDistance', 1, 'docs#/data-entry', '{\n    \"table_name\": \"airports\",\n    \"select_columns\": \"airports.name as destination\",\n    \"on_condition\": \"airports.iata\",\n    \"where_condition\": \"(airports.deleted = 0 OR airports.deleted IS NULL)AND (airports.record_status = 1 OR airports.record_status IS NULL) \"\n}', 0, 0, 1, 0, 0),
(2815, 2, 234, 'airport_distances', NULL, 'distance', 'Distance', NULL, 'numeric', 'Distance', 'system_mandatory', 'visible', NULL, '[{\"type\":\"required\",\"error_message\":\"required\"},{\"type\":\"regex\",\"error_message\":\"must be numeric\",\"pattern\":\"^\\\\d+(\\\\.\\\\d+)?$\"}]', NULL, NULL, 'models.AirportDistance', 1, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0),
(2816, 2, 234, 'airport_distances', NULL, 'form_id', 'Form Id', NULL, 'numeric', 'Form Id', 'system_mandatory', 'visible', NULL, NULL, NULL, '[{\"type\": \"default\",\"value\": 234}]', 'models.AirportDistance', 0, 'docs#/data-entry', NULL, 0, 0, 1, 0, 0);

UPDATE `fields` SET subscriber_id = @subscriber_id;

COMMIT;